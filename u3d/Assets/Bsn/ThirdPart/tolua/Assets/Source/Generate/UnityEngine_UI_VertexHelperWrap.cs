//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class UnityEngine_UI_VertexHelperWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(UnityEngine.UI.VertexHelper), typeof(System.Object));
		L.RegFunction("Clear", Clear);
		L.RegFunction("PopulateUIVertex", PopulateUIVertex);
		L.RegFunction("SetUIVertex", SetUIVertex);
		L.RegFunction("FillMesh", FillMesh);
		L.RegFunction("Dispose", Dispose);
		L.RegFunction("AddVert", AddVert);
		L.RegFunction("AddTriangle", AddTriangle);
		L.RegFunction("AddUIVertexQuad", AddUIVertexQuad);
		L.RegFunction("AddUIVertexStream", AddUIVertexStream);
		L.RegFunction("AddUIVertexTriangleStream", AddUIVertexTriangleStream);
		L.RegFunction("GetUIVertexStream", GetUIVertexStream);
		L.RegFunction("New", _CreateUnityEngine_UI_VertexHelper);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("currentVertCount", get_currentVertCount, null);
		L.RegVar("currentIndexCount", get_currentIndexCount, null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateUnityEngine_UI_VertexHelper(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				UnityEngine.UI.VertexHelper obj = new UnityEngine.UI.VertexHelper();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else if (count == 1 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Mesh)))
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.CheckUnityObject(L, 1, typeof(UnityEngine.Mesh));
				UnityEngine.UI.VertexHelper obj = new UnityEngine.UI.VertexHelper(arg0);
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: UnityEngine.UI.VertexHelper.New");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Clear(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UnityEngine.UI.VertexHelper obj = (UnityEngine.UI.VertexHelper)ToLua.CheckObject(L, 1, typeof(UnityEngine.UI.VertexHelper));
			obj.Clear();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int PopulateUIVertex(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			UnityEngine.UI.VertexHelper obj = (UnityEngine.UI.VertexHelper)ToLua.CheckObject(L, 1, typeof(UnityEngine.UI.VertexHelper));
			UnityEngine.UIVertex arg0 = (UnityEngine.UIVertex)ToLua.CheckObject(L, 2, typeof(UnityEngine.UIVertex));
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			obj.PopulateUIVertex(ref arg0, arg1);
			ToLua.PushValue(L, arg0);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetUIVertex(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			UnityEngine.UI.VertexHelper obj = (UnityEngine.UI.VertexHelper)ToLua.CheckObject(L, 1, typeof(UnityEngine.UI.VertexHelper));
			UnityEngine.UIVertex arg0 = (UnityEngine.UIVertex)ToLua.CheckObject(L, 2, typeof(UnityEngine.UIVertex));
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			obj.SetUIVertex(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int FillMesh(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.UI.VertexHelper obj = (UnityEngine.UI.VertexHelper)ToLua.CheckObject(L, 1, typeof(UnityEngine.UI.VertexHelper));
			UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.CheckUnityObject(L, 2, typeof(UnityEngine.Mesh));
			obj.FillMesh(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Dispose(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UnityEngine.UI.VertexHelper obj = (UnityEngine.UI.VertexHelper)ToLua.CheckObject(L, 1, typeof(UnityEngine.UI.VertexHelper));
			obj.Dispose();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddVert(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.UI.VertexHelper), typeof(UnityEngine.UIVertex)))
			{
				UnityEngine.UI.VertexHelper obj = (UnityEngine.UI.VertexHelper)ToLua.ToObject(L, 1);
				UnityEngine.UIVertex arg0 = (UnityEngine.UIVertex)ToLua.ToObject(L, 2);
				obj.AddVert(arg0);
				return 0;
			}
			else if (count == 4 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.UI.VertexHelper), typeof(UnityEngine.Vector3), typeof(UnityEngine.Color32), typeof(UnityEngine.Vector2)))
			{
				UnityEngine.UI.VertexHelper obj = (UnityEngine.UI.VertexHelper)ToLua.ToObject(L, 1);
				UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
				UnityEngine.Color32 arg1 = (UnityEngine.Color32)ToLua.ToObject(L, 3);
				UnityEngine.Vector2 arg2 = ToLua.ToVector2(L, 4);
				obj.AddVert(arg0, arg1, arg2);
				return 0;
			}
			else if (count == 7 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.UI.VertexHelper), typeof(UnityEngine.Vector3), typeof(UnityEngine.Color32), typeof(UnityEngine.Vector2), typeof(UnityEngine.Vector2), typeof(UnityEngine.Vector3), typeof(UnityEngine.Vector4)))
			{
				UnityEngine.UI.VertexHelper obj = (UnityEngine.UI.VertexHelper)ToLua.ToObject(L, 1);
				UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
				UnityEngine.Color32 arg1 = (UnityEngine.Color32)ToLua.ToObject(L, 3);
				UnityEngine.Vector2 arg2 = ToLua.ToVector2(L, 4);
				UnityEngine.Vector2 arg3 = ToLua.ToVector2(L, 5);
				UnityEngine.Vector3 arg4 = ToLua.ToVector3(L, 6);
				UnityEngine.Vector4 arg5 = ToLua.ToVector4(L, 7);
				obj.AddVert(arg0, arg1, arg2, arg3, arg4, arg5);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UnityEngine.UI.VertexHelper.AddVert");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddTriangle(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			UnityEngine.UI.VertexHelper obj = (UnityEngine.UI.VertexHelper)ToLua.CheckObject(L, 1, typeof(UnityEngine.UI.VertexHelper));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			int arg2 = (int)LuaDLL.luaL_checknumber(L, 4);
			obj.AddTriangle(arg0, arg1, arg2);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddUIVertexQuad(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.UI.VertexHelper obj = (UnityEngine.UI.VertexHelper)ToLua.CheckObject(L, 1, typeof(UnityEngine.UI.VertexHelper));
			UnityEngine.UIVertex[] arg0 = ToLua.CheckObjectArray<UnityEngine.UIVertex>(L, 2);
			obj.AddUIVertexQuad(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddUIVertexStream(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			UnityEngine.UI.VertexHelper obj = (UnityEngine.UI.VertexHelper)ToLua.CheckObject(L, 1, typeof(UnityEngine.UI.VertexHelper));
			System.Collections.Generic.List<UnityEngine.UIVertex> arg0 = (System.Collections.Generic.List<UnityEngine.UIVertex>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<UnityEngine.UIVertex>));
			System.Collections.Generic.List<int> arg1 = (System.Collections.Generic.List<int>)ToLua.CheckObject(L, 3, typeof(System.Collections.Generic.List<int>));
			obj.AddUIVertexStream(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddUIVertexTriangleStream(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.UI.VertexHelper obj = (UnityEngine.UI.VertexHelper)ToLua.CheckObject(L, 1, typeof(UnityEngine.UI.VertexHelper));
			System.Collections.Generic.List<UnityEngine.UIVertex> arg0 = (System.Collections.Generic.List<UnityEngine.UIVertex>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<UnityEngine.UIVertex>));
			obj.AddUIVertexTriangleStream(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetUIVertexStream(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.UI.VertexHelper obj = (UnityEngine.UI.VertexHelper)ToLua.CheckObject(L, 1, typeof(UnityEngine.UI.VertexHelper));
			System.Collections.Generic.List<UnityEngine.UIVertex> arg0 = (System.Collections.Generic.List<UnityEngine.UIVertex>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<UnityEngine.UIVertex>));
			obj.GetUIVertexStream(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_currentVertCount(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.UI.VertexHelper obj = (UnityEngine.UI.VertexHelper)o;
			int ret = obj.currentVertCount;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index currentVertCount on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_currentIndexCount(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.UI.VertexHelper obj = (UnityEngine.UI.VertexHelper)o;
			int ret = obj.currentIndexCount;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index currentIndexCount on a nil value" : e.Message);
		}
	}
}

