//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class UnityEngine_Rendering_CompareFunctionWrap
{
	public static void Register(LuaState L)
	{
		L.BeginEnum(typeof(UnityEngine.Rendering.CompareFunction));
		L.RegVar("Disabled", get_Disabled, null);
		L.RegVar("Never", get_Never, null);
		L.RegVar("Less", get_Less, null);
		L.RegVar("Equal", get_Equal, null);
		L.RegVar("LessEqual", get_LessEqual, null);
		L.RegVar("Greater", get_Greater, null);
		L.RegVar("NotEqual", get_NotEqual, null);
		L.RegVar("GreaterEqual", get_GreaterEqual, null);
		L.RegVar("Always", get_Always, null);
		L.RegFunction("IntToEnum", IntToEnum);
		L.EndEnum();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Disabled(IntPtr L)
	{
		ToLua.Push(L, UnityEngine.Rendering.CompareFunction.Disabled);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Never(IntPtr L)
	{
		ToLua.Push(L, UnityEngine.Rendering.CompareFunction.Never);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Less(IntPtr L)
	{
		ToLua.Push(L, UnityEngine.Rendering.CompareFunction.Less);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Equal(IntPtr L)
	{
		ToLua.Push(L, UnityEngine.Rendering.CompareFunction.Equal);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_LessEqual(IntPtr L)
	{
		ToLua.Push(L, UnityEngine.Rendering.CompareFunction.LessEqual);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Greater(IntPtr L)
	{
		ToLua.Push(L, UnityEngine.Rendering.CompareFunction.Greater);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_NotEqual(IntPtr L)
	{
		ToLua.Push(L, UnityEngine.Rendering.CompareFunction.NotEqual);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_GreaterEqual(IntPtr L)
	{
		ToLua.Push(L, UnityEngine.Rendering.CompareFunction.GreaterEqual);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Always(IntPtr L)
	{
		ToLua.Push(L, UnityEngine.Rendering.CompareFunction.Always);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IntToEnum(IntPtr L)
	{
		int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
		UnityEngine.Rendering.CompareFunction o = (UnityEngine.Rendering.CompareFunction)arg0;
		ToLua.Push(L, o);
		return 1;
	}
}

