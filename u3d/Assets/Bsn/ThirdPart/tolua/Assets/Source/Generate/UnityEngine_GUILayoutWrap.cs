//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class UnityEngine_GUILayoutWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(UnityEngine.GUILayout), typeof(System.Object));
		L.RegFunction("Label", Label);
		L.RegFunction("Box", Box);
		L.RegFunction("Button", Button);
		L.RegFunction("RepeatButton", RepeatButton);
		L.RegFunction("TextField", TextField);
		L.RegFunction("PasswordField", PasswordField);
		L.RegFunction("TextArea", TextArea);
		L.RegFunction("Toggle", Toggle);
		L.RegFunction("Toolbar", Toolbar);
		L.RegFunction("SelectionGrid", SelectionGrid);
		L.RegFunction("HorizontalSlider", HorizontalSlider);
		L.RegFunction("VerticalSlider", VerticalSlider);
		L.RegFunction("HorizontalScrollbar", HorizontalScrollbar);
		L.RegFunction("VerticalScrollbar", VerticalScrollbar);
		L.RegFunction("Space", Space);
		L.RegFunction("FlexibleSpace", FlexibleSpace);
		L.RegFunction("BeginHorizontal", BeginHorizontal);
		L.RegFunction("EndHorizontal", EndHorizontal);
		L.RegFunction("BeginVertical", BeginVertical);
		L.RegFunction("EndVertical", EndVertical);
		L.RegFunction("BeginArea", BeginArea);
		L.RegFunction("EndArea", EndArea);
		L.RegFunction("BeginScrollView", BeginScrollView);
		L.RegFunction("EndScrollView", EndScrollView);
		L.RegFunction("Window", Window);
		L.RegFunction("Width", Width);
		L.RegFunction("MinWidth", MinWidth);
		L.RegFunction("MaxWidth", MaxWidth);
		L.RegFunction("Height", Height);
		L.RegFunction("MinHeight", MinHeight);
		L.RegFunction("MaxHeight", MaxHeight);
		L.RegFunction("ExpandWidth", ExpandWidth);
		L.RegFunction("ExpandHeight", ExpandHeight);
		L.RegFunction("New", _CreateUnityEngine_GUILayout);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateUnityEngine_GUILayout(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				UnityEngine.GUILayout obj = new UnityEngine.GUILayout();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: UnityEngine.GUILayout.New");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Label(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Texture), typeof(UnityEngine.GUIStyle)) && TypeChecker.CheckParamsType(L, typeof(UnityEngine.GUILayoutOption), 3, count - 2))
			{
				UnityEngine.Texture arg0 = (UnityEngine.Texture)ToLua.ToObject(L, 1);
				UnityEngine.GUIStyle arg1 = (UnityEngine.GUIStyle)ToLua.ToObject(L, 2);
				UnityEngine.GUILayoutOption[] arg2 = ToLua.ToParamsObject<UnityEngine.GUILayoutOption>(L, 3, count - 2);
				UnityEngine.GUILayout.Label(arg0, arg1, arg2);
				return 0;
			}
			else if (TypeChecker.CheckTypes(L, 1, typeof(string), typeof(UnityEngine.GUIStyle)) && TypeChecker.CheckParamsType(L, typeof(UnityEngine.GUILayoutOption), 3, count - 2))
			{
				string arg0 = ToLua.ToString(L, 1);
				UnityEngine.GUIStyle arg1 = (UnityEngine.GUIStyle)ToLua.ToObject(L, 2);
				UnityEngine.GUILayoutOption[] arg2 = ToLua.ToParamsObject<UnityEngine.GUILayoutOption>(L, 3, count - 2);
				UnityEngine.GUILayout.Label(arg0, arg1, arg2);
				return 0;
			}
			else if (TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.GUIContent), typeof(UnityEngine.GUIStyle)) && TypeChecker.CheckParamsType(L, typeof(UnityEngine.GUILayoutOption), 3, count - 2))
			{
				UnityEngine.GUIContent arg0 = (UnityEngine.GUIContent)ToLua.ToObject(L, 1);
				UnityEngine.GUIStyle arg1 = (UnityEngine.GUIStyle)ToLua.ToObject(L, 2);
				UnityEngine.GUILayoutOption[] arg2 = ToLua.ToParamsObject<UnityEngine.GUILayoutOption>(L, 3, count - 2);
				UnityEngine.GUILayout.Label(arg0, arg1, arg2);
				return 0;
			}
			else if (TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Texture)) && TypeChecker.CheckParamsType(L, typeof(UnityEngine.GUILayoutOption), 2, count - 1))
			{
				UnityEngine.Texture arg0 = (UnityEngine.Texture)ToLua.ToObject(L, 1);
				UnityEngine.GUILayoutOption[] arg1 = ToLua.ToParamsObject<UnityEngine.GUILayoutOption>(L, 2, count - 1);
				UnityEngine.GUILayout.Label(arg0, arg1);
				return 0;
			}
			else if (TypeChecker.CheckTypes(L, 1, typeof(string)) && TypeChecker.CheckParamsType(L, typeof(UnityEngine.GUILayoutOption), 2, count - 1))
			{
				string arg0 = ToLua.ToString(L, 1);
				UnityEngine.GUILayoutOption[] arg1 = ToLua.ToParamsObject<UnityEngine.GUILayoutOption>(L, 2, count - 1);
				UnityEngine.GUILayout.Label(arg0, arg1);
				return 0;
			}
			else if (TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.GUIContent)) && TypeChecker.CheckParamsType(L, typeof(UnityEngine.GUILayoutOption), 2, count - 1))
			{
				UnityEngine.GUIContent arg0 = (UnityEngine.GUIContent)ToLua.ToObject(L, 1);
				UnityEngine.GUILayoutOption[] arg1 = ToLua.ToParamsObject<UnityEngine.GUILayoutOption>(L, 2, count - 1);
				UnityEngine.GUILayout.Label(arg0, arg1);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UnityEngine.GUILayout.Label");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Box(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Texture), typeof(UnityEngine.GUIStyle)) && TypeChecker.CheckParamsType(L, typeof(UnityEngine.GUILayoutOption), 3, count - 2))
			{
				UnityEngine.Texture arg0 = (UnityEngine.Texture)ToLua.ToObject(L, 1);
				UnityEngine.GUIStyle arg1 = (UnityEngine.GUIStyle)ToLua.ToObject(L, 2);
				UnityEngine.GUILayoutOption[] arg2 = ToLua.ToParamsObject<UnityEngine.GUILayoutOption>(L, 3, count - 2);
				UnityEngine.GUILayout.Box(arg0, arg1, arg2);
				return 0;
			}
			else if (TypeChecker.CheckTypes(L, 1, typeof(string), typeof(UnityEngine.GUIStyle)) && TypeChecker.CheckParamsType(L, typeof(UnityEngine.GUILayoutOption), 3, count - 2))
			{
				string arg0 = ToLua.ToString(L, 1);
				UnityEngine.GUIStyle arg1 = (UnityEngine.GUIStyle)ToLua.ToObject(L, 2);
				UnityEngine.GUILayoutOption[] arg2 = ToLua.ToParamsObject<UnityEngine.GUILayoutOption>(L, 3, count - 2);
				UnityEngine.GUILayout.Box(arg0, arg1, arg2);
				return 0;
			}
			else if (TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.GUIContent), typeof(UnityEngine.GUIStyle)) && TypeChecker.CheckParamsType(L, typeof(UnityEngine.GUILayoutOption), 3, count - 2))
			{
				UnityEngine.GUIContent arg0 = (UnityEngine.GUIContent)ToLua.ToObject(L, 1);
				UnityEngine.GUIStyle arg1 = (UnityEngine.GUIStyle)ToLua.ToObject(L, 2);
				UnityEngine.GUILayoutOption[] arg2 = ToLua.ToParamsObject<UnityEngine.GUILayoutOption>(L, 3, count - 2);
				UnityEngine.GUILayout.Box(arg0, arg1, arg2);
				return 0;
			}
			else if (TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Texture)) && TypeChecker.CheckParamsType(L, typeof(UnityEngine.GUILayoutOption), 2, count - 1))
			{
				UnityEngine.Texture arg0 = (UnityEngine.Texture)ToLua.ToObject(L, 1);
				UnityEngine.GUILayoutOption[] arg1 = ToLua.ToParamsObject<UnityEngine.GUILayoutOption>(L, 2, count - 1);
				UnityEngine.GUILayout.Box(arg0, arg1);
				return 0;
			}
			else if (TypeChecker.CheckTypes(L, 1, typeof(string)) && TypeChecker.CheckParamsType(L, typeof(UnityEngine.GUILayoutOption), 2, count - 1))
			{
				string arg0 = ToLua.ToString(L, 1);
				UnityEngine.GUILayoutOption[] arg1 = ToLua.ToParamsObject<UnityEngine.GUILayoutOption>(L, 2, count - 1);
				UnityEngine.GUILayout.Box(arg0, arg1);
				return 0;
			}
			else if (TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.GUIContent)) && TypeChecker.CheckParamsType(L, typeof(UnityEngine.GUILayoutOption), 2, count - 1))
			{
				UnityEngine.GUIContent arg0 = (UnityEngine.GUIContent)ToLua.ToObject(L, 1);
				UnityEngine.GUILayoutOption[] arg1 = ToLua.ToParamsObject<UnityEngine.GUILayoutOption>(L, 2, count - 1);
				UnityEngine.GUILayout.Box(arg0, arg1);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UnityEngine.GUILayout.Box");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Button(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Texture), typeof(UnityEngine.GUIStyle)) && TypeChecker.CheckParamsType(L, typeof(UnityEngine.GUILayoutOption), 3, count - 2))
			{
				UnityEngine.Texture arg0 = (UnityEngine.Texture)ToLua.ToObject(L, 1);
				UnityEngine.GUIStyle arg1 = (UnityEngine.GUIStyle)ToLua.ToObject(L, 2);
				UnityEngine.GUILayoutOption[] arg2 = ToLua.ToParamsObject<UnityEngine.GUILayoutOption>(L, 3, count - 2);
				bool o = UnityEngine.GUILayout.Button(arg0, arg1, arg2);
				LuaDLL.lua_pushboolean(L, o);
				return 1;
			}
			else if (TypeChecker.CheckTypes(L, 1, typeof(string), typeof(UnityEngine.GUIStyle)) && TypeChecker.CheckParamsType(L, typeof(UnityEngine.GUILayoutOption), 3, count - 2))
			{
				string arg0 = ToLua.ToString(L, 1);
				UnityEngine.GUIStyle arg1 = (UnityEngine.GUIStyle)ToLua.ToObject(L, 2);
				UnityEngine.GUILayoutOption[] arg2 = ToLua.ToParamsObject<UnityEngine.GUILayoutOption>(L, 3, count - 2);
				bool o = UnityEngine.GUILayout.Button(arg0, arg1, arg2);
				LuaDLL.lua_pushboolean(L, o);
				return 1;
			}
			else if (TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.GUIContent), typeof(UnityEngine.GUIStyle)) && TypeChecker.CheckParamsType(L, typeof(UnityEngine.GUILayoutOption), 3, count - 2))
			{
				UnityEngine.GUIContent arg0 = (UnityEngine.GUIContent)ToLua.ToObject(L, 1);
				UnityEngine.GUIStyle arg1 = (UnityEngine.GUIStyle)ToLua.ToObject(L, 2);
				UnityEngine.GUILayoutOption[] arg2 = ToLua.ToParamsObject<UnityEngine.GUILayoutOption>(L, 3, count - 2);
				bool o = UnityEngine.GUILayout.Button(arg0, arg1, arg2);
				LuaDLL.lua_pushboolean(L, o);
				return 1;
			}
			else if (TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Texture)) && TypeChecker.CheckParamsType(L, typeof(UnityEngine.GUILayoutOption), 2, count - 1))
			{
				UnityEngine.Texture arg0 = (UnityEngine.Texture)ToLua.ToObject(L, 1);
				UnityEngine.GUILayoutOption[] arg1 = ToLua.ToParamsObject<UnityEngine.GUILayoutOption>(L, 2, count - 1);
				bool o = UnityEngine.GUILayout.Button(arg0, arg1);
				LuaDLL.lua_pushboolean(L, o);
				return 1;
			}
			else if (TypeChecker.CheckTypes(L, 1, typeof(string)) && TypeChecker.CheckParamsType(L, typeof(UnityEngine.GUILayoutOption), 2, count - 1))
			{
				string arg0 = ToLua.ToString(L, 1);
				UnityEngine.GUILayoutOption[] arg1 = ToLua.ToParamsObject<UnityEngine.GUILayoutOption>(L, 2, count - 1);
				bool o = UnityEngine.GUILayout.Button(arg0, arg1);
				LuaDLL.lua_pushboolean(L, o);
				return 1;
			}
			else if (TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.GUIContent)) && TypeChecker.CheckParamsType(L, typeof(UnityEngine.GUILayoutOption), 2, count - 1))
			{
				UnityEngine.GUIContent arg0 = (UnityEngine.GUIContent)ToLua.ToObject(L, 1);
				UnityEngine.GUILayoutOption[] arg1 = ToLua.ToParamsObject<UnityEngine.GUILayoutOption>(L, 2, count - 1);
				bool o = UnityEngine.GUILayout.Button(arg0, arg1);
				LuaDLL.lua_pushboolean(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UnityEngine.GUILayout.Button");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RepeatButton(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Texture), typeof(UnityEngine.GUIStyle)) && TypeChecker.CheckParamsType(L, typeof(UnityEngine.GUILayoutOption), 3, count - 2))
			{
				UnityEngine.Texture arg0 = (UnityEngine.Texture)ToLua.ToObject(L, 1);
				UnityEngine.GUIStyle arg1 = (UnityEngine.GUIStyle)ToLua.ToObject(L, 2);
				UnityEngine.GUILayoutOption[] arg2 = ToLua.ToParamsObject<UnityEngine.GUILayoutOption>(L, 3, count - 2);
				bool o = UnityEngine.GUILayout.RepeatButton(arg0, arg1, arg2);
				LuaDLL.lua_pushboolean(L, o);
				return 1;
			}
			else if (TypeChecker.CheckTypes(L, 1, typeof(string), typeof(UnityEngine.GUIStyle)) && TypeChecker.CheckParamsType(L, typeof(UnityEngine.GUILayoutOption), 3, count - 2))
			{
				string arg0 = ToLua.ToString(L, 1);
				UnityEngine.GUIStyle arg1 = (UnityEngine.GUIStyle)ToLua.ToObject(L, 2);
				UnityEngine.GUILayoutOption[] arg2 = ToLua.ToParamsObject<UnityEngine.GUILayoutOption>(L, 3, count - 2);
				bool o = UnityEngine.GUILayout.RepeatButton(arg0, arg1, arg2);
				LuaDLL.lua_pushboolean(L, o);
				return 1;
			}
			else if (TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.GUIContent), typeof(UnityEngine.GUIStyle)) && TypeChecker.CheckParamsType(L, typeof(UnityEngine.GUILayoutOption), 3, count - 2))
			{
				UnityEngine.GUIContent arg0 = (UnityEngine.GUIContent)ToLua.ToObject(L, 1);
				UnityEngine.GUIStyle arg1 = (UnityEngine.GUIStyle)ToLua.ToObject(L, 2);
				UnityEngine.GUILayoutOption[] arg2 = ToLua.ToParamsObject<UnityEngine.GUILayoutOption>(L, 3, count - 2);
				bool o = UnityEngine.GUILayout.RepeatButton(arg0, arg1, arg2);
				LuaDLL.lua_pushboolean(L, o);
				return 1;
			}
			else if (TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Texture)) && TypeChecker.CheckParamsType(L, typeof(UnityEngine.GUILayoutOption), 2, count - 1))
			{
				UnityEngine.Texture arg0 = (UnityEngine.Texture)ToLua.ToObject(L, 1);
				UnityEngine.GUILayoutOption[] arg1 = ToLua.ToParamsObject<UnityEngine.GUILayoutOption>(L, 2, count - 1);
				bool o = UnityEngine.GUILayout.RepeatButton(arg0, arg1);
				LuaDLL.lua_pushboolean(L, o);
				return 1;
			}
			else if (TypeChecker.CheckTypes(L, 1, typeof(string)) && TypeChecker.CheckParamsType(L, typeof(UnityEngine.GUILayoutOption), 2, count - 1))
			{
				string arg0 = ToLua.ToString(L, 1);
				UnityEngine.GUILayoutOption[] arg1 = ToLua.ToParamsObject<UnityEngine.GUILayoutOption>(L, 2, count - 1);
				bool o = UnityEngine.GUILayout.RepeatButton(arg0, arg1);
				LuaDLL.lua_pushboolean(L, o);
				return 1;
			}
			else if (TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.GUIContent)) && TypeChecker.CheckParamsType(L, typeof(UnityEngine.GUILayoutOption), 2, count - 1))
			{
				UnityEngine.GUIContent arg0 = (UnityEngine.GUIContent)ToLua.ToObject(L, 1);
				UnityEngine.GUILayoutOption[] arg1 = ToLua.ToParamsObject<UnityEngine.GUILayoutOption>(L, 2, count - 1);
				bool o = UnityEngine.GUILayout.RepeatButton(arg0, arg1);
				LuaDLL.lua_pushboolean(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UnityEngine.GUILayout.RepeatButton");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int TextField(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (TypeChecker.CheckTypes(L, 1, typeof(string), typeof(int), typeof(UnityEngine.GUIStyle)) && TypeChecker.CheckParamsType(L, typeof(UnityEngine.GUILayoutOption), 4, count - 3))
			{
				string arg0 = ToLua.ToString(L, 1);
				int arg1 = (int)LuaDLL.lua_tonumber(L, 2);
				UnityEngine.GUIStyle arg2 = (UnityEngine.GUIStyle)ToLua.ToObject(L, 3);
				UnityEngine.GUILayoutOption[] arg3 = ToLua.ToParamsObject<UnityEngine.GUILayoutOption>(L, 4, count - 3);
				string o = UnityEngine.GUILayout.TextField(arg0, arg1, arg2, arg3);
				LuaDLL.lua_pushstring(L, o);
				return 1;
			}
			else if (TypeChecker.CheckTypes(L, 1, typeof(string), typeof(UnityEngine.GUIStyle)) && TypeChecker.CheckParamsType(L, typeof(UnityEngine.GUILayoutOption), 3, count - 2))
			{
				string arg0 = ToLua.ToString(L, 1);
				UnityEngine.GUIStyle arg1 = (UnityEngine.GUIStyle)ToLua.ToObject(L, 2);
				UnityEngine.GUILayoutOption[] arg2 = ToLua.ToParamsObject<UnityEngine.GUILayoutOption>(L, 3, count - 2);
				string o = UnityEngine.GUILayout.TextField(arg0, arg1, arg2);
				LuaDLL.lua_pushstring(L, o);
				return 1;
			}
			else if (TypeChecker.CheckTypes(L, 1, typeof(string), typeof(int)) && TypeChecker.CheckParamsType(L, typeof(UnityEngine.GUILayoutOption), 3, count - 2))
			{
				string arg0 = ToLua.ToString(L, 1);
				int arg1 = (int)LuaDLL.lua_tonumber(L, 2);
				UnityEngine.GUILayoutOption[] arg2 = ToLua.ToParamsObject<UnityEngine.GUILayoutOption>(L, 3, count - 2);
				string o = UnityEngine.GUILayout.TextField(arg0, arg1, arg2);
				LuaDLL.lua_pushstring(L, o);
				return 1;
			}
			else if (TypeChecker.CheckTypes(L, 1, typeof(string)) && TypeChecker.CheckParamsType(L, typeof(UnityEngine.GUILayoutOption), 2, count - 1))
			{
				string arg0 = ToLua.ToString(L, 1);
				UnityEngine.GUILayoutOption[] arg1 = ToLua.ToParamsObject<UnityEngine.GUILayoutOption>(L, 2, count - 1);
				string o = UnityEngine.GUILayout.TextField(arg0, arg1);
				LuaDLL.lua_pushstring(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UnityEngine.GUILayout.TextField");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int PasswordField(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (TypeChecker.CheckTypes(L, 1, typeof(string), typeof(char), typeof(int), typeof(UnityEngine.GUIStyle)) && TypeChecker.CheckParamsType(L, typeof(UnityEngine.GUILayoutOption), 5, count - 4))
			{
				string arg0 = ToLua.ToString(L, 1);
				char arg1 = (char)LuaDLL.lua_tonumber(L, 2);
				int arg2 = (int)LuaDLL.lua_tonumber(L, 3);
				UnityEngine.GUIStyle arg3 = (UnityEngine.GUIStyle)ToLua.ToObject(L, 4);
				UnityEngine.GUILayoutOption[] arg4 = ToLua.ToParamsObject<UnityEngine.GUILayoutOption>(L, 5, count - 4);
				string o = UnityEngine.GUILayout.PasswordField(arg0, arg1, arg2, arg3, arg4);
				LuaDLL.lua_pushstring(L, o);
				return 1;
			}
			else if (TypeChecker.CheckTypes(L, 1, typeof(string), typeof(char), typeof(UnityEngine.GUIStyle)) && TypeChecker.CheckParamsType(L, typeof(UnityEngine.GUILayoutOption), 4, count - 3))
			{
				string arg0 = ToLua.ToString(L, 1);
				char arg1 = (char)LuaDLL.lua_tonumber(L, 2);
				UnityEngine.GUIStyle arg2 = (UnityEngine.GUIStyle)ToLua.ToObject(L, 3);
				UnityEngine.GUILayoutOption[] arg3 = ToLua.ToParamsObject<UnityEngine.GUILayoutOption>(L, 4, count - 3);
				string o = UnityEngine.GUILayout.PasswordField(arg0, arg1, arg2, arg3);
				LuaDLL.lua_pushstring(L, o);
				return 1;
			}
			else if (TypeChecker.CheckTypes(L, 1, typeof(string), typeof(char), typeof(int)) && TypeChecker.CheckParamsType(L, typeof(UnityEngine.GUILayoutOption), 4, count - 3))
			{
				string arg0 = ToLua.ToString(L, 1);
				char arg1 = (char)LuaDLL.lua_tonumber(L, 2);
				int arg2 = (int)LuaDLL.lua_tonumber(L, 3);
				UnityEngine.GUILayoutOption[] arg3 = ToLua.ToParamsObject<UnityEngine.GUILayoutOption>(L, 4, count - 3);
				string o = UnityEngine.GUILayout.PasswordField(arg0, arg1, arg2, arg3);
				LuaDLL.lua_pushstring(L, o);
				return 1;
			}
			else if (TypeChecker.CheckTypes(L, 1, typeof(string), typeof(char)) && TypeChecker.CheckParamsType(L, typeof(UnityEngine.GUILayoutOption), 3, count - 2))
			{
				string arg0 = ToLua.ToString(L, 1);
				char arg1 = (char)LuaDLL.lua_tonumber(L, 2);
				UnityEngine.GUILayoutOption[] arg2 = ToLua.ToParamsObject<UnityEngine.GUILayoutOption>(L, 3, count - 2);
				string o = UnityEngine.GUILayout.PasswordField(arg0, arg1, arg2);
				LuaDLL.lua_pushstring(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UnityEngine.GUILayout.PasswordField");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int TextArea(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (TypeChecker.CheckTypes(L, 1, typeof(string), typeof(int), typeof(UnityEngine.GUIStyle)) && TypeChecker.CheckParamsType(L, typeof(UnityEngine.GUILayoutOption), 4, count - 3))
			{
				string arg0 = ToLua.ToString(L, 1);
				int arg1 = (int)LuaDLL.lua_tonumber(L, 2);
				UnityEngine.GUIStyle arg2 = (UnityEngine.GUIStyle)ToLua.ToObject(L, 3);
				UnityEngine.GUILayoutOption[] arg3 = ToLua.ToParamsObject<UnityEngine.GUILayoutOption>(L, 4, count - 3);
				string o = UnityEngine.GUILayout.TextArea(arg0, arg1, arg2, arg3);
				LuaDLL.lua_pushstring(L, o);
				return 1;
			}
			else if (TypeChecker.CheckTypes(L, 1, typeof(string), typeof(UnityEngine.GUIStyle)) && TypeChecker.CheckParamsType(L, typeof(UnityEngine.GUILayoutOption), 3, count - 2))
			{
				string arg0 = ToLua.ToString(L, 1);
				UnityEngine.GUIStyle arg1 = (UnityEngine.GUIStyle)ToLua.ToObject(L, 2);
				UnityEngine.GUILayoutOption[] arg2 = ToLua.ToParamsObject<UnityEngine.GUILayoutOption>(L, 3, count - 2);
				string o = UnityEngine.GUILayout.TextArea(arg0, arg1, arg2);
				LuaDLL.lua_pushstring(L, o);
				return 1;
			}
			else if (TypeChecker.CheckTypes(L, 1, typeof(string), typeof(int)) && TypeChecker.CheckParamsType(L, typeof(UnityEngine.GUILayoutOption), 3, count - 2))
			{
				string arg0 = ToLua.ToString(L, 1);
				int arg1 = (int)LuaDLL.lua_tonumber(L, 2);
				UnityEngine.GUILayoutOption[] arg2 = ToLua.ToParamsObject<UnityEngine.GUILayoutOption>(L, 3, count - 2);
				string o = UnityEngine.GUILayout.TextArea(arg0, arg1, arg2);
				LuaDLL.lua_pushstring(L, o);
				return 1;
			}
			else if (TypeChecker.CheckTypes(L, 1, typeof(string)) && TypeChecker.CheckParamsType(L, typeof(UnityEngine.GUILayoutOption), 2, count - 1))
			{
				string arg0 = ToLua.ToString(L, 1);
				UnityEngine.GUILayoutOption[] arg1 = ToLua.ToParamsObject<UnityEngine.GUILayoutOption>(L, 2, count - 1);
				string o = UnityEngine.GUILayout.TextArea(arg0, arg1);
				LuaDLL.lua_pushstring(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UnityEngine.GUILayout.TextArea");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Toggle(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (TypeChecker.CheckTypes(L, 1, typeof(bool), typeof(UnityEngine.Texture), typeof(UnityEngine.GUIStyle)) && TypeChecker.CheckParamsType(L, typeof(UnityEngine.GUILayoutOption), 4, count - 3))
			{
				bool arg0 = LuaDLL.lua_toboolean(L, 1);
				UnityEngine.Texture arg1 = (UnityEngine.Texture)ToLua.ToObject(L, 2);
				UnityEngine.GUIStyle arg2 = (UnityEngine.GUIStyle)ToLua.ToObject(L, 3);
				UnityEngine.GUILayoutOption[] arg3 = ToLua.ToParamsObject<UnityEngine.GUILayoutOption>(L, 4, count - 3);
				bool o = UnityEngine.GUILayout.Toggle(arg0, arg1, arg2, arg3);
				LuaDLL.lua_pushboolean(L, o);
				return 1;
			}
			else if (TypeChecker.CheckTypes(L, 1, typeof(bool), typeof(string), typeof(UnityEngine.GUIStyle)) && TypeChecker.CheckParamsType(L, typeof(UnityEngine.GUILayoutOption), 4, count - 3))
			{
				bool arg0 = LuaDLL.lua_toboolean(L, 1);
				string arg1 = ToLua.ToString(L, 2);
				UnityEngine.GUIStyle arg2 = (UnityEngine.GUIStyle)ToLua.ToObject(L, 3);
				UnityEngine.GUILayoutOption[] arg3 = ToLua.ToParamsObject<UnityEngine.GUILayoutOption>(L, 4, count - 3);
				bool o = UnityEngine.GUILayout.Toggle(arg0, arg1, arg2, arg3);
				LuaDLL.lua_pushboolean(L, o);
				return 1;
			}
			else if (TypeChecker.CheckTypes(L, 1, typeof(bool), typeof(UnityEngine.GUIContent), typeof(UnityEngine.GUIStyle)) && TypeChecker.CheckParamsType(L, typeof(UnityEngine.GUILayoutOption), 4, count - 3))
			{
				bool arg0 = LuaDLL.lua_toboolean(L, 1);
				UnityEngine.GUIContent arg1 = (UnityEngine.GUIContent)ToLua.ToObject(L, 2);
				UnityEngine.GUIStyle arg2 = (UnityEngine.GUIStyle)ToLua.ToObject(L, 3);
				UnityEngine.GUILayoutOption[] arg3 = ToLua.ToParamsObject<UnityEngine.GUILayoutOption>(L, 4, count - 3);
				bool o = UnityEngine.GUILayout.Toggle(arg0, arg1, arg2, arg3);
				LuaDLL.lua_pushboolean(L, o);
				return 1;
			}
			else if (TypeChecker.CheckTypes(L, 1, typeof(bool), typeof(UnityEngine.Texture)) && TypeChecker.CheckParamsType(L, typeof(UnityEngine.GUILayoutOption), 3, count - 2))
			{
				bool arg0 = LuaDLL.lua_toboolean(L, 1);
				UnityEngine.Texture arg1 = (UnityEngine.Texture)ToLua.ToObject(L, 2);
				UnityEngine.GUILayoutOption[] arg2 = ToLua.ToParamsObject<UnityEngine.GUILayoutOption>(L, 3, count - 2);
				bool o = UnityEngine.GUILayout.Toggle(arg0, arg1, arg2);
				LuaDLL.lua_pushboolean(L, o);
				return 1;
			}
			else if (TypeChecker.CheckTypes(L, 1, typeof(bool), typeof(string)) && TypeChecker.CheckParamsType(L, typeof(UnityEngine.GUILayoutOption), 3, count - 2))
			{
				bool arg0 = LuaDLL.lua_toboolean(L, 1);
				string arg1 = ToLua.ToString(L, 2);
				UnityEngine.GUILayoutOption[] arg2 = ToLua.ToParamsObject<UnityEngine.GUILayoutOption>(L, 3, count - 2);
				bool o = UnityEngine.GUILayout.Toggle(arg0, arg1, arg2);
				LuaDLL.lua_pushboolean(L, o);
				return 1;
			}
			else if (TypeChecker.CheckTypes(L, 1, typeof(bool), typeof(UnityEngine.GUIContent)) && TypeChecker.CheckParamsType(L, typeof(UnityEngine.GUILayoutOption), 3, count - 2))
			{
				bool arg0 = LuaDLL.lua_toboolean(L, 1);
				UnityEngine.GUIContent arg1 = (UnityEngine.GUIContent)ToLua.ToObject(L, 2);
				UnityEngine.GUILayoutOption[] arg2 = ToLua.ToParamsObject<UnityEngine.GUILayoutOption>(L, 3, count - 2);
				bool o = UnityEngine.GUILayout.Toggle(arg0, arg1, arg2);
				LuaDLL.lua_pushboolean(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UnityEngine.GUILayout.Toggle");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Toolbar(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (TypeChecker.CheckTypes(L, 1, typeof(int), typeof(string[]), typeof(UnityEngine.GUIStyle)) && TypeChecker.CheckParamsType(L, typeof(UnityEngine.GUILayoutOption), 4, count - 3))
			{
				int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
				string[] arg1 = ToLua.CheckStringArray(L, 2);
				UnityEngine.GUIStyle arg2 = (UnityEngine.GUIStyle)ToLua.ToObject(L, 3);
				UnityEngine.GUILayoutOption[] arg3 = ToLua.ToParamsObject<UnityEngine.GUILayoutOption>(L, 4, count - 3);
				int o = UnityEngine.GUILayout.Toolbar(arg0, arg1, arg2, arg3);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else if (TypeChecker.CheckTypes(L, 1, typeof(int), typeof(UnityEngine.Texture[]), typeof(UnityEngine.GUIStyle)) && TypeChecker.CheckParamsType(L, typeof(UnityEngine.GUILayoutOption), 4, count - 3))
			{
				int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
				UnityEngine.Texture[] arg1 = ToLua.CheckObjectArray<UnityEngine.Texture>(L, 2);
				UnityEngine.GUIStyle arg2 = (UnityEngine.GUIStyle)ToLua.ToObject(L, 3);
				UnityEngine.GUILayoutOption[] arg3 = ToLua.ToParamsObject<UnityEngine.GUILayoutOption>(L, 4, count - 3);
				int o = UnityEngine.GUILayout.Toolbar(arg0, arg1, arg2, arg3);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else if (TypeChecker.CheckTypes(L, 1, typeof(int), typeof(UnityEngine.GUIContent[]), typeof(UnityEngine.GUIStyle)) && TypeChecker.CheckParamsType(L, typeof(UnityEngine.GUILayoutOption), 4, count - 3))
			{
				int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
				UnityEngine.GUIContent[] arg1 = ToLua.CheckObjectArray<UnityEngine.GUIContent>(L, 2);
				UnityEngine.GUIStyle arg2 = (UnityEngine.GUIStyle)ToLua.ToObject(L, 3);
				UnityEngine.GUILayoutOption[] arg3 = ToLua.ToParamsObject<UnityEngine.GUILayoutOption>(L, 4, count - 3);
				int o = UnityEngine.GUILayout.Toolbar(arg0, arg1, arg2, arg3);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else if (TypeChecker.CheckTypes(L, 1, typeof(int), typeof(string[])) && TypeChecker.CheckParamsType(L, typeof(UnityEngine.GUILayoutOption), 3, count - 2))
			{
				int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
				string[] arg1 = ToLua.CheckStringArray(L, 2);
				UnityEngine.GUILayoutOption[] arg2 = ToLua.ToParamsObject<UnityEngine.GUILayoutOption>(L, 3, count - 2);
				int o = UnityEngine.GUILayout.Toolbar(arg0, arg1, arg2);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else if (TypeChecker.CheckTypes(L, 1, typeof(int), typeof(UnityEngine.Texture[])) && TypeChecker.CheckParamsType(L, typeof(UnityEngine.GUILayoutOption), 3, count - 2))
			{
				int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
				UnityEngine.Texture[] arg1 = ToLua.CheckObjectArray<UnityEngine.Texture>(L, 2);
				UnityEngine.GUILayoutOption[] arg2 = ToLua.ToParamsObject<UnityEngine.GUILayoutOption>(L, 3, count - 2);
				int o = UnityEngine.GUILayout.Toolbar(arg0, arg1, arg2);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else if (TypeChecker.CheckTypes(L, 1, typeof(int), typeof(UnityEngine.GUIContent[])) && TypeChecker.CheckParamsType(L, typeof(UnityEngine.GUILayoutOption), 3, count - 2))
			{
				int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
				UnityEngine.GUIContent[] arg1 = ToLua.CheckObjectArray<UnityEngine.GUIContent>(L, 2);
				UnityEngine.GUILayoutOption[] arg2 = ToLua.ToParamsObject<UnityEngine.GUILayoutOption>(L, 3, count - 2);
				int o = UnityEngine.GUILayout.Toolbar(arg0, arg1, arg2);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UnityEngine.GUILayout.Toolbar");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SelectionGrid(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (TypeChecker.CheckTypes(L, 1, typeof(int), typeof(string[]), typeof(int), typeof(UnityEngine.GUIStyle)) && TypeChecker.CheckParamsType(L, typeof(UnityEngine.GUILayoutOption), 5, count - 4))
			{
				int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
				string[] arg1 = ToLua.CheckStringArray(L, 2);
				int arg2 = (int)LuaDLL.lua_tonumber(L, 3);
				UnityEngine.GUIStyle arg3 = (UnityEngine.GUIStyle)ToLua.ToObject(L, 4);
				UnityEngine.GUILayoutOption[] arg4 = ToLua.ToParamsObject<UnityEngine.GUILayoutOption>(L, 5, count - 4);
				int o = UnityEngine.GUILayout.SelectionGrid(arg0, arg1, arg2, arg3, arg4);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else if (TypeChecker.CheckTypes(L, 1, typeof(int), typeof(UnityEngine.Texture[]), typeof(int), typeof(UnityEngine.GUIStyle)) && TypeChecker.CheckParamsType(L, typeof(UnityEngine.GUILayoutOption), 5, count - 4))
			{
				int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
				UnityEngine.Texture[] arg1 = ToLua.CheckObjectArray<UnityEngine.Texture>(L, 2);
				int arg2 = (int)LuaDLL.lua_tonumber(L, 3);
				UnityEngine.GUIStyle arg3 = (UnityEngine.GUIStyle)ToLua.ToObject(L, 4);
				UnityEngine.GUILayoutOption[] arg4 = ToLua.ToParamsObject<UnityEngine.GUILayoutOption>(L, 5, count - 4);
				int o = UnityEngine.GUILayout.SelectionGrid(arg0, arg1, arg2, arg3, arg4);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else if (TypeChecker.CheckTypes(L, 1, typeof(int), typeof(UnityEngine.GUIContent[]), typeof(int), typeof(UnityEngine.GUIStyle)) && TypeChecker.CheckParamsType(L, typeof(UnityEngine.GUILayoutOption), 5, count - 4))
			{
				int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
				UnityEngine.GUIContent[] arg1 = ToLua.CheckObjectArray<UnityEngine.GUIContent>(L, 2);
				int arg2 = (int)LuaDLL.lua_tonumber(L, 3);
				UnityEngine.GUIStyle arg3 = (UnityEngine.GUIStyle)ToLua.ToObject(L, 4);
				UnityEngine.GUILayoutOption[] arg4 = ToLua.ToParamsObject<UnityEngine.GUILayoutOption>(L, 5, count - 4);
				int o = UnityEngine.GUILayout.SelectionGrid(arg0, arg1, arg2, arg3, arg4);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else if (TypeChecker.CheckTypes(L, 1, typeof(int), typeof(string[]), typeof(int)) && TypeChecker.CheckParamsType(L, typeof(UnityEngine.GUILayoutOption), 4, count - 3))
			{
				int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
				string[] arg1 = ToLua.CheckStringArray(L, 2);
				int arg2 = (int)LuaDLL.lua_tonumber(L, 3);
				UnityEngine.GUILayoutOption[] arg3 = ToLua.ToParamsObject<UnityEngine.GUILayoutOption>(L, 4, count - 3);
				int o = UnityEngine.GUILayout.SelectionGrid(arg0, arg1, arg2, arg3);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else if (TypeChecker.CheckTypes(L, 1, typeof(int), typeof(UnityEngine.Texture[]), typeof(int)) && TypeChecker.CheckParamsType(L, typeof(UnityEngine.GUILayoutOption), 4, count - 3))
			{
				int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
				UnityEngine.Texture[] arg1 = ToLua.CheckObjectArray<UnityEngine.Texture>(L, 2);
				int arg2 = (int)LuaDLL.lua_tonumber(L, 3);
				UnityEngine.GUILayoutOption[] arg3 = ToLua.ToParamsObject<UnityEngine.GUILayoutOption>(L, 4, count - 3);
				int o = UnityEngine.GUILayout.SelectionGrid(arg0, arg1, arg2, arg3);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else if (TypeChecker.CheckTypes(L, 1, typeof(int), typeof(UnityEngine.GUIContent[]), typeof(int)) && TypeChecker.CheckParamsType(L, typeof(UnityEngine.GUILayoutOption), 4, count - 3))
			{
				int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
				UnityEngine.GUIContent[] arg1 = ToLua.CheckObjectArray<UnityEngine.GUIContent>(L, 2);
				int arg2 = (int)LuaDLL.lua_tonumber(L, 3);
				UnityEngine.GUILayoutOption[] arg3 = ToLua.ToParamsObject<UnityEngine.GUILayoutOption>(L, 4, count - 3);
				int o = UnityEngine.GUILayout.SelectionGrid(arg0, arg1, arg2, arg3);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UnityEngine.GUILayout.SelectionGrid");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int HorizontalSlider(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (TypeChecker.CheckTypes(L, 1, typeof(float), typeof(float), typeof(float), typeof(UnityEngine.GUIStyle), typeof(UnityEngine.GUIStyle)) && TypeChecker.CheckParamsType(L, typeof(UnityEngine.GUILayoutOption), 6, count - 5))
			{
				float arg0 = (float)LuaDLL.lua_tonumber(L, 1);
				float arg1 = (float)LuaDLL.lua_tonumber(L, 2);
				float arg2 = (float)LuaDLL.lua_tonumber(L, 3);
				UnityEngine.GUIStyle arg3 = (UnityEngine.GUIStyle)ToLua.ToObject(L, 4);
				UnityEngine.GUIStyle arg4 = (UnityEngine.GUIStyle)ToLua.ToObject(L, 5);
				UnityEngine.GUILayoutOption[] arg5 = ToLua.ToParamsObject<UnityEngine.GUILayoutOption>(L, 6, count - 5);
				float o = UnityEngine.GUILayout.HorizontalSlider(arg0, arg1, arg2, arg3, arg4, arg5);
				LuaDLL.lua_pushnumber(L, o);
				return 1;
			}
			else if (TypeChecker.CheckTypes(L, 1, typeof(float), typeof(float), typeof(float)) && TypeChecker.CheckParamsType(L, typeof(UnityEngine.GUILayoutOption), 4, count - 3))
			{
				float arg0 = (float)LuaDLL.lua_tonumber(L, 1);
				float arg1 = (float)LuaDLL.lua_tonumber(L, 2);
				float arg2 = (float)LuaDLL.lua_tonumber(L, 3);
				UnityEngine.GUILayoutOption[] arg3 = ToLua.ToParamsObject<UnityEngine.GUILayoutOption>(L, 4, count - 3);
				float o = UnityEngine.GUILayout.HorizontalSlider(arg0, arg1, arg2, arg3);
				LuaDLL.lua_pushnumber(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UnityEngine.GUILayout.HorizontalSlider");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int VerticalSlider(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (TypeChecker.CheckTypes(L, 1, typeof(float), typeof(float), typeof(float), typeof(UnityEngine.GUIStyle), typeof(UnityEngine.GUIStyle)) && TypeChecker.CheckParamsType(L, typeof(UnityEngine.GUILayoutOption), 6, count - 5))
			{
				float arg0 = (float)LuaDLL.lua_tonumber(L, 1);
				float arg1 = (float)LuaDLL.lua_tonumber(L, 2);
				float arg2 = (float)LuaDLL.lua_tonumber(L, 3);
				UnityEngine.GUIStyle arg3 = (UnityEngine.GUIStyle)ToLua.ToObject(L, 4);
				UnityEngine.GUIStyle arg4 = (UnityEngine.GUIStyle)ToLua.ToObject(L, 5);
				UnityEngine.GUILayoutOption[] arg5 = ToLua.ToParamsObject<UnityEngine.GUILayoutOption>(L, 6, count - 5);
				float o = UnityEngine.GUILayout.VerticalSlider(arg0, arg1, arg2, arg3, arg4, arg5);
				LuaDLL.lua_pushnumber(L, o);
				return 1;
			}
			else if (TypeChecker.CheckTypes(L, 1, typeof(float), typeof(float), typeof(float)) && TypeChecker.CheckParamsType(L, typeof(UnityEngine.GUILayoutOption), 4, count - 3))
			{
				float arg0 = (float)LuaDLL.lua_tonumber(L, 1);
				float arg1 = (float)LuaDLL.lua_tonumber(L, 2);
				float arg2 = (float)LuaDLL.lua_tonumber(L, 3);
				UnityEngine.GUILayoutOption[] arg3 = ToLua.ToParamsObject<UnityEngine.GUILayoutOption>(L, 4, count - 3);
				float o = UnityEngine.GUILayout.VerticalSlider(arg0, arg1, arg2, arg3);
				LuaDLL.lua_pushnumber(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UnityEngine.GUILayout.VerticalSlider");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int HorizontalScrollbar(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (TypeChecker.CheckTypes(L, 1, typeof(float), typeof(float), typeof(float), typeof(float), typeof(UnityEngine.GUIStyle)) && TypeChecker.CheckParamsType(L, typeof(UnityEngine.GUILayoutOption), 6, count - 5))
			{
				float arg0 = (float)LuaDLL.lua_tonumber(L, 1);
				float arg1 = (float)LuaDLL.lua_tonumber(L, 2);
				float arg2 = (float)LuaDLL.lua_tonumber(L, 3);
				float arg3 = (float)LuaDLL.lua_tonumber(L, 4);
				UnityEngine.GUIStyle arg4 = (UnityEngine.GUIStyle)ToLua.ToObject(L, 5);
				UnityEngine.GUILayoutOption[] arg5 = ToLua.ToParamsObject<UnityEngine.GUILayoutOption>(L, 6, count - 5);
				float o = UnityEngine.GUILayout.HorizontalScrollbar(arg0, arg1, arg2, arg3, arg4, arg5);
				LuaDLL.lua_pushnumber(L, o);
				return 1;
			}
			else if (TypeChecker.CheckTypes(L, 1, typeof(float), typeof(float), typeof(float), typeof(float)) && TypeChecker.CheckParamsType(L, typeof(UnityEngine.GUILayoutOption), 5, count - 4))
			{
				float arg0 = (float)LuaDLL.lua_tonumber(L, 1);
				float arg1 = (float)LuaDLL.lua_tonumber(L, 2);
				float arg2 = (float)LuaDLL.lua_tonumber(L, 3);
				float arg3 = (float)LuaDLL.lua_tonumber(L, 4);
				UnityEngine.GUILayoutOption[] arg4 = ToLua.ToParamsObject<UnityEngine.GUILayoutOption>(L, 5, count - 4);
				float o = UnityEngine.GUILayout.HorizontalScrollbar(arg0, arg1, arg2, arg3, arg4);
				LuaDLL.lua_pushnumber(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UnityEngine.GUILayout.HorizontalScrollbar");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int VerticalScrollbar(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (TypeChecker.CheckTypes(L, 1, typeof(float), typeof(float), typeof(float), typeof(float), typeof(UnityEngine.GUIStyle)) && TypeChecker.CheckParamsType(L, typeof(UnityEngine.GUILayoutOption), 6, count - 5))
			{
				float arg0 = (float)LuaDLL.lua_tonumber(L, 1);
				float arg1 = (float)LuaDLL.lua_tonumber(L, 2);
				float arg2 = (float)LuaDLL.lua_tonumber(L, 3);
				float arg3 = (float)LuaDLL.lua_tonumber(L, 4);
				UnityEngine.GUIStyle arg4 = (UnityEngine.GUIStyle)ToLua.ToObject(L, 5);
				UnityEngine.GUILayoutOption[] arg5 = ToLua.ToParamsObject<UnityEngine.GUILayoutOption>(L, 6, count - 5);
				float o = UnityEngine.GUILayout.VerticalScrollbar(arg0, arg1, arg2, arg3, arg4, arg5);
				LuaDLL.lua_pushnumber(L, o);
				return 1;
			}
			else if (TypeChecker.CheckTypes(L, 1, typeof(float), typeof(float), typeof(float), typeof(float)) && TypeChecker.CheckParamsType(L, typeof(UnityEngine.GUILayoutOption), 5, count - 4))
			{
				float arg0 = (float)LuaDLL.lua_tonumber(L, 1);
				float arg1 = (float)LuaDLL.lua_tonumber(L, 2);
				float arg2 = (float)LuaDLL.lua_tonumber(L, 3);
				float arg3 = (float)LuaDLL.lua_tonumber(L, 4);
				UnityEngine.GUILayoutOption[] arg4 = ToLua.ToParamsObject<UnityEngine.GUILayoutOption>(L, 5, count - 4);
				float o = UnityEngine.GUILayout.VerticalScrollbar(arg0, arg1, arg2, arg3, arg4);
				LuaDLL.lua_pushnumber(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UnityEngine.GUILayout.VerticalScrollbar");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Space(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 1);
			UnityEngine.GUILayout.Space(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int FlexibleSpace(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			UnityEngine.GUILayout.FlexibleSpace();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int BeginHorizontal(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Texture), typeof(UnityEngine.GUIStyle)) && TypeChecker.CheckParamsType(L, typeof(UnityEngine.GUILayoutOption), 3, count - 2))
			{
				UnityEngine.Texture arg0 = (UnityEngine.Texture)ToLua.ToObject(L, 1);
				UnityEngine.GUIStyle arg1 = (UnityEngine.GUIStyle)ToLua.ToObject(L, 2);
				UnityEngine.GUILayoutOption[] arg2 = ToLua.ToParamsObject<UnityEngine.GUILayoutOption>(L, 3, count - 2);
				UnityEngine.GUILayout.BeginHorizontal(arg0, arg1, arg2);
				return 0;
			}
			else if (TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.GUIContent), typeof(UnityEngine.GUIStyle)) && TypeChecker.CheckParamsType(L, typeof(UnityEngine.GUILayoutOption), 3, count - 2))
			{
				UnityEngine.GUIContent arg0 = (UnityEngine.GUIContent)ToLua.ToObject(L, 1);
				UnityEngine.GUIStyle arg1 = (UnityEngine.GUIStyle)ToLua.ToObject(L, 2);
				UnityEngine.GUILayoutOption[] arg2 = ToLua.ToParamsObject<UnityEngine.GUILayoutOption>(L, 3, count - 2);
				UnityEngine.GUILayout.BeginHorizontal(arg0, arg1, arg2);
				return 0;
			}
			else if (TypeChecker.CheckTypes(L, 1, typeof(string), typeof(UnityEngine.GUIStyle)) && TypeChecker.CheckParamsType(L, typeof(UnityEngine.GUILayoutOption), 3, count - 2))
			{
				string arg0 = ToLua.ToString(L, 1);
				UnityEngine.GUIStyle arg1 = (UnityEngine.GUIStyle)ToLua.ToObject(L, 2);
				UnityEngine.GUILayoutOption[] arg2 = ToLua.ToParamsObject<UnityEngine.GUILayoutOption>(L, 3, count - 2);
				UnityEngine.GUILayout.BeginHorizontal(arg0, arg1, arg2);
				return 0;
			}
			else if (TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.GUIStyle)) && TypeChecker.CheckParamsType(L, typeof(UnityEngine.GUILayoutOption), 2, count - 1))
			{
				UnityEngine.GUIStyle arg0 = (UnityEngine.GUIStyle)ToLua.ToObject(L, 1);
				UnityEngine.GUILayoutOption[] arg1 = ToLua.ToParamsObject<UnityEngine.GUILayoutOption>(L, 2, count - 1);
				UnityEngine.GUILayout.BeginHorizontal(arg0, arg1);
				return 0;
			}
			else if (TypeChecker.CheckParamsType(L, typeof(UnityEngine.GUILayoutOption), 1, count))
			{
				UnityEngine.GUILayoutOption[] arg0 = ToLua.ToParamsObject<UnityEngine.GUILayoutOption>(L, 1, count);
				UnityEngine.GUILayout.BeginHorizontal(arg0);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UnityEngine.GUILayout.BeginHorizontal");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int EndHorizontal(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			UnityEngine.GUILayout.EndHorizontal();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int BeginVertical(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Texture), typeof(UnityEngine.GUIStyle)) && TypeChecker.CheckParamsType(L, typeof(UnityEngine.GUILayoutOption), 3, count - 2))
			{
				UnityEngine.Texture arg0 = (UnityEngine.Texture)ToLua.ToObject(L, 1);
				UnityEngine.GUIStyle arg1 = (UnityEngine.GUIStyle)ToLua.ToObject(L, 2);
				UnityEngine.GUILayoutOption[] arg2 = ToLua.ToParamsObject<UnityEngine.GUILayoutOption>(L, 3, count - 2);
				UnityEngine.GUILayout.BeginVertical(arg0, arg1, arg2);
				return 0;
			}
			else if (TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.GUIContent), typeof(UnityEngine.GUIStyle)) && TypeChecker.CheckParamsType(L, typeof(UnityEngine.GUILayoutOption), 3, count - 2))
			{
				UnityEngine.GUIContent arg0 = (UnityEngine.GUIContent)ToLua.ToObject(L, 1);
				UnityEngine.GUIStyle arg1 = (UnityEngine.GUIStyle)ToLua.ToObject(L, 2);
				UnityEngine.GUILayoutOption[] arg2 = ToLua.ToParamsObject<UnityEngine.GUILayoutOption>(L, 3, count - 2);
				UnityEngine.GUILayout.BeginVertical(arg0, arg1, arg2);
				return 0;
			}
			else if (TypeChecker.CheckTypes(L, 1, typeof(string), typeof(UnityEngine.GUIStyle)) && TypeChecker.CheckParamsType(L, typeof(UnityEngine.GUILayoutOption), 3, count - 2))
			{
				string arg0 = ToLua.ToString(L, 1);
				UnityEngine.GUIStyle arg1 = (UnityEngine.GUIStyle)ToLua.ToObject(L, 2);
				UnityEngine.GUILayoutOption[] arg2 = ToLua.ToParamsObject<UnityEngine.GUILayoutOption>(L, 3, count - 2);
				UnityEngine.GUILayout.BeginVertical(arg0, arg1, arg2);
				return 0;
			}
			else if (TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.GUIStyle)) && TypeChecker.CheckParamsType(L, typeof(UnityEngine.GUILayoutOption), 2, count - 1))
			{
				UnityEngine.GUIStyle arg0 = (UnityEngine.GUIStyle)ToLua.ToObject(L, 1);
				UnityEngine.GUILayoutOption[] arg1 = ToLua.ToParamsObject<UnityEngine.GUILayoutOption>(L, 2, count - 1);
				UnityEngine.GUILayout.BeginVertical(arg0, arg1);
				return 0;
			}
			else if (TypeChecker.CheckParamsType(L, typeof(UnityEngine.GUILayoutOption), 1, count))
			{
				UnityEngine.GUILayoutOption[] arg0 = ToLua.ToParamsObject<UnityEngine.GUILayoutOption>(L, 1, count);
				UnityEngine.GUILayout.BeginVertical(arg0);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UnityEngine.GUILayout.BeginVertical");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int EndVertical(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			UnityEngine.GUILayout.EndVertical();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int BeginArea(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 1 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Rect)))
			{
				UnityEngine.Rect arg0 = (UnityEngine.Rect)ToLua.ToObject(L, 1);
				UnityEngine.GUILayout.BeginArea(arg0);
				return 0;
			}
			else if (count == 2 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Rect), typeof(UnityEngine.GUIContent)))
			{
				UnityEngine.Rect arg0 = (UnityEngine.Rect)ToLua.ToObject(L, 1);
				UnityEngine.GUIContent arg1 = (UnityEngine.GUIContent)ToLua.ToObject(L, 2);
				UnityEngine.GUILayout.BeginArea(arg0, arg1);
				return 0;
			}
			else if (count == 2 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Rect), typeof(UnityEngine.GUIStyle)))
			{
				UnityEngine.Rect arg0 = (UnityEngine.Rect)ToLua.ToObject(L, 1);
				UnityEngine.GUIStyle arg1 = (UnityEngine.GUIStyle)ToLua.ToObject(L, 2);
				UnityEngine.GUILayout.BeginArea(arg0, arg1);
				return 0;
			}
			else if (count == 2 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Rect), typeof(string)))
			{
				UnityEngine.Rect arg0 = (UnityEngine.Rect)ToLua.ToObject(L, 1);
				string arg1 = ToLua.ToString(L, 2);
				UnityEngine.GUILayout.BeginArea(arg0, arg1);
				return 0;
			}
			else if (count == 2 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Rect), typeof(UnityEngine.Texture)))
			{
				UnityEngine.Rect arg0 = (UnityEngine.Rect)ToLua.ToObject(L, 1);
				UnityEngine.Texture arg1 = (UnityEngine.Texture)ToLua.ToObject(L, 2);
				UnityEngine.GUILayout.BeginArea(arg0, arg1);
				return 0;
			}
			else if (count == 3 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Rect), typeof(UnityEngine.GUIContent), typeof(UnityEngine.GUIStyle)))
			{
				UnityEngine.Rect arg0 = (UnityEngine.Rect)ToLua.ToObject(L, 1);
				UnityEngine.GUIContent arg1 = (UnityEngine.GUIContent)ToLua.ToObject(L, 2);
				UnityEngine.GUIStyle arg2 = (UnityEngine.GUIStyle)ToLua.ToObject(L, 3);
				UnityEngine.GUILayout.BeginArea(arg0, arg1, arg2);
				return 0;
			}
			else if (count == 3 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Rect), typeof(UnityEngine.Texture), typeof(UnityEngine.GUIStyle)))
			{
				UnityEngine.Rect arg0 = (UnityEngine.Rect)ToLua.ToObject(L, 1);
				UnityEngine.Texture arg1 = (UnityEngine.Texture)ToLua.ToObject(L, 2);
				UnityEngine.GUIStyle arg2 = (UnityEngine.GUIStyle)ToLua.ToObject(L, 3);
				UnityEngine.GUILayout.BeginArea(arg0, arg1, arg2);
				return 0;
			}
			else if (count == 3 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Rect), typeof(string), typeof(UnityEngine.GUIStyle)))
			{
				UnityEngine.Rect arg0 = (UnityEngine.Rect)ToLua.ToObject(L, 1);
				string arg1 = ToLua.ToString(L, 2);
				UnityEngine.GUIStyle arg2 = (UnityEngine.GUIStyle)ToLua.ToObject(L, 3);
				UnityEngine.GUILayout.BeginArea(arg0, arg1, arg2);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UnityEngine.GUILayout.BeginArea");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int EndArea(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			UnityEngine.GUILayout.EndArea();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int BeginScrollView(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Vector2), typeof(UnityEngine.GUIStyle)))
			{
				UnityEngine.Vector2 arg0 = ToLua.ToVector2(L, 1);
				UnityEngine.GUIStyle arg1 = (UnityEngine.GUIStyle)ToLua.ToObject(L, 2);
				UnityEngine.Vector2 o = UnityEngine.GUILayout.BeginScrollView(arg0, arg1);
				ToLua.Push(L, o);
				return 1;
			}
			else if (TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Vector2), typeof(bool), typeof(bool), typeof(UnityEngine.GUIStyle), typeof(UnityEngine.GUIStyle), typeof(UnityEngine.GUIStyle)) && TypeChecker.CheckParamsType(L, typeof(UnityEngine.GUILayoutOption), 7, count - 6))
			{
				UnityEngine.Vector2 arg0 = ToLua.ToVector2(L, 1);
				bool arg1 = LuaDLL.lua_toboolean(L, 2);
				bool arg2 = LuaDLL.lua_toboolean(L, 3);
				UnityEngine.GUIStyle arg3 = (UnityEngine.GUIStyle)ToLua.ToObject(L, 4);
				UnityEngine.GUIStyle arg4 = (UnityEngine.GUIStyle)ToLua.ToObject(L, 5);
				UnityEngine.GUIStyle arg5 = (UnityEngine.GUIStyle)ToLua.ToObject(L, 6);
				UnityEngine.GUILayoutOption[] arg6 = ToLua.ToParamsObject<UnityEngine.GUILayoutOption>(L, 7, count - 6);
				UnityEngine.Vector2 o = UnityEngine.GUILayout.BeginScrollView(arg0, arg1, arg2, arg3, arg4, arg5, arg6);
				ToLua.Push(L, o);
				return 1;
			}
			else if (TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Vector2), typeof(bool), typeof(bool), typeof(UnityEngine.GUIStyle), typeof(UnityEngine.GUIStyle)) && TypeChecker.CheckParamsType(L, typeof(UnityEngine.GUILayoutOption), 6, count - 5))
			{
				UnityEngine.Vector2 arg0 = ToLua.ToVector2(L, 1);
				bool arg1 = LuaDLL.lua_toboolean(L, 2);
				bool arg2 = LuaDLL.lua_toboolean(L, 3);
				UnityEngine.GUIStyle arg3 = (UnityEngine.GUIStyle)ToLua.ToObject(L, 4);
				UnityEngine.GUIStyle arg4 = (UnityEngine.GUIStyle)ToLua.ToObject(L, 5);
				UnityEngine.GUILayoutOption[] arg5 = ToLua.ToParamsObject<UnityEngine.GUILayoutOption>(L, 6, count - 5);
				UnityEngine.Vector2 o = UnityEngine.GUILayout.BeginScrollView(arg0, arg1, arg2, arg3, arg4, arg5);
				ToLua.Push(L, o);
				return 1;
			}
			else if (TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Vector2), typeof(bool), typeof(bool)) && TypeChecker.CheckParamsType(L, typeof(UnityEngine.GUILayoutOption), 4, count - 3))
			{
				UnityEngine.Vector2 arg0 = ToLua.ToVector2(L, 1);
				bool arg1 = LuaDLL.lua_toboolean(L, 2);
				bool arg2 = LuaDLL.lua_toboolean(L, 3);
				UnityEngine.GUILayoutOption[] arg3 = ToLua.ToParamsObject<UnityEngine.GUILayoutOption>(L, 4, count - 3);
				UnityEngine.Vector2 o = UnityEngine.GUILayout.BeginScrollView(arg0, arg1, arg2, arg3);
				ToLua.Push(L, o);
				return 1;
			}
			else if (TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Vector2), typeof(UnityEngine.GUIStyle), typeof(UnityEngine.GUIStyle)) && TypeChecker.CheckParamsType(L, typeof(UnityEngine.GUILayoutOption), 4, count - 3))
			{
				UnityEngine.Vector2 arg0 = ToLua.ToVector2(L, 1);
				UnityEngine.GUIStyle arg1 = (UnityEngine.GUIStyle)ToLua.ToObject(L, 2);
				UnityEngine.GUIStyle arg2 = (UnityEngine.GUIStyle)ToLua.ToObject(L, 3);
				UnityEngine.GUILayoutOption[] arg3 = ToLua.ToParamsObject<UnityEngine.GUILayoutOption>(L, 4, count - 3);
				UnityEngine.Vector2 o = UnityEngine.GUILayout.BeginScrollView(arg0, arg1, arg2, arg3);
				ToLua.Push(L, o);
				return 1;
			}
			else if (TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Vector2), typeof(UnityEngine.GUIStyle)) && TypeChecker.CheckParamsType(L, typeof(UnityEngine.GUILayoutOption), 3, count - 2))
			{
				UnityEngine.Vector2 arg0 = ToLua.ToVector2(L, 1);
				UnityEngine.GUIStyle arg1 = (UnityEngine.GUIStyle)ToLua.ToObject(L, 2);
				UnityEngine.GUILayoutOption[] arg2 = ToLua.ToParamsObject<UnityEngine.GUILayoutOption>(L, 3, count - 2);
				UnityEngine.Vector2 o = UnityEngine.GUILayout.BeginScrollView(arg0, arg1, arg2);
				ToLua.Push(L, o);
				return 1;
			}
			else if (TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Vector2)) && TypeChecker.CheckParamsType(L, typeof(UnityEngine.GUILayoutOption), 2, count - 1))
			{
				UnityEngine.Vector2 arg0 = ToLua.ToVector2(L, 1);
				UnityEngine.GUILayoutOption[] arg1 = ToLua.ToParamsObject<UnityEngine.GUILayoutOption>(L, 2, count - 1);
				UnityEngine.Vector2 o = UnityEngine.GUILayout.BeginScrollView(arg0, arg1);
				ToLua.Push(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UnityEngine.GUILayout.BeginScrollView");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int EndScrollView(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			UnityEngine.GUILayout.EndScrollView();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Window(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (TypeChecker.CheckTypes(L, 1, typeof(int), typeof(UnityEngine.Rect), typeof(UnityEngine.GUI.WindowFunction), typeof(string), typeof(UnityEngine.GUIStyle)) && TypeChecker.CheckParamsType(L, typeof(UnityEngine.GUILayoutOption), 6, count - 5))
			{
				int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
				UnityEngine.Rect arg1 = (UnityEngine.Rect)ToLua.ToObject(L, 2);
				UnityEngine.GUI.WindowFunction arg2 = null;
				LuaTypes funcType3 = LuaDLL.lua_type(L, 3);

				if (funcType3 != LuaTypes.LUA_TFUNCTION)
				{
					 arg2 = (UnityEngine.GUI.WindowFunction)ToLua.ToObject(L, 3);
				}
				else
				{
					LuaFunction func = ToLua.ToLuaFunction(L, 3);
					arg2 = DelegateFactory.CreateDelegate(typeof(UnityEngine.GUI.WindowFunction), func) as UnityEngine.GUI.WindowFunction;
				}

				string arg3 = ToLua.ToString(L, 4);
				UnityEngine.GUIStyle arg4 = (UnityEngine.GUIStyle)ToLua.ToObject(L, 5);
				UnityEngine.GUILayoutOption[] arg5 = ToLua.ToParamsObject<UnityEngine.GUILayoutOption>(L, 6, count - 5);
				UnityEngine.Rect o = UnityEngine.GUILayout.Window(arg0, arg1, arg2, arg3, arg4, arg5);
				ToLua.PushValue(L, o);
				return 1;
			}
			else if (TypeChecker.CheckTypes(L, 1, typeof(int), typeof(UnityEngine.Rect), typeof(UnityEngine.GUI.WindowFunction), typeof(UnityEngine.Texture), typeof(UnityEngine.GUIStyle)) && TypeChecker.CheckParamsType(L, typeof(UnityEngine.GUILayoutOption), 6, count - 5))
			{
				int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
				UnityEngine.Rect arg1 = (UnityEngine.Rect)ToLua.ToObject(L, 2);
				UnityEngine.GUI.WindowFunction arg2 = null;
				LuaTypes funcType3 = LuaDLL.lua_type(L, 3);

				if (funcType3 != LuaTypes.LUA_TFUNCTION)
				{
					 arg2 = (UnityEngine.GUI.WindowFunction)ToLua.ToObject(L, 3);
				}
				else
				{
					LuaFunction func = ToLua.ToLuaFunction(L, 3);
					arg2 = DelegateFactory.CreateDelegate(typeof(UnityEngine.GUI.WindowFunction), func) as UnityEngine.GUI.WindowFunction;
				}

				UnityEngine.Texture arg3 = (UnityEngine.Texture)ToLua.ToObject(L, 4);
				UnityEngine.GUIStyle arg4 = (UnityEngine.GUIStyle)ToLua.ToObject(L, 5);
				UnityEngine.GUILayoutOption[] arg5 = ToLua.ToParamsObject<UnityEngine.GUILayoutOption>(L, 6, count - 5);
				UnityEngine.Rect o = UnityEngine.GUILayout.Window(arg0, arg1, arg2, arg3, arg4, arg5);
				ToLua.PushValue(L, o);
				return 1;
			}
			else if (TypeChecker.CheckTypes(L, 1, typeof(int), typeof(UnityEngine.Rect), typeof(UnityEngine.GUI.WindowFunction), typeof(UnityEngine.GUIContent), typeof(UnityEngine.GUIStyle)) && TypeChecker.CheckParamsType(L, typeof(UnityEngine.GUILayoutOption), 6, count - 5))
			{
				int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
				UnityEngine.Rect arg1 = (UnityEngine.Rect)ToLua.ToObject(L, 2);
				UnityEngine.GUI.WindowFunction arg2 = null;
				LuaTypes funcType3 = LuaDLL.lua_type(L, 3);

				if (funcType3 != LuaTypes.LUA_TFUNCTION)
				{
					 arg2 = (UnityEngine.GUI.WindowFunction)ToLua.ToObject(L, 3);
				}
				else
				{
					LuaFunction func = ToLua.ToLuaFunction(L, 3);
					arg2 = DelegateFactory.CreateDelegate(typeof(UnityEngine.GUI.WindowFunction), func) as UnityEngine.GUI.WindowFunction;
				}

				UnityEngine.GUIContent arg3 = (UnityEngine.GUIContent)ToLua.ToObject(L, 4);
				UnityEngine.GUIStyle arg4 = (UnityEngine.GUIStyle)ToLua.ToObject(L, 5);
				UnityEngine.GUILayoutOption[] arg5 = ToLua.ToParamsObject<UnityEngine.GUILayoutOption>(L, 6, count - 5);
				UnityEngine.Rect o = UnityEngine.GUILayout.Window(arg0, arg1, arg2, arg3, arg4, arg5);
				ToLua.PushValue(L, o);
				return 1;
			}
			else if (TypeChecker.CheckTypes(L, 1, typeof(int), typeof(UnityEngine.Rect), typeof(UnityEngine.GUI.WindowFunction), typeof(string)) && TypeChecker.CheckParamsType(L, typeof(UnityEngine.GUILayoutOption), 5, count - 4))
			{
				int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
				UnityEngine.Rect arg1 = (UnityEngine.Rect)ToLua.ToObject(L, 2);
				UnityEngine.GUI.WindowFunction arg2 = null;
				LuaTypes funcType3 = LuaDLL.lua_type(L, 3);

				if (funcType3 != LuaTypes.LUA_TFUNCTION)
				{
					 arg2 = (UnityEngine.GUI.WindowFunction)ToLua.ToObject(L, 3);
				}
				else
				{
					LuaFunction func = ToLua.ToLuaFunction(L, 3);
					arg2 = DelegateFactory.CreateDelegate(typeof(UnityEngine.GUI.WindowFunction), func) as UnityEngine.GUI.WindowFunction;
				}

				string arg3 = ToLua.ToString(L, 4);
				UnityEngine.GUILayoutOption[] arg4 = ToLua.ToParamsObject<UnityEngine.GUILayoutOption>(L, 5, count - 4);
				UnityEngine.Rect o = UnityEngine.GUILayout.Window(arg0, arg1, arg2, arg3, arg4);
				ToLua.PushValue(L, o);
				return 1;
			}
			else if (TypeChecker.CheckTypes(L, 1, typeof(int), typeof(UnityEngine.Rect), typeof(UnityEngine.GUI.WindowFunction), typeof(UnityEngine.Texture)) && TypeChecker.CheckParamsType(L, typeof(UnityEngine.GUILayoutOption), 5, count - 4))
			{
				int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
				UnityEngine.Rect arg1 = (UnityEngine.Rect)ToLua.ToObject(L, 2);
				UnityEngine.GUI.WindowFunction arg2 = null;
				LuaTypes funcType3 = LuaDLL.lua_type(L, 3);

				if (funcType3 != LuaTypes.LUA_TFUNCTION)
				{
					 arg2 = (UnityEngine.GUI.WindowFunction)ToLua.ToObject(L, 3);
				}
				else
				{
					LuaFunction func = ToLua.ToLuaFunction(L, 3);
					arg2 = DelegateFactory.CreateDelegate(typeof(UnityEngine.GUI.WindowFunction), func) as UnityEngine.GUI.WindowFunction;
				}

				UnityEngine.Texture arg3 = (UnityEngine.Texture)ToLua.ToObject(L, 4);
				UnityEngine.GUILayoutOption[] arg4 = ToLua.ToParamsObject<UnityEngine.GUILayoutOption>(L, 5, count - 4);
				UnityEngine.Rect o = UnityEngine.GUILayout.Window(arg0, arg1, arg2, arg3, arg4);
				ToLua.PushValue(L, o);
				return 1;
			}
			else if (TypeChecker.CheckTypes(L, 1, typeof(int), typeof(UnityEngine.Rect), typeof(UnityEngine.GUI.WindowFunction), typeof(UnityEngine.GUIContent)) && TypeChecker.CheckParamsType(L, typeof(UnityEngine.GUILayoutOption), 5, count - 4))
			{
				int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
				UnityEngine.Rect arg1 = (UnityEngine.Rect)ToLua.ToObject(L, 2);
				UnityEngine.GUI.WindowFunction arg2 = null;
				LuaTypes funcType3 = LuaDLL.lua_type(L, 3);

				if (funcType3 != LuaTypes.LUA_TFUNCTION)
				{
					 arg2 = (UnityEngine.GUI.WindowFunction)ToLua.ToObject(L, 3);
				}
				else
				{
					LuaFunction func = ToLua.ToLuaFunction(L, 3);
					arg2 = DelegateFactory.CreateDelegate(typeof(UnityEngine.GUI.WindowFunction), func) as UnityEngine.GUI.WindowFunction;
				}

				UnityEngine.GUIContent arg3 = (UnityEngine.GUIContent)ToLua.ToObject(L, 4);
				UnityEngine.GUILayoutOption[] arg4 = ToLua.ToParamsObject<UnityEngine.GUILayoutOption>(L, 5, count - 4);
				UnityEngine.Rect o = UnityEngine.GUILayout.Window(arg0, arg1, arg2, arg3, arg4);
				ToLua.PushValue(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UnityEngine.GUILayout.Window");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Width(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 1);
			UnityEngine.GUILayoutOption o = UnityEngine.GUILayout.Width(arg0);
			ToLua.PushObject(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int MinWidth(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 1);
			UnityEngine.GUILayoutOption o = UnityEngine.GUILayout.MinWidth(arg0);
			ToLua.PushObject(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int MaxWidth(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 1);
			UnityEngine.GUILayoutOption o = UnityEngine.GUILayout.MaxWidth(arg0);
			ToLua.PushObject(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Height(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 1);
			UnityEngine.GUILayoutOption o = UnityEngine.GUILayout.Height(arg0);
			ToLua.PushObject(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int MinHeight(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 1);
			UnityEngine.GUILayoutOption o = UnityEngine.GUILayout.MinHeight(arg0);
			ToLua.PushObject(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int MaxHeight(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 1);
			UnityEngine.GUILayoutOption o = UnityEngine.GUILayout.MaxHeight(arg0);
			ToLua.PushObject(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ExpandWidth(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			bool arg0 = LuaDLL.luaL_checkboolean(L, 1);
			UnityEngine.GUILayoutOption o = UnityEngine.GUILayout.ExpandWidth(arg0);
			ToLua.PushObject(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ExpandHeight(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			bool arg0 = LuaDLL.luaL_checkboolean(L, 1);
			UnityEngine.GUILayoutOption o = UnityEngine.GUILayout.ExpandHeight(arg0);
			ToLua.PushObject(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

