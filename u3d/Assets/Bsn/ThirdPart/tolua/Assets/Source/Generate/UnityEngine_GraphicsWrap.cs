//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class UnityEngine_GraphicsWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(UnityEngine.Graphics), typeof(System.Object));
		L.RegFunction("DrawMesh", DrawMesh);
		L.RegFunction("DrawMeshNow", DrawMeshNow);
		L.RegFunction("DrawProcedural", DrawProcedural);
		L.RegFunction("DrawProceduralIndirect", DrawProceduralIndirect);
		L.RegFunction("DrawTexture", DrawTexture);
		L.RegFunction("ExecuteCommandBuffer", ExecuteCommandBuffer);
		L.RegFunction("Blit", Blit);
		L.RegFunction("BlitMultiTap", BlitMultiTap);
		L.RegFunction("SetRandomWriteTarget", SetRandomWriteTarget);
		L.RegFunction("ClearRandomWriteTargets", ClearRandomWriteTargets);
		L.RegFunction("SetRenderTarget", SetRenderTarget);
		L.RegFunction("New", _CreateUnityEngine_Graphics);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("activeColorBuffer", get_activeColorBuffer, null);
		L.RegVar("activeDepthBuffer", get_activeDepthBuffer, null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateUnityEngine_Graphics(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				UnityEngine.Graphics obj = new UnityEngine.Graphics();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: UnityEngine.Graphics.New");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DrawMesh(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 4 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Mesh), typeof(UnityEngine.Matrix4x4), typeof(UnityEngine.Material), typeof(int)))
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.ToObject(L, 1);
				UnityEngine.Matrix4x4 arg1 = (UnityEngine.Matrix4x4)ToLua.ToObject(L, 2);
				UnityEngine.Material arg2 = (UnityEngine.Material)ToLua.ToObject(L, 3);
				int arg3 = (int)LuaDLL.lua_tonumber(L, 4);
				UnityEngine.Graphics.DrawMesh(arg0, arg1, arg2, arg3);
				return 0;
			}
			else if (count == 5 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Mesh), typeof(UnityEngine.Vector3), typeof(UnityEngine.Quaternion), typeof(UnityEngine.Material), typeof(int)))
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.ToObject(L, 1);
				UnityEngine.Vector3 arg1 = ToLua.ToVector3(L, 2);
				UnityEngine.Quaternion arg2 = ToLua.ToQuaternion(L, 3);
				UnityEngine.Material arg3 = (UnityEngine.Material)ToLua.ToObject(L, 4);
				int arg4 = (int)LuaDLL.lua_tonumber(L, 5);
				UnityEngine.Graphics.DrawMesh(arg0, arg1, arg2, arg3, arg4);
				return 0;
			}
			else if (count == 5 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Mesh), typeof(UnityEngine.Matrix4x4), typeof(UnityEngine.Material), typeof(int), typeof(UnityEngine.Camera)))
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.ToObject(L, 1);
				UnityEngine.Matrix4x4 arg1 = (UnityEngine.Matrix4x4)ToLua.ToObject(L, 2);
				UnityEngine.Material arg2 = (UnityEngine.Material)ToLua.ToObject(L, 3);
				int arg3 = (int)LuaDLL.lua_tonumber(L, 4);
				UnityEngine.Camera arg4 = (UnityEngine.Camera)ToLua.ToObject(L, 5);
				UnityEngine.Graphics.DrawMesh(arg0, arg1, arg2, arg3, arg4);
				return 0;
			}
			else if (count == 6 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Mesh), typeof(UnityEngine.Matrix4x4), typeof(UnityEngine.Material), typeof(int), typeof(UnityEngine.Camera), typeof(int)))
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.ToObject(L, 1);
				UnityEngine.Matrix4x4 arg1 = (UnityEngine.Matrix4x4)ToLua.ToObject(L, 2);
				UnityEngine.Material arg2 = (UnityEngine.Material)ToLua.ToObject(L, 3);
				int arg3 = (int)LuaDLL.lua_tonumber(L, 4);
				UnityEngine.Camera arg4 = (UnityEngine.Camera)ToLua.ToObject(L, 5);
				int arg5 = (int)LuaDLL.lua_tonumber(L, 6);
				UnityEngine.Graphics.DrawMesh(arg0, arg1, arg2, arg3, arg4, arg5);
				return 0;
			}
			else if (count == 6 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Mesh), typeof(UnityEngine.Vector3), typeof(UnityEngine.Quaternion), typeof(UnityEngine.Material), typeof(int), typeof(UnityEngine.Camera)))
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.ToObject(L, 1);
				UnityEngine.Vector3 arg1 = ToLua.ToVector3(L, 2);
				UnityEngine.Quaternion arg2 = ToLua.ToQuaternion(L, 3);
				UnityEngine.Material arg3 = (UnityEngine.Material)ToLua.ToObject(L, 4);
				int arg4 = (int)LuaDLL.lua_tonumber(L, 5);
				UnityEngine.Camera arg5 = (UnityEngine.Camera)ToLua.ToObject(L, 6);
				UnityEngine.Graphics.DrawMesh(arg0, arg1, arg2, arg3, arg4, arg5);
				return 0;
			}
			else if (count == 7 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Mesh), typeof(UnityEngine.Matrix4x4), typeof(UnityEngine.Material), typeof(int), typeof(UnityEngine.Camera), typeof(int), typeof(UnityEngine.MaterialPropertyBlock)))
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.ToObject(L, 1);
				UnityEngine.Matrix4x4 arg1 = (UnityEngine.Matrix4x4)ToLua.ToObject(L, 2);
				UnityEngine.Material arg2 = (UnityEngine.Material)ToLua.ToObject(L, 3);
				int arg3 = (int)LuaDLL.lua_tonumber(L, 4);
				UnityEngine.Camera arg4 = (UnityEngine.Camera)ToLua.ToObject(L, 5);
				int arg5 = (int)LuaDLL.lua_tonumber(L, 6);
				UnityEngine.MaterialPropertyBlock arg6 = (UnityEngine.MaterialPropertyBlock)ToLua.ToObject(L, 7);
				UnityEngine.Graphics.DrawMesh(arg0, arg1, arg2, arg3, arg4, arg5, arg6);
				return 0;
			}
			else if (count == 7 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Mesh), typeof(UnityEngine.Vector3), typeof(UnityEngine.Quaternion), typeof(UnityEngine.Material), typeof(int), typeof(UnityEngine.Camera), typeof(int)))
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.ToObject(L, 1);
				UnityEngine.Vector3 arg1 = ToLua.ToVector3(L, 2);
				UnityEngine.Quaternion arg2 = ToLua.ToQuaternion(L, 3);
				UnityEngine.Material arg3 = (UnityEngine.Material)ToLua.ToObject(L, 4);
				int arg4 = (int)LuaDLL.lua_tonumber(L, 5);
				UnityEngine.Camera arg5 = (UnityEngine.Camera)ToLua.ToObject(L, 6);
				int arg6 = (int)LuaDLL.lua_tonumber(L, 7);
				UnityEngine.Graphics.DrawMesh(arg0, arg1, arg2, arg3, arg4, arg5, arg6);
				return 0;
			}
			else if (count == 8 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Mesh), typeof(UnityEngine.Matrix4x4), typeof(UnityEngine.Material), typeof(int), typeof(UnityEngine.Camera), typeof(int), typeof(UnityEngine.MaterialPropertyBlock), typeof(bool)))
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.ToObject(L, 1);
				UnityEngine.Matrix4x4 arg1 = (UnityEngine.Matrix4x4)ToLua.ToObject(L, 2);
				UnityEngine.Material arg2 = (UnityEngine.Material)ToLua.ToObject(L, 3);
				int arg3 = (int)LuaDLL.lua_tonumber(L, 4);
				UnityEngine.Camera arg4 = (UnityEngine.Camera)ToLua.ToObject(L, 5);
				int arg5 = (int)LuaDLL.lua_tonumber(L, 6);
				UnityEngine.MaterialPropertyBlock arg6 = (UnityEngine.MaterialPropertyBlock)ToLua.ToObject(L, 7);
				bool arg7 = LuaDLL.lua_toboolean(L, 8);
				UnityEngine.Graphics.DrawMesh(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7);
				return 0;
			}
			else if (count == 8 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Mesh), typeof(UnityEngine.Matrix4x4), typeof(UnityEngine.Material), typeof(int), typeof(UnityEngine.Camera), typeof(int), typeof(UnityEngine.MaterialPropertyBlock), typeof(UnityEngine.Rendering.ShadowCastingMode)))
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.ToObject(L, 1);
				UnityEngine.Matrix4x4 arg1 = (UnityEngine.Matrix4x4)ToLua.ToObject(L, 2);
				UnityEngine.Material arg2 = (UnityEngine.Material)ToLua.ToObject(L, 3);
				int arg3 = (int)LuaDLL.lua_tonumber(L, 4);
				UnityEngine.Camera arg4 = (UnityEngine.Camera)ToLua.ToObject(L, 5);
				int arg5 = (int)LuaDLL.lua_tonumber(L, 6);
				UnityEngine.MaterialPropertyBlock arg6 = (UnityEngine.MaterialPropertyBlock)ToLua.ToObject(L, 7);
				UnityEngine.Rendering.ShadowCastingMode arg7 = (UnityEngine.Rendering.ShadowCastingMode)ToLua.ToObject(L, 8);
				UnityEngine.Graphics.DrawMesh(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7);
				return 0;
			}
			else if (count == 8 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Mesh), typeof(UnityEngine.Vector3), typeof(UnityEngine.Quaternion), typeof(UnityEngine.Material), typeof(int), typeof(UnityEngine.Camera), typeof(int), typeof(UnityEngine.MaterialPropertyBlock)))
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.ToObject(L, 1);
				UnityEngine.Vector3 arg1 = ToLua.ToVector3(L, 2);
				UnityEngine.Quaternion arg2 = ToLua.ToQuaternion(L, 3);
				UnityEngine.Material arg3 = (UnityEngine.Material)ToLua.ToObject(L, 4);
				int arg4 = (int)LuaDLL.lua_tonumber(L, 5);
				UnityEngine.Camera arg5 = (UnityEngine.Camera)ToLua.ToObject(L, 6);
				int arg6 = (int)LuaDLL.lua_tonumber(L, 7);
				UnityEngine.MaterialPropertyBlock arg7 = (UnityEngine.MaterialPropertyBlock)ToLua.ToObject(L, 8);
				UnityEngine.Graphics.DrawMesh(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7);
				return 0;
			}
			else if (count == 9 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Mesh), typeof(UnityEngine.Matrix4x4), typeof(UnityEngine.Material), typeof(int), typeof(UnityEngine.Camera), typeof(int), typeof(UnityEngine.MaterialPropertyBlock), typeof(UnityEngine.Rendering.ShadowCastingMode), typeof(bool)))
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.ToObject(L, 1);
				UnityEngine.Matrix4x4 arg1 = (UnityEngine.Matrix4x4)ToLua.ToObject(L, 2);
				UnityEngine.Material arg2 = (UnityEngine.Material)ToLua.ToObject(L, 3);
				int arg3 = (int)LuaDLL.lua_tonumber(L, 4);
				UnityEngine.Camera arg4 = (UnityEngine.Camera)ToLua.ToObject(L, 5);
				int arg5 = (int)LuaDLL.lua_tonumber(L, 6);
				UnityEngine.MaterialPropertyBlock arg6 = (UnityEngine.MaterialPropertyBlock)ToLua.ToObject(L, 7);
				UnityEngine.Rendering.ShadowCastingMode arg7 = (UnityEngine.Rendering.ShadowCastingMode)ToLua.ToObject(L, 8);
				bool arg8 = LuaDLL.lua_toboolean(L, 9);
				UnityEngine.Graphics.DrawMesh(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8);
				return 0;
			}
			else if (count == 9 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Mesh), typeof(UnityEngine.Vector3), typeof(UnityEngine.Quaternion), typeof(UnityEngine.Material), typeof(int), typeof(UnityEngine.Camera), typeof(int), typeof(UnityEngine.MaterialPropertyBlock), typeof(bool)))
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.ToObject(L, 1);
				UnityEngine.Vector3 arg1 = ToLua.ToVector3(L, 2);
				UnityEngine.Quaternion arg2 = ToLua.ToQuaternion(L, 3);
				UnityEngine.Material arg3 = (UnityEngine.Material)ToLua.ToObject(L, 4);
				int arg4 = (int)LuaDLL.lua_tonumber(L, 5);
				UnityEngine.Camera arg5 = (UnityEngine.Camera)ToLua.ToObject(L, 6);
				int arg6 = (int)LuaDLL.lua_tonumber(L, 7);
				UnityEngine.MaterialPropertyBlock arg7 = (UnityEngine.MaterialPropertyBlock)ToLua.ToObject(L, 8);
				bool arg8 = LuaDLL.lua_toboolean(L, 9);
				UnityEngine.Graphics.DrawMesh(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8);
				return 0;
			}
			else if (count == 9 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Mesh), typeof(UnityEngine.Matrix4x4), typeof(UnityEngine.Material), typeof(int), typeof(UnityEngine.Camera), typeof(int), typeof(UnityEngine.MaterialPropertyBlock), typeof(bool), typeof(bool)))
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.ToObject(L, 1);
				UnityEngine.Matrix4x4 arg1 = (UnityEngine.Matrix4x4)ToLua.ToObject(L, 2);
				UnityEngine.Material arg2 = (UnityEngine.Material)ToLua.ToObject(L, 3);
				int arg3 = (int)LuaDLL.lua_tonumber(L, 4);
				UnityEngine.Camera arg4 = (UnityEngine.Camera)ToLua.ToObject(L, 5);
				int arg5 = (int)LuaDLL.lua_tonumber(L, 6);
				UnityEngine.MaterialPropertyBlock arg6 = (UnityEngine.MaterialPropertyBlock)ToLua.ToObject(L, 7);
				bool arg7 = LuaDLL.lua_toboolean(L, 8);
				bool arg8 = LuaDLL.lua_toboolean(L, 9);
				UnityEngine.Graphics.DrawMesh(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8);
				return 0;
			}
			else if (count == 9 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Mesh), typeof(UnityEngine.Vector3), typeof(UnityEngine.Quaternion), typeof(UnityEngine.Material), typeof(int), typeof(UnityEngine.Camera), typeof(int), typeof(UnityEngine.MaterialPropertyBlock), typeof(UnityEngine.Rendering.ShadowCastingMode)))
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.ToObject(L, 1);
				UnityEngine.Vector3 arg1 = ToLua.ToVector3(L, 2);
				UnityEngine.Quaternion arg2 = ToLua.ToQuaternion(L, 3);
				UnityEngine.Material arg3 = (UnityEngine.Material)ToLua.ToObject(L, 4);
				int arg4 = (int)LuaDLL.lua_tonumber(L, 5);
				UnityEngine.Camera arg5 = (UnityEngine.Camera)ToLua.ToObject(L, 6);
				int arg6 = (int)LuaDLL.lua_tonumber(L, 7);
				UnityEngine.MaterialPropertyBlock arg7 = (UnityEngine.MaterialPropertyBlock)ToLua.ToObject(L, 8);
				UnityEngine.Rendering.ShadowCastingMode arg8 = (UnityEngine.Rendering.ShadowCastingMode)ToLua.ToObject(L, 9);
				UnityEngine.Graphics.DrawMesh(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8);
				return 0;
			}
			else if (count == 10 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Mesh), typeof(UnityEngine.Vector3), typeof(UnityEngine.Quaternion), typeof(UnityEngine.Material), typeof(int), typeof(UnityEngine.Camera), typeof(int), typeof(UnityEngine.MaterialPropertyBlock), typeof(bool), typeof(bool)))
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.ToObject(L, 1);
				UnityEngine.Vector3 arg1 = ToLua.ToVector3(L, 2);
				UnityEngine.Quaternion arg2 = ToLua.ToQuaternion(L, 3);
				UnityEngine.Material arg3 = (UnityEngine.Material)ToLua.ToObject(L, 4);
				int arg4 = (int)LuaDLL.lua_tonumber(L, 5);
				UnityEngine.Camera arg5 = (UnityEngine.Camera)ToLua.ToObject(L, 6);
				int arg6 = (int)LuaDLL.lua_tonumber(L, 7);
				UnityEngine.MaterialPropertyBlock arg7 = (UnityEngine.MaterialPropertyBlock)ToLua.ToObject(L, 8);
				bool arg8 = LuaDLL.lua_toboolean(L, 9);
				bool arg9 = LuaDLL.lua_toboolean(L, 10);
				UnityEngine.Graphics.DrawMesh(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9);
				return 0;
			}
			else if (count == 10 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Mesh), typeof(UnityEngine.Vector3), typeof(UnityEngine.Quaternion), typeof(UnityEngine.Material), typeof(int), typeof(UnityEngine.Camera), typeof(int), typeof(UnityEngine.MaterialPropertyBlock), typeof(UnityEngine.Rendering.ShadowCastingMode), typeof(bool)))
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.ToObject(L, 1);
				UnityEngine.Vector3 arg1 = ToLua.ToVector3(L, 2);
				UnityEngine.Quaternion arg2 = ToLua.ToQuaternion(L, 3);
				UnityEngine.Material arg3 = (UnityEngine.Material)ToLua.ToObject(L, 4);
				int arg4 = (int)LuaDLL.lua_tonumber(L, 5);
				UnityEngine.Camera arg5 = (UnityEngine.Camera)ToLua.ToObject(L, 6);
				int arg6 = (int)LuaDLL.lua_tonumber(L, 7);
				UnityEngine.MaterialPropertyBlock arg7 = (UnityEngine.MaterialPropertyBlock)ToLua.ToObject(L, 8);
				UnityEngine.Rendering.ShadowCastingMode arg8 = (UnityEngine.Rendering.ShadowCastingMode)ToLua.ToObject(L, 9);
				bool arg9 = LuaDLL.lua_toboolean(L, 10);
				UnityEngine.Graphics.DrawMesh(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9);
				return 0;
			}
			else if (count == 10 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Mesh), typeof(UnityEngine.Matrix4x4), typeof(UnityEngine.Material), typeof(int), typeof(UnityEngine.Camera), typeof(int), typeof(UnityEngine.MaterialPropertyBlock), typeof(UnityEngine.Rendering.ShadowCastingMode), typeof(bool), typeof(UnityEngine.Transform)))
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.ToObject(L, 1);
				UnityEngine.Matrix4x4 arg1 = (UnityEngine.Matrix4x4)ToLua.ToObject(L, 2);
				UnityEngine.Material arg2 = (UnityEngine.Material)ToLua.ToObject(L, 3);
				int arg3 = (int)LuaDLL.lua_tonumber(L, 4);
				UnityEngine.Camera arg4 = (UnityEngine.Camera)ToLua.ToObject(L, 5);
				int arg5 = (int)LuaDLL.lua_tonumber(L, 6);
				UnityEngine.MaterialPropertyBlock arg6 = (UnityEngine.MaterialPropertyBlock)ToLua.ToObject(L, 7);
				UnityEngine.Rendering.ShadowCastingMode arg7 = (UnityEngine.Rendering.ShadowCastingMode)ToLua.ToObject(L, 8);
				bool arg8 = LuaDLL.lua_toboolean(L, 9);
				UnityEngine.Transform arg9 = (UnityEngine.Transform)ToLua.ToObject(L, 10);
				UnityEngine.Graphics.DrawMesh(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9);
				return 0;
			}
			else if (count == 11 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Mesh), typeof(UnityEngine.Vector3), typeof(UnityEngine.Quaternion), typeof(UnityEngine.Material), typeof(int), typeof(UnityEngine.Camera), typeof(int), typeof(UnityEngine.MaterialPropertyBlock), typeof(UnityEngine.Rendering.ShadowCastingMode), typeof(bool), typeof(UnityEngine.Transform)))
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.ToObject(L, 1);
				UnityEngine.Vector3 arg1 = ToLua.ToVector3(L, 2);
				UnityEngine.Quaternion arg2 = ToLua.ToQuaternion(L, 3);
				UnityEngine.Material arg3 = (UnityEngine.Material)ToLua.ToObject(L, 4);
				int arg4 = (int)LuaDLL.lua_tonumber(L, 5);
				UnityEngine.Camera arg5 = (UnityEngine.Camera)ToLua.ToObject(L, 6);
				int arg6 = (int)LuaDLL.lua_tonumber(L, 7);
				UnityEngine.MaterialPropertyBlock arg7 = (UnityEngine.MaterialPropertyBlock)ToLua.ToObject(L, 8);
				UnityEngine.Rendering.ShadowCastingMode arg8 = (UnityEngine.Rendering.ShadowCastingMode)ToLua.ToObject(L, 9);
				bool arg9 = LuaDLL.lua_toboolean(L, 10);
				UnityEngine.Transform arg10 = (UnityEngine.Transform)ToLua.ToObject(L, 11);
				UnityEngine.Graphics.DrawMesh(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UnityEngine.Graphics.DrawMesh");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DrawMeshNow(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Mesh), typeof(UnityEngine.Matrix4x4)))
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.ToObject(L, 1);
				UnityEngine.Matrix4x4 arg1 = (UnityEngine.Matrix4x4)ToLua.ToObject(L, 2);
				UnityEngine.Graphics.DrawMeshNow(arg0, arg1);
				return 0;
			}
			else if (count == 3 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Mesh), typeof(UnityEngine.Matrix4x4), typeof(int)))
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.ToObject(L, 1);
				UnityEngine.Matrix4x4 arg1 = (UnityEngine.Matrix4x4)ToLua.ToObject(L, 2);
				int arg2 = (int)LuaDLL.lua_tonumber(L, 3);
				UnityEngine.Graphics.DrawMeshNow(arg0, arg1, arg2);
				return 0;
			}
			else if (count == 3 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Mesh), typeof(UnityEngine.Vector3), typeof(UnityEngine.Quaternion)))
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.ToObject(L, 1);
				UnityEngine.Vector3 arg1 = ToLua.ToVector3(L, 2);
				UnityEngine.Quaternion arg2 = ToLua.ToQuaternion(L, 3);
				UnityEngine.Graphics.DrawMeshNow(arg0, arg1, arg2);
				return 0;
			}
			else if (count == 4 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Mesh), typeof(UnityEngine.Vector3), typeof(UnityEngine.Quaternion), typeof(int)))
			{
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.ToObject(L, 1);
				UnityEngine.Vector3 arg1 = ToLua.ToVector3(L, 2);
				UnityEngine.Quaternion arg2 = ToLua.ToQuaternion(L, 3);
				int arg3 = (int)LuaDLL.lua_tonumber(L, 4);
				UnityEngine.Graphics.DrawMeshNow(arg0, arg1, arg2, arg3);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UnityEngine.Graphics.DrawMeshNow");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DrawProcedural(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.MeshTopology), typeof(int)))
			{
				UnityEngine.MeshTopology arg0 = (UnityEngine.MeshTopology)ToLua.ToObject(L, 1);
				int arg1 = (int)LuaDLL.lua_tonumber(L, 2);
				UnityEngine.Graphics.DrawProcedural(arg0, arg1);
				return 0;
			}
			else if (count == 3 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.MeshTopology), typeof(int), typeof(int)))
			{
				UnityEngine.MeshTopology arg0 = (UnityEngine.MeshTopology)ToLua.ToObject(L, 1);
				int arg1 = (int)LuaDLL.lua_tonumber(L, 2);
				int arg2 = (int)LuaDLL.lua_tonumber(L, 3);
				UnityEngine.Graphics.DrawProcedural(arg0, arg1, arg2);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UnityEngine.Graphics.DrawProcedural");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DrawProceduralIndirect(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.MeshTopology), typeof(UnityEngine.ComputeBuffer)))
			{
				UnityEngine.MeshTopology arg0 = (UnityEngine.MeshTopology)ToLua.ToObject(L, 1);
				UnityEngine.ComputeBuffer arg1 = (UnityEngine.ComputeBuffer)ToLua.ToObject(L, 2);
				UnityEngine.Graphics.DrawProceduralIndirect(arg0, arg1);
				return 0;
			}
			else if (count == 3 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.MeshTopology), typeof(UnityEngine.ComputeBuffer), typeof(int)))
			{
				UnityEngine.MeshTopology arg0 = (UnityEngine.MeshTopology)ToLua.ToObject(L, 1);
				UnityEngine.ComputeBuffer arg1 = (UnityEngine.ComputeBuffer)ToLua.ToObject(L, 2);
				int arg2 = (int)LuaDLL.lua_tonumber(L, 3);
				UnityEngine.Graphics.DrawProceduralIndirect(arg0, arg1, arg2);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UnityEngine.Graphics.DrawProceduralIndirect");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DrawTexture(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Rect), typeof(UnityEngine.Texture)))
			{
				UnityEngine.Rect arg0 = (UnityEngine.Rect)ToLua.ToObject(L, 1);
				UnityEngine.Texture arg1 = (UnityEngine.Texture)ToLua.ToObject(L, 2);
				UnityEngine.Graphics.DrawTexture(arg0, arg1);
				return 0;
			}
			else if (count == 3 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Rect), typeof(UnityEngine.Texture), typeof(UnityEngine.Material)))
			{
				UnityEngine.Rect arg0 = (UnityEngine.Rect)ToLua.ToObject(L, 1);
				UnityEngine.Texture arg1 = (UnityEngine.Texture)ToLua.ToObject(L, 2);
				UnityEngine.Material arg2 = (UnityEngine.Material)ToLua.ToObject(L, 3);
				UnityEngine.Graphics.DrawTexture(arg0, arg1, arg2);
				return 0;
			}
			else if (count == 6 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Rect), typeof(UnityEngine.Texture), typeof(int), typeof(int), typeof(int), typeof(int)))
			{
				UnityEngine.Rect arg0 = (UnityEngine.Rect)ToLua.ToObject(L, 1);
				UnityEngine.Texture arg1 = (UnityEngine.Texture)ToLua.ToObject(L, 2);
				int arg2 = (int)LuaDLL.lua_tonumber(L, 3);
				int arg3 = (int)LuaDLL.lua_tonumber(L, 4);
				int arg4 = (int)LuaDLL.lua_tonumber(L, 5);
				int arg5 = (int)LuaDLL.lua_tonumber(L, 6);
				UnityEngine.Graphics.DrawTexture(arg0, arg1, arg2, arg3, arg4, arg5);
				return 0;
			}
			else if (count == 7 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Rect), typeof(UnityEngine.Texture), typeof(UnityEngine.Rect), typeof(int), typeof(int), typeof(int), typeof(int)))
			{
				UnityEngine.Rect arg0 = (UnityEngine.Rect)ToLua.ToObject(L, 1);
				UnityEngine.Texture arg1 = (UnityEngine.Texture)ToLua.ToObject(L, 2);
				UnityEngine.Rect arg2 = (UnityEngine.Rect)ToLua.ToObject(L, 3);
				int arg3 = (int)LuaDLL.lua_tonumber(L, 4);
				int arg4 = (int)LuaDLL.lua_tonumber(L, 5);
				int arg5 = (int)LuaDLL.lua_tonumber(L, 6);
				int arg6 = (int)LuaDLL.lua_tonumber(L, 7);
				UnityEngine.Graphics.DrawTexture(arg0, arg1, arg2, arg3, arg4, arg5, arg6);
				return 0;
			}
			else if (count == 7 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Rect), typeof(UnityEngine.Texture), typeof(int), typeof(int), typeof(int), typeof(int), typeof(UnityEngine.Material)))
			{
				UnityEngine.Rect arg0 = (UnityEngine.Rect)ToLua.ToObject(L, 1);
				UnityEngine.Texture arg1 = (UnityEngine.Texture)ToLua.ToObject(L, 2);
				int arg2 = (int)LuaDLL.lua_tonumber(L, 3);
				int arg3 = (int)LuaDLL.lua_tonumber(L, 4);
				int arg4 = (int)LuaDLL.lua_tonumber(L, 5);
				int arg5 = (int)LuaDLL.lua_tonumber(L, 6);
				UnityEngine.Material arg6 = (UnityEngine.Material)ToLua.ToObject(L, 7);
				UnityEngine.Graphics.DrawTexture(arg0, arg1, arg2, arg3, arg4, arg5, arg6);
				return 0;
			}
			else if (count == 8 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Rect), typeof(UnityEngine.Texture), typeof(UnityEngine.Rect), typeof(int), typeof(int), typeof(int), typeof(int), typeof(UnityEngine.Color)))
			{
				UnityEngine.Rect arg0 = (UnityEngine.Rect)ToLua.ToObject(L, 1);
				UnityEngine.Texture arg1 = (UnityEngine.Texture)ToLua.ToObject(L, 2);
				UnityEngine.Rect arg2 = (UnityEngine.Rect)ToLua.ToObject(L, 3);
				int arg3 = (int)LuaDLL.lua_tonumber(L, 4);
				int arg4 = (int)LuaDLL.lua_tonumber(L, 5);
				int arg5 = (int)LuaDLL.lua_tonumber(L, 6);
				int arg6 = (int)LuaDLL.lua_tonumber(L, 7);
				UnityEngine.Color arg7 = ToLua.ToColor(L, 8);
				UnityEngine.Graphics.DrawTexture(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7);
				return 0;
			}
			else if (count == 8 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Rect), typeof(UnityEngine.Texture), typeof(UnityEngine.Rect), typeof(int), typeof(int), typeof(int), typeof(int), typeof(UnityEngine.Material)))
			{
				UnityEngine.Rect arg0 = (UnityEngine.Rect)ToLua.ToObject(L, 1);
				UnityEngine.Texture arg1 = (UnityEngine.Texture)ToLua.ToObject(L, 2);
				UnityEngine.Rect arg2 = (UnityEngine.Rect)ToLua.ToObject(L, 3);
				int arg3 = (int)LuaDLL.lua_tonumber(L, 4);
				int arg4 = (int)LuaDLL.lua_tonumber(L, 5);
				int arg5 = (int)LuaDLL.lua_tonumber(L, 6);
				int arg6 = (int)LuaDLL.lua_tonumber(L, 7);
				UnityEngine.Material arg7 = (UnityEngine.Material)ToLua.ToObject(L, 8);
				UnityEngine.Graphics.DrawTexture(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7);
				return 0;
			}
			else if (count == 9 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Rect), typeof(UnityEngine.Texture), typeof(UnityEngine.Rect), typeof(int), typeof(int), typeof(int), typeof(int), typeof(UnityEngine.Color), typeof(UnityEngine.Material)))
			{
				UnityEngine.Rect arg0 = (UnityEngine.Rect)ToLua.ToObject(L, 1);
				UnityEngine.Texture arg1 = (UnityEngine.Texture)ToLua.ToObject(L, 2);
				UnityEngine.Rect arg2 = (UnityEngine.Rect)ToLua.ToObject(L, 3);
				int arg3 = (int)LuaDLL.lua_tonumber(L, 4);
				int arg4 = (int)LuaDLL.lua_tonumber(L, 5);
				int arg5 = (int)LuaDLL.lua_tonumber(L, 6);
				int arg6 = (int)LuaDLL.lua_tonumber(L, 7);
				UnityEngine.Color arg7 = ToLua.ToColor(L, 8);
				UnityEngine.Material arg8 = (UnityEngine.Material)ToLua.ToObject(L, 9);
				UnityEngine.Graphics.DrawTexture(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UnityEngine.Graphics.DrawTexture");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ExecuteCommandBuffer(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UnityEngine.Rendering.CommandBuffer arg0 = (UnityEngine.Rendering.CommandBuffer)ToLua.CheckObject(L, 1, typeof(UnityEngine.Rendering.CommandBuffer));
			UnityEngine.Graphics.ExecuteCommandBuffer(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Blit(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Texture), typeof(UnityEngine.Material)))
			{
				UnityEngine.Texture arg0 = (UnityEngine.Texture)ToLua.ToObject(L, 1);
				UnityEngine.Material arg1 = (UnityEngine.Material)ToLua.ToObject(L, 2);
				UnityEngine.Graphics.Blit(arg0, arg1);
				return 0;
			}
			else if (count == 2 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Texture), typeof(UnityEngine.RenderTexture)))
			{
				UnityEngine.Texture arg0 = (UnityEngine.Texture)ToLua.ToObject(L, 1);
				UnityEngine.RenderTexture arg1 = (UnityEngine.RenderTexture)ToLua.ToObject(L, 2);
				UnityEngine.Graphics.Blit(arg0, arg1);
				return 0;
			}
			else if (count == 3 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Texture), typeof(UnityEngine.Material), typeof(int)))
			{
				UnityEngine.Texture arg0 = (UnityEngine.Texture)ToLua.ToObject(L, 1);
				UnityEngine.Material arg1 = (UnityEngine.Material)ToLua.ToObject(L, 2);
				int arg2 = (int)LuaDLL.lua_tonumber(L, 3);
				UnityEngine.Graphics.Blit(arg0, arg1, arg2);
				return 0;
			}
			else if (count == 3 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Texture), typeof(UnityEngine.RenderTexture), typeof(UnityEngine.Material)))
			{
				UnityEngine.Texture arg0 = (UnityEngine.Texture)ToLua.ToObject(L, 1);
				UnityEngine.RenderTexture arg1 = (UnityEngine.RenderTexture)ToLua.ToObject(L, 2);
				UnityEngine.Material arg2 = (UnityEngine.Material)ToLua.ToObject(L, 3);
				UnityEngine.Graphics.Blit(arg0, arg1, arg2);
				return 0;
			}
			else if (count == 4 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Texture), typeof(UnityEngine.RenderTexture), typeof(UnityEngine.Material), typeof(int)))
			{
				UnityEngine.Texture arg0 = (UnityEngine.Texture)ToLua.ToObject(L, 1);
				UnityEngine.RenderTexture arg1 = (UnityEngine.RenderTexture)ToLua.ToObject(L, 2);
				UnityEngine.Material arg2 = (UnityEngine.Material)ToLua.ToObject(L, 3);
				int arg3 = (int)LuaDLL.lua_tonumber(L, 4);
				UnityEngine.Graphics.Blit(arg0, arg1, arg2, arg3);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UnityEngine.Graphics.Blit");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int BlitMultiTap(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);
			UnityEngine.Texture arg0 = (UnityEngine.Texture)ToLua.CheckUnityObject(L, 1, typeof(UnityEngine.Texture));
			UnityEngine.RenderTexture arg1 = (UnityEngine.RenderTexture)ToLua.CheckUnityObject(L, 2, typeof(UnityEngine.RenderTexture));
			UnityEngine.Material arg2 = (UnityEngine.Material)ToLua.CheckUnityObject(L, 3, typeof(UnityEngine.Material));
			UnityEngine.Vector2[] arg3 = ToLua.CheckParamsObject<UnityEngine.Vector2>(L, 4, count - 3);
			UnityEngine.Graphics.BlitMultiTap(arg0, arg1, arg2, arg3);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetRandomWriteTarget(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2 && TypeChecker.CheckTypes(L, 1, typeof(int), typeof(UnityEngine.ComputeBuffer)))
			{
				int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
				UnityEngine.ComputeBuffer arg1 = (UnityEngine.ComputeBuffer)ToLua.ToObject(L, 2);
				UnityEngine.Graphics.SetRandomWriteTarget(arg0, arg1);
				return 0;
			}
			else if (count == 2 && TypeChecker.CheckTypes(L, 1, typeof(int), typeof(UnityEngine.RenderTexture)))
			{
				int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
				UnityEngine.RenderTexture arg1 = (UnityEngine.RenderTexture)ToLua.ToObject(L, 2);
				UnityEngine.Graphics.SetRandomWriteTarget(arg0, arg1);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UnityEngine.Graphics.SetRandomWriteTarget");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ClearRandomWriteTargets(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			UnityEngine.Graphics.ClearRandomWriteTargets();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetRenderTarget(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 1 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.RenderTargetSetup)))
			{
				UnityEngine.RenderTargetSetup arg0 = (UnityEngine.RenderTargetSetup)ToLua.ToObject(L, 1);
				UnityEngine.Graphics.SetRenderTarget(arg0);
				return 0;
			}
			else if (count == 1 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.RenderTexture)))
			{
				UnityEngine.RenderTexture arg0 = (UnityEngine.RenderTexture)ToLua.ToObject(L, 1);
				UnityEngine.Graphics.SetRenderTarget(arg0);
				return 0;
			}
			else if (count == 2 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.RenderBuffer[]), typeof(UnityEngine.RenderBuffer)))
			{
				UnityEngine.RenderBuffer[] arg0 = ToLua.CheckObjectArray<UnityEngine.RenderBuffer>(L, 1);
				UnityEngine.RenderBuffer arg1 = (UnityEngine.RenderBuffer)ToLua.ToObject(L, 2);
				UnityEngine.Graphics.SetRenderTarget(arg0, arg1);
				return 0;
			}
			else if (count == 2 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.RenderBuffer), typeof(UnityEngine.RenderBuffer)))
			{
				UnityEngine.RenderBuffer arg0 = (UnityEngine.RenderBuffer)ToLua.ToObject(L, 1);
				UnityEngine.RenderBuffer arg1 = (UnityEngine.RenderBuffer)ToLua.ToObject(L, 2);
				UnityEngine.Graphics.SetRenderTarget(arg0, arg1);
				return 0;
			}
			else if (count == 2 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.RenderTexture), typeof(int)))
			{
				UnityEngine.RenderTexture arg0 = (UnityEngine.RenderTexture)ToLua.ToObject(L, 1);
				int arg1 = (int)LuaDLL.lua_tonumber(L, 2);
				UnityEngine.Graphics.SetRenderTarget(arg0, arg1);
				return 0;
			}
			else if (count == 3 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.RenderTexture), typeof(int), typeof(UnityEngine.CubemapFace)))
			{
				UnityEngine.RenderTexture arg0 = (UnityEngine.RenderTexture)ToLua.ToObject(L, 1);
				int arg1 = (int)LuaDLL.lua_tonumber(L, 2);
				UnityEngine.CubemapFace arg2 = (UnityEngine.CubemapFace)ToLua.ToObject(L, 3);
				UnityEngine.Graphics.SetRenderTarget(arg0, arg1, arg2);
				return 0;
			}
			else if (count == 3 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.RenderBuffer), typeof(UnityEngine.RenderBuffer), typeof(int)))
			{
				UnityEngine.RenderBuffer arg0 = (UnityEngine.RenderBuffer)ToLua.ToObject(L, 1);
				UnityEngine.RenderBuffer arg1 = (UnityEngine.RenderBuffer)ToLua.ToObject(L, 2);
				int arg2 = (int)LuaDLL.lua_tonumber(L, 3);
				UnityEngine.Graphics.SetRenderTarget(arg0, arg1, arg2);
				return 0;
			}
			else if (count == 4 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.RenderBuffer), typeof(UnityEngine.RenderBuffer), typeof(int), typeof(UnityEngine.CubemapFace)))
			{
				UnityEngine.RenderBuffer arg0 = (UnityEngine.RenderBuffer)ToLua.ToObject(L, 1);
				UnityEngine.RenderBuffer arg1 = (UnityEngine.RenderBuffer)ToLua.ToObject(L, 2);
				int arg2 = (int)LuaDLL.lua_tonumber(L, 3);
				UnityEngine.CubemapFace arg3 = (UnityEngine.CubemapFace)ToLua.ToObject(L, 4);
				UnityEngine.Graphics.SetRenderTarget(arg0, arg1, arg2, arg3);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UnityEngine.Graphics.SetRenderTarget");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_activeColorBuffer(IntPtr L)
	{
		try
		{
			ToLua.PushValue(L, UnityEngine.Graphics.activeColorBuffer);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_activeDepthBuffer(IntPtr L)
	{
		try
		{
			ToLua.PushValue(L, UnityEngine.Graphics.activeDepthBuffer);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

