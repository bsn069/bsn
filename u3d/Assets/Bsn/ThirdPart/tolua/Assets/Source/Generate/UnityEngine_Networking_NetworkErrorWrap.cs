//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class UnityEngine_Networking_NetworkErrorWrap
{
	public static void Register(LuaState L)
	{
		L.BeginEnum(typeof(UnityEngine.Networking.NetworkError));
		L.RegVar("Ok", get_Ok, null);
		L.RegVar("WrongHost", get_WrongHost, null);
		L.RegVar("WrongConnection", get_WrongConnection, null);
		L.RegVar("WrongChannel", get_WrongChannel, null);
		L.RegVar("NoResources", get_NoResources, null);
		L.RegVar("BadMessage", get_BadMessage, null);
		L.RegVar("Timeout", get_Timeout, null);
		L.RegVar("MessageToLong", get_MessageToLong, null);
		L.RegVar("WrongOperation", get_WrongOperation, null);
		L.RegVar("VersionMismatch", get_VersionMismatch, null);
		L.RegVar("CRCMismatch", get_CRCMismatch, null);
		L.RegVar("DNSFailure", get_DNSFailure, null);
		L.RegFunction("IntToEnum", IntToEnum);
		L.EndEnum();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Ok(IntPtr L)
	{
		ToLua.Push(L, UnityEngine.Networking.NetworkError.Ok);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_WrongHost(IntPtr L)
	{
		ToLua.Push(L, UnityEngine.Networking.NetworkError.WrongHost);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_WrongConnection(IntPtr L)
	{
		ToLua.Push(L, UnityEngine.Networking.NetworkError.WrongConnection);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_WrongChannel(IntPtr L)
	{
		ToLua.Push(L, UnityEngine.Networking.NetworkError.WrongChannel);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_NoResources(IntPtr L)
	{
		ToLua.Push(L, UnityEngine.Networking.NetworkError.NoResources);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_BadMessage(IntPtr L)
	{
		ToLua.Push(L, UnityEngine.Networking.NetworkError.BadMessage);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Timeout(IntPtr L)
	{
		ToLua.Push(L, UnityEngine.Networking.NetworkError.Timeout);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_MessageToLong(IntPtr L)
	{
		ToLua.Push(L, UnityEngine.Networking.NetworkError.MessageToLong);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_WrongOperation(IntPtr L)
	{
		ToLua.Push(L, UnityEngine.Networking.NetworkError.WrongOperation);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_VersionMismatch(IntPtr L)
	{
		ToLua.Push(L, UnityEngine.Networking.NetworkError.VersionMismatch);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_CRCMismatch(IntPtr L)
	{
		ToLua.Push(L, UnityEngine.Networking.NetworkError.CRCMismatch);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_DNSFailure(IntPtr L)
	{
		ToLua.Push(L, UnityEngine.Networking.NetworkError.DNSFailure);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IntToEnum(IntPtr L)
	{
		int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
		UnityEngine.Networking.NetworkError o = (UnityEngine.Networking.NetworkError)arg0;
		ToLua.Push(L, o);
		return 1;
	}
}

