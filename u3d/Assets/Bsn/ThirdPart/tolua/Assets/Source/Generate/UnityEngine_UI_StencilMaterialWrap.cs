//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class UnityEngine_UI_StencilMaterialWrap
{
	public static void Register(LuaState L)
	{
		L.BeginStaticLibs("StencilMaterial");
		L.RegFunction("Add", Add);
		L.RegFunction("Remove", Remove);
		L.RegFunction("ClearAll", ClearAll);
		L.EndStaticLibs();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Add(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 5 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Material), typeof(int), typeof(UnityEngine.Rendering.StencilOp), typeof(UnityEngine.Rendering.CompareFunction), typeof(UnityEngine.Rendering.ColorWriteMask)))
			{
				UnityEngine.Material arg0 = (UnityEngine.Material)ToLua.ToObject(L, 1);
				int arg1 = (int)LuaDLL.lua_tonumber(L, 2);
				UnityEngine.Rendering.StencilOp arg2 = (UnityEngine.Rendering.StencilOp)ToLua.ToObject(L, 3);
				UnityEngine.Rendering.CompareFunction arg3 = (UnityEngine.Rendering.CompareFunction)ToLua.ToObject(L, 4);
				UnityEngine.Rendering.ColorWriteMask arg4 = (UnityEngine.Rendering.ColorWriteMask)ToLua.ToObject(L, 5);
				UnityEngine.Material o = UnityEngine.UI.StencilMaterial.Add(arg0, arg1, arg2, arg3, arg4);
				ToLua.Push(L, o);
				return 1;
			}
			else if (count == 7 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Material), typeof(int), typeof(UnityEngine.Rendering.StencilOp), typeof(UnityEngine.Rendering.CompareFunction), typeof(UnityEngine.Rendering.ColorWriteMask), typeof(int), typeof(int)))
			{
				UnityEngine.Material arg0 = (UnityEngine.Material)ToLua.ToObject(L, 1);
				int arg1 = (int)LuaDLL.lua_tonumber(L, 2);
				UnityEngine.Rendering.StencilOp arg2 = (UnityEngine.Rendering.StencilOp)ToLua.ToObject(L, 3);
				UnityEngine.Rendering.CompareFunction arg3 = (UnityEngine.Rendering.CompareFunction)ToLua.ToObject(L, 4);
				UnityEngine.Rendering.ColorWriteMask arg4 = (UnityEngine.Rendering.ColorWriteMask)ToLua.ToObject(L, 5);
				int arg5 = (int)LuaDLL.lua_tonumber(L, 6);
				int arg6 = (int)LuaDLL.lua_tonumber(L, 7);
				UnityEngine.Material o = UnityEngine.UI.StencilMaterial.Add(arg0, arg1, arg2, arg3, arg4, arg5, arg6);
				ToLua.Push(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UnityEngine.UI.StencilMaterial.Add");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Remove(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UnityEngine.Material arg0 = (UnityEngine.Material)ToLua.CheckUnityObject(L, 1, typeof(UnityEngine.Material));
			UnityEngine.UI.StencilMaterial.Remove(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ClearAll(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			UnityEngine.UI.StencilMaterial.ClearAll();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

