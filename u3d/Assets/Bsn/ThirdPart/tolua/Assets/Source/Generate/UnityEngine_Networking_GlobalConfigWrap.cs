//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class UnityEngine_Networking_GlobalConfigWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(UnityEngine.Networking.GlobalConfig), typeof(System.Object));
		L.RegFunction("New", _CreateUnityEngine_Networking_GlobalConfig);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("ThreadAwakeTimeout", get_ThreadAwakeTimeout, set_ThreadAwakeTimeout);
		L.RegVar("ReactorModel", get_ReactorModel, set_ReactorModel);
		L.RegVar("ReactorMaximumReceivedMessages", get_ReactorMaximumReceivedMessages, set_ReactorMaximumReceivedMessages);
		L.RegVar("ReactorMaximumSentMessages", get_ReactorMaximumSentMessages, set_ReactorMaximumSentMessages);
		L.RegVar("MaxPacketSize", get_MaxPacketSize, set_MaxPacketSize);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateUnityEngine_Networking_GlobalConfig(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				UnityEngine.Networking.GlobalConfig obj = new UnityEngine.Networking.GlobalConfig();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: UnityEngine.Networking.GlobalConfig.New");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ThreadAwakeTimeout(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Networking.GlobalConfig obj = (UnityEngine.Networking.GlobalConfig)o;
			uint ret = obj.ThreadAwakeTimeout;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index ThreadAwakeTimeout on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ReactorModel(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Networking.GlobalConfig obj = (UnityEngine.Networking.GlobalConfig)o;
			UnityEngine.Networking.ReactorModel ret = obj.ReactorModel;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index ReactorModel on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ReactorMaximumReceivedMessages(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Networking.GlobalConfig obj = (UnityEngine.Networking.GlobalConfig)o;
			ushort ret = obj.ReactorMaximumReceivedMessages;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index ReactorMaximumReceivedMessages on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ReactorMaximumSentMessages(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Networking.GlobalConfig obj = (UnityEngine.Networking.GlobalConfig)o;
			ushort ret = obj.ReactorMaximumSentMessages;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index ReactorMaximumSentMessages on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_MaxPacketSize(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Networking.GlobalConfig obj = (UnityEngine.Networking.GlobalConfig)o;
			ushort ret = obj.MaxPacketSize;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index MaxPacketSize on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_ThreadAwakeTimeout(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Networking.GlobalConfig obj = (UnityEngine.Networking.GlobalConfig)o;
			uint arg0 = (uint)LuaDLL.luaL_checknumber(L, 2);
			obj.ThreadAwakeTimeout = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index ThreadAwakeTimeout on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_ReactorModel(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Networking.GlobalConfig obj = (UnityEngine.Networking.GlobalConfig)o;
			UnityEngine.Networking.ReactorModel arg0 = (UnityEngine.Networking.ReactorModel)ToLua.CheckObject(L, 2, typeof(UnityEngine.Networking.ReactorModel));
			obj.ReactorModel = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index ReactorModel on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_ReactorMaximumReceivedMessages(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Networking.GlobalConfig obj = (UnityEngine.Networking.GlobalConfig)o;
			ushort arg0 = (ushort)LuaDLL.luaL_checknumber(L, 2);
			obj.ReactorMaximumReceivedMessages = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index ReactorMaximumReceivedMessages on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_ReactorMaximumSentMessages(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Networking.GlobalConfig obj = (UnityEngine.Networking.GlobalConfig)o;
			ushort arg0 = (ushort)LuaDLL.luaL_checknumber(L, 2);
			obj.ReactorMaximumSentMessages = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index ReactorMaximumSentMessages on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_MaxPacketSize(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Networking.GlobalConfig obj = (UnityEngine.Networking.GlobalConfig)o;
			ushort arg0 = (ushort)LuaDLL.luaL_checknumber(L, 2);
			obj.MaxPacketSize = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index MaxPacketSize on a nil value" : e.Message);
		}
	}
}

