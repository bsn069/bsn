//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class UnityEngine_OffMeshLinkTypeWrap
{
	public static void Register(LuaState L)
	{
		L.BeginEnum(typeof(UnityEngine.OffMeshLinkType));
		L.RegVar("LinkTypeManual", get_LinkTypeManual, null);
		L.RegVar("LinkTypeDropDown", get_LinkTypeDropDown, null);
		L.RegVar("LinkTypeJumpAcross", get_LinkTypeJumpAcross, null);
		L.RegFunction("IntToEnum", IntToEnum);
		L.EndEnum();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_LinkTypeManual(IntPtr L)
	{
		ToLua.Push(L, UnityEngine.OffMeshLinkType.LinkTypeManual);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_LinkTypeDropDown(IntPtr L)
	{
		ToLua.Push(L, UnityEngine.OffMeshLinkType.LinkTypeDropDown);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_LinkTypeJumpAcross(IntPtr L)
	{
		ToLua.Push(L, UnityEngine.OffMeshLinkType.LinkTypeJumpAcross);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IntToEnum(IntPtr L)
	{
		int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
		UnityEngine.OffMeshLinkType o = (UnityEngine.OffMeshLinkType)arg0;
		ToLua.Push(L, o);
		return 1;
	}
}

