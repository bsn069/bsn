//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class UnityEngine_EventSystems_MoveDirectionWrap
{
	public static void Register(LuaState L)
	{
		L.BeginEnum(typeof(UnityEngine.EventSystems.MoveDirection));
		L.RegVar("Left", get_Left, null);
		L.RegVar("Up", get_Up, null);
		L.RegVar("Right", get_Right, null);
		L.RegVar("Down", get_Down, null);
		L.RegVar("None", get_None, null);
		L.RegFunction("IntToEnum", IntToEnum);
		L.EndEnum();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Left(IntPtr L)
	{
		ToLua.Push(L, UnityEngine.EventSystems.MoveDirection.Left);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Up(IntPtr L)
	{
		ToLua.Push(L, UnityEngine.EventSystems.MoveDirection.Up);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Right(IntPtr L)
	{
		ToLua.Push(L, UnityEngine.EventSystems.MoveDirection.Right);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Down(IntPtr L)
	{
		ToLua.Push(L, UnityEngine.EventSystems.MoveDirection.Down);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_None(IntPtr L)
	{
		ToLua.Push(L, UnityEngine.EventSystems.MoveDirection.None);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IntToEnum(IntPtr L)
	{
		int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
		UnityEngine.EventSystems.MoveDirection o = (UnityEngine.EventSystems.MoveDirection)arg0;
		ToLua.Push(L, o);
		return 1;
	}
}

