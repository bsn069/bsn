//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class UnityEngine_FogModeWrap
{
	public static void Register(LuaState L)
	{
		L.BeginEnum(typeof(UnityEngine.FogMode));
		L.RegVar("Linear", get_Linear, null);
		L.RegVar("Exponential", get_Exponential, null);
		L.RegVar("ExponentialSquared", get_ExponentialSquared, null);
		L.RegFunction("IntToEnum", IntToEnum);
		L.EndEnum();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Linear(IntPtr L)
	{
		ToLua.Push(L, UnityEngine.FogMode.Linear);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Exponential(IntPtr L)
	{
		ToLua.Push(L, UnityEngine.FogMode.Exponential);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ExponentialSquared(IntPtr L)
	{
		ToLua.Push(L, UnityEngine.FogMode.ExponentialSquared);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IntToEnum(IntPtr L)
	{
		int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
		UnityEngine.FogMode o = (UnityEngine.FogMode)arg0;
		ToLua.Push(L, o);
		return 1;
	}
}

