//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class UnityEngine_NetworkPeerTypeWrap
{
	public static void Register(LuaState L)
	{
		L.BeginEnum(typeof(UnityEngine.NetworkPeerType));
		L.RegVar("Disconnected", get_Disconnected, null);
		L.RegVar("Server", get_Server, null);
		L.RegVar("Client", get_Client, null);
		L.RegVar("Connecting", get_Connecting, null);
		L.RegFunction("IntToEnum", IntToEnum);
		L.EndEnum();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Disconnected(IntPtr L)
	{
		ToLua.Push(L, UnityEngine.NetworkPeerType.Disconnected);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Server(IntPtr L)
	{
		ToLua.Push(L, UnityEngine.NetworkPeerType.Server);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Client(IntPtr L)
	{
		ToLua.Push(L, UnityEngine.NetworkPeerType.Client);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Connecting(IntPtr L)
	{
		ToLua.Push(L, UnityEngine.NetworkPeerType.Connecting);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IntToEnum(IntPtr L)
	{
		int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
		UnityEngine.NetworkPeerType o = (UnityEngine.NetworkPeerType)arg0;
		ToLua.Push(L, o);
		return 1;
	}
}

