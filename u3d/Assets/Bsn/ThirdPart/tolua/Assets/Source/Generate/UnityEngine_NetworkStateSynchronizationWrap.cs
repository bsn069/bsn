//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class UnityEngine_NetworkStateSynchronizationWrap
{
	public static void Register(LuaState L)
	{
		L.BeginEnum(typeof(UnityEngine.NetworkStateSynchronization));
		L.RegVar("Off", get_Off, null);
		L.RegVar("ReliableDeltaCompressed", get_ReliableDeltaCompressed, null);
		L.RegVar("Unreliable", get_Unreliable, null);
		L.RegFunction("IntToEnum", IntToEnum);
		L.EndEnum();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Off(IntPtr L)
	{
		ToLua.Push(L, UnityEngine.NetworkStateSynchronization.Off);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ReliableDeltaCompressed(IntPtr L)
	{
		ToLua.Push(L, UnityEngine.NetworkStateSynchronization.ReliableDeltaCompressed);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Unreliable(IntPtr L)
	{
		ToLua.Push(L, UnityEngine.NetworkStateSynchronization.Unreliable);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IntToEnum(IntPtr L)
	{
		int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
		UnityEngine.NetworkStateSynchronization o = (UnityEngine.NetworkStateSynchronization)arg0;
		ToLua.Push(L, o);
		return 1;
	}
}

