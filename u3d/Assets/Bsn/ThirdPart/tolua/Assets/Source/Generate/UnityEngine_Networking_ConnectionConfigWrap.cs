//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class UnityEngine_Networking_ConnectionConfigWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(UnityEngine.Networking.ConnectionConfig), typeof(System.Object));
		L.RegFunction("Validate", Validate);
		L.RegFunction("AddChannel", AddChannel);
		L.RegFunction("GetChannel", GetChannel);
		L.RegFunction("New", _CreateUnityEngine_Networking_ConnectionConfig);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("PacketSize", get_PacketSize, set_PacketSize);
		L.RegVar("FragmentSize", get_FragmentSize, set_FragmentSize);
		L.RegVar("ResendTimeout", get_ResendTimeout, set_ResendTimeout);
		L.RegVar("DisconnectTimeout", get_DisconnectTimeout, set_DisconnectTimeout);
		L.RegVar("ConnectTimeout", get_ConnectTimeout, set_ConnectTimeout);
		L.RegVar("MinUpdateTimeout", get_MinUpdateTimeout, set_MinUpdateTimeout);
		L.RegVar("PingTimeout", get_PingTimeout, set_PingTimeout);
		L.RegVar("ReducedPingTimeout", get_ReducedPingTimeout, set_ReducedPingTimeout);
		L.RegVar("AllCostTimeout", get_AllCostTimeout, set_AllCostTimeout);
		L.RegVar("NetworkDropThreshold", get_NetworkDropThreshold, set_NetworkDropThreshold);
		L.RegVar("OverflowDropThreshold", get_OverflowDropThreshold, set_OverflowDropThreshold);
		L.RegVar("MaxConnectionAttempt", get_MaxConnectionAttempt, set_MaxConnectionAttempt);
		L.RegVar("AckDelay", get_AckDelay, set_AckDelay);
		L.RegVar("MaxCombinedReliableMessageSize", get_MaxCombinedReliableMessageSize, set_MaxCombinedReliableMessageSize);
		L.RegVar("MaxCombinedReliableMessageCount", get_MaxCombinedReliableMessageCount, set_MaxCombinedReliableMessageCount);
		L.RegVar("MaxSentMessageQueueSize", get_MaxSentMessageQueueSize, set_MaxSentMessageQueueSize);
		L.RegVar("IsAcksLong", get_IsAcksLong, set_IsAcksLong);
		L.RegVar("UsePlatformSpecificProtocols", get_UsePlatformSpecificProtocols, set_UsePlatformSpecificProtocols);
		L.RegVar("ChannelCount", get_ChannelCount, null);
		L.RegVar("Channels", get_Channels, null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateUnityEngine_Networking_ConnectionConfig(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				UnityEngine.Networking.ConnectionConfig obj = new UnityEngine.Networking.ConnectionConfig();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else if (count == 1 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Networking.ConnectionConfig)))
			{
				UnityEngine.Networking.ConnectionConfig arg0 = (UnityEngine.Networking.ConnectionConfig)ToLua.CheckObject(L, 1, typeof(UnityEngine.Networking.ConnectionConfig));
				UnityEngine.Networking.ConnectionConfig obj = new UnityEngine.Networking.ConnectionConfig(arg0);
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: UnityEngine.Networking.ConnectionConfig.New");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Validate(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UnityEngine.Networking.ConnectionConfig arg0 = (UnityEngine.Networking.ConnectionConfig)ToLua.CheckObject(L, 1, typeof(UnityEngine.Networking.ConnectionConfig));
			UnityEngine.Networking.ConnectionConfig.Validate(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddChannel(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Networking.ConnectionConfig obj = (UnityEngine.Networking.ConnectionConfig)ToLua.CheckObject(L, 1, typeof(UnityEngine.Networking.ConnectionConfig));
			UnityEngine.Networking.QosType arg0 = (UnityEngine.Networking.QosType)ToLua.CheckObject(L, 2, typeof(UnityEngine.Networking.QosType));
			byte o = obj.AddChannel(arg0);
			LuaDLL.lua_pushnumber(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetChannel(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Networking.ConnectionConfig obj = (UnityEngine.Networking.ConnectionConfig)ToLua.CheckObject(L, 1, typeof(UnityEngine.Networking.ConnectionConfig));
			byte arg0 = (byte)LuaDLL.luaL_checknumber(L, 2);
			UnityEngine.Networking.QosType o = obj.GetChannel(arg0);
			ToLua.Push(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_PacketSize(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Networking.ConnectionConfig obj = (UnityEngine.Networking.ConnectionConfig)o;
			ushort ret = obj.PacketSize;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index PacketSize on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_FragmentSize(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Networking.ConnectionConfig obj = (UnityEngine.Networking.ConnectionConfig)o;
			ushort ret = obj.FragmentSize;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index FragmentSize on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ResendTimeout(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Networking.ConnectionConfig obj = (UnityEngine.Networking.ConnectionConfig)o;
			uint ret = obj.ResendTimeout;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index ResendTimeout on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_DisconnectTimeout(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Networking.ConnectionConfig obj = (UnityEngine.Networking.ConnectionConfig)o;
			uint ret = obj.DisconnectTimeout;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index DisconnectTimeout on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ConnectTimeout(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Networking.ConnectionConfig obj = (UnityEngine.Networking.ConnectionConfig)o;
			uint ret = obj.ConnectTimeout;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index ConnectTimeout on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_MinUpdateTimeout(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Networking.ConnectionConfig obj = (UnityEngine.Networking.ConnectionConfig)o;
			uint ret = obj.MinUpdateTimeout;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index MinUpdateTimeout on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_PingTimeout(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Networking.ConnectionConfig obj = (UnityEngine.Networking.ConnectionConfig)o;
			uint ret = obj.PingTimeout;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index PingTimeout on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ReducedPingTimeout(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Networking.ConnectionConfig obj = (UnityEngine.Networking.ConnectionConfig)o;
			uint ret = obj.ReducedPingTimeout;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index ReducedPingTimeout on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_AllCostTimeout(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Networking.ConnectionConfig obj = (UnityEngine.Networking.ConnectionConfig)o;
			uint ret = obj.AllCostTimeout;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index AllCostTimeout on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_NetworkDropThreshold(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Networking.ConnectionConfig obj = (UnityEngine.Networking.ConnectionConfig)o;
			byte ret = obj.NetworkDropThreshold;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index NetworkDropThreshold on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_OverflowDropThreshold(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Networking.ConnectionConfig obj = (UnityEngine.Networking.ConnectionConfig)o;
			byte ret = obj.OverflowDropThreshold;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index OverflowDropThreshold on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_MaxConnectionAttempt(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Networking.ConnectionConfig obj = (UnityEngine.Networking.ConnectionConfig)o;
			byte ret = obj.MaxConnectionAttempt;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index MaxConnectionAttempt on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_AckDelay(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Networking.ConnectionConfig obj = (UnityEngine.Networking.ConnectionConfig)o;
			uint ret = obj.AckDelay;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index AckDelay on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_MaxCombinedReliableMessageSize(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Networking.ConnectionConfig obj = (UnityEngine.Networking.ConnectionConfig)o;
			ushort ret = obj.MaxCombinedReliableMessageSize;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index MaxCombinedReliableMessageSize on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_MaxCombinedReliableMessageCount(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Networking.ConnectionConfig obj = (UnityEngine.Networking.ConnectionConfig)o;
			ushort ret = obj.MaxCombinedReliableMessageCount;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index MaxCombinedReliableMessageCount on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_MaxSentMessageQueueSize(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Networking.ConnectionConfig obj = (UnityEngine.Networking.ConnectionConfig)o;
			ushort ret = obj.MaxSentMessageQueueSize;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index MaxSentMessageQueueSize on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_IsAcksLong(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Networking.ConnectionConfig obj = (UnityEngine.Networking.ConnectionConfig)o;
			bool ret = obj.IsAcksLong;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index IsAcksLong on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_UsePlatformSpecificProtocols(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Networking.ConnectionConfig obj = (UnityEngine.Networking.ConnectionConfig)o;
			bool ret = obj.UsePlatformSpecificProtocols;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index UsePlatformSpecificProtocols on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ChannelCount(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Networking.ConnectionConfig obj = (UnityEngine.Networking.ConnectionConfig)o;
			int ret = obj.ChannelCount;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index ChannelCount on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Channels(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Networking.ConnectionConfig obj = (UnityEngine.Networking.ConnectionConfig)o;
			System.Collections.Generic.List<UnityEngine.Networking.ChannelQOS> ret = obj.Channels;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index Channels on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_PacketSize(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Networking.ConnectionConfig obj = (UnityEngine.Networking.ConnectionConfig)o;
			ushort arg0 = (ushort)LuaDLL.luaL_checknumber(L, 2);
			obj.PacketSize = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index PacketSize on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_FragmentSize(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Networking.ConnectionConfig obj = (UnityEngine.Networking.ConnectionConfig)o;
			ushort arg0 = (ushort)LuaDLL.luaL_checknumber(L, 2);
			obj.FragmentSize = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index FragmentSize on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_ResendTimeout(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Networking.ConnectionConfig obj = (UnityEngine.Networking.ConnectionConfig)o;
			uint arg0 = (uint)LuaDLL.luaL_checknumber(L, 2);
			obj.ResendTimeout = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index ResendTimeout on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_DisconnectTimeout(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Networking.ConnectionConfig obj = (UnityEngine.Networking.ConnectionConfig)o;
			uint arg0 = (uint)LuaDLL.luaL_checknumber(L, 2);
			obj.DisconnectTimeout = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index DisconnectTimeout on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_ConnectTimeout(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Networking.ConnectionConfig obj = (UnityEngine.Networking.ConnectionConfig)o;
			uint arg0 = (uint)LuaDLL.luaL_checknumber(L, 2);
			obj.ConnectTimeout = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index ConnectTimeout on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_MinUpdateTimeout(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Networking.ConnectionConfig obj = (UnityEngine.Networking.ConnectionConfig)o;
			uint arg0 = (uint)LuaDLL.luaL_checknumber(L, 2);
			obj.MinUpdateTimeout = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index MinUpdateTimeout on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_PingTimeout(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Networking.ConnectionConfig obj = (UnityEngine.Networking.ConnectionConfig)o;
			uint arg0 = (uint)LuaDLL.luaL_checknumber(L, 2);
			obj.PingTimeout = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index PingTimeout on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_ReducedPingTimeout(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Networking.ConnectionConfig obj = (UnityEngine.Networking.ConnectionConfig)o;
			uint arg0 = (uint)LuaDLL.luaL_checknumber(L, 2);
			obj.ReducedPingTimeout = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index ReducedPingTimeout on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_AllCostTimeout(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Networking.ConnectionConfig obj = (UnityEngine.Networking.ConnectionConfig)o;
			uint arg0 = (uint)LuaDLL.luaL_checknumber(L, 2);
			obj.AllCostTimeout = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index AllCostTimeout on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_NetworkDropThreshold(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Networking.ConnectionConfig obj = (UnityEngine.Networking.ConnectionConfig)o;
			byte arg0 = (byte)LuaDLL.luaL_checknumber(L, 2);
			obj.NetworkDropThreshold = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index NetworkDropThreshold on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_OverflowDropThreshold(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Networking.ConnectionConfig obj = (UnityEngine.Networking.ConnectionConfig)o;
			byte arg0 = (byte)LuaDLL.luaL_checknumber(L, 2);
			obj.OverflowDropThreshold = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index OverflowDropThreshold on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_MaxConnectionAttempt(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Networking.ConnectionConfig obj = (UnityEngine.Networking.ConnectionConfig)o;
			byte arg0 = (byte)LuaDLL.luaL_checknumber(L, 2);
			obj.MaxConnectionAttempt = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index MaxConnectionAttempt on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_AckDelay(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Networking.ConnectionConfig obj = (UnityEngine.Networking.ConnectionConfig)o;
			uint arg0 = (uint)LuaDLL.luaL_checknumber(L, 2);
			obj.AckDelay = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index AckDelay on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_MaxCombinedReliableMessageSize(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Networking.ConnectionConfig obj = (UnityEngine.Networking.ConnectionConfig)o;
			ushort arg0 = (ushort)LuaDLL.luaL_checknumber(L, 2);
			obj.MaxCombinedReliableMessageSize = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index MaxCombinedReliableMessageSize on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_MaxCombinedReliableMessageCount(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Networking.ConnectionConfig obj = (UnityEngine.Networking.ConnectionConfig)o;
			ushort arg0 = (ushort)LuaDLL.luaL_checknumber(L, 2);
			obj.MaxCombinedReliableMessageCount = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index MaxCombinedReliableMessageCount on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_MaxSentMessageQueueSize(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Networking.ConnectionConfig obj = (UnityEngine.Networking.ConnectionConfig)o;
			ushort arg0 = (ushort)LuaDLL.luaL_checknumber(L, 2);
			obj.MaxSentMessageQueueSize = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index MaxSentMessageQueueSize on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_IsAcksLong(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Networking.ConnectionConfig obj = (UnityEngine.Networking.ConnectionConfig)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.IsAcksLong = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index IsAcksLong on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_UsePlatformSpecificProtocols(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Networking.ConnectionConfig obj = (UnityEngine.Networking.ConnectionConfig)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.UsePlatformSpecificProtocols = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index UsePlatformSpecificProtocols on a nil value" : e.Message);
		}
	}
}

