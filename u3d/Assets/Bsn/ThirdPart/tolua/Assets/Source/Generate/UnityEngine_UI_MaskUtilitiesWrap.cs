//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class UnityEngine_UI_MaskUtilitiesWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(UnityEngine.UI.MaskUtilities), typeof(System.Object));
		L.RegFunction("Notify2DMaskStateChanged", Notify2DMaskStateChanged);
		L.RegFunction("NotifyStencilStateChanged", NotifyStencilStateChanged);
		L.RegFunction("FindRootSortOverrideCanvas", FindRootSortOverrideCanvas);
		L.RegFunction("GetStencilDepth", GetStencilDepth);
		L.RegFunction("GetRectMaskForClippable", GetRectMaskForClippable);
		L.RegFunction("GetRectMasksForClip", GetRectMasksForClip);
		L.RegFunction("New", _CreateUnityEngine_UI_MaskUtilities);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateUnityEngine_UI_MaskUtilities(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				UnityEngine.UI.MaskUtilities obj = new UnityEngine.UI.MaskUtilities();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: UnityEngine.UI.MaskUtilities.New");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Notify2DMaskStateChanged(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UnityEngine.Component arg0 = (UnityEngine.Component)ToLua.CheckUnityObject(L, 1, typeof(UnityEngine.Component));
			UnityEngine.UI.MaskUtilities.Notify2DMaskStateChanged(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int NotifyStencilStateChanged(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UnityEngine.Component arg0 = (UnityEngine.Component)ToLua.CheckUnityObject(L, 1, typeof(UnityEngine.Component));
			UnityEngine.UI.MaskUtilities.NotifyStencilStateChanged(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int FindRootSortOverrideCanvas(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UnityEngine.Transform arg0 = (UnityEngine.Transform)ToLua.CheckUnityObject(L, 1, typeof(UnityEngine.Transform));
			UnityEngine.Transform o = UnityEngine.UI.MaskUtilities.FindRootSortOverrideCanvas(arg0);
			ToLua.Push(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetStencilDepth(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Transform arg0 = (UnityEngine.Transform)ToLua.CheckUnityObject(L, 1, typeof(UnityEngine.Transform));
			UnityEngine.Transform arg1 = (UnityEngine.Transform)ToLua.CheckUnityObject(L, 2, typeof(UnityEngine.Transform));
			int o = UnityEngine.UI.MaskUtilities.GetStencilDepth(arg0, arg1);
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetRectMaskForClippable(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UnityEngine.UI.IClippable arg0 = (UnityEngine.UI.IClippable)ToLua.CheckObject(L, 1, typeof(UnityEngine.UI.IClippable));
			UnityEngine.UI.RectMask2D o = UnityEngine.UI.MaskUtilities.GetRectMaskForClippable(arg0);
			ToLua.Push(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetRectMasksForClip(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.UI.RectMask2D arg0 = (UnityEngine.UI.RectMask2D)ToLua.CheckUnityObject(L, 1, typeof(UnityEngine.UI.RectMask2D));
			System.Collections.Generic.List<UnityEngine.UI.RectMask2D> arg1 = (System.Collections.Generic.List<UnityEngine.UI.RectMask2D>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<UnityEngine.UI.RectMask2D>));
			UnityEngine.UI.MaskUtilities.GetRectMasksForClip(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

