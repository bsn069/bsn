//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class UnityEngine_GUILayout_HorizontalScopeWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(UnityEngine.GUILayout.HorizontalScope), typeof(UnityEngine.GUI.Scope));
		L.RegFunction("New", _CreateUnityEngine_GUILayout_HorizontalScope);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateUnityEngine_GUILayout_HorizontalScope(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Texture), typeof(UnityEngine.GUIStyle)) && TypeChecker.CheckParamsType(L, typeof(UnityEngine.GUILayoutOption), 3, count - 2))
			{
				UnityEngine.Texture arg0 = (UnityEngine.Texture)ToLua.CheckUnityObject(L, 1, typeof(UnityEngine.Texture));
				UnityEngine.GUIStyle arg1 = (UnityEngine.GUIStyle)ToLua.CheckObject(L, 2, typeof(UnityEngine.GUIStyle));
				UnityEngine.GUILayoutOption[] arg2 = ToLua.CheckParamsObject<UnityEngine.GUILayoutOption>(L, 3, count - 2);
				UnityEngine.GUILayout.HorizontalScope obj = new UnityEngine.GUILayout.HorizontalScope(arg0, arg1, arg2);
				ToLua.PushObject(L, obj);
				return 1;
			}
			else if (TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.GUIContent), typeof(UnityEngine.GUIStyle)) && TypeChecker.CheckParamsType(L, typeof(UnityEngine.GUILayoutOption), 3, count - 2))
			{
				UnityEngine.GUIContent arg0 = (UnityEngine.GUIContent)ToLua.CheckObject(L, 1, typeof(UnityEngine.GUIContent));
				UnityEngine.GUIStyle arg1 = (UnityEngine.GUIStyle)ToLua.CheckObject(L, 2, typeof(UnityEngine.GUIStyle));
				UnityEngine.GUILayoutOption[] arg2 = ToLua.CheckParamsObject<UnityEngine.GUILayoutOption>(L, 3, count - 2);
				UnityEngine.GUILayout.HorizontalScope obj = new UnityEngine.GUILayout.HorizontalScope(arg0, arg1, arg2);
				ToLua.PushObject(L, obj);
				return 1;
			}
			else if (TypeChecker.CheckTypes(L, 1, typeof(string), typeof(UnityEngine.GUIStyle)) && TypeChecker.CheckParamsType(L, typeof(UnityEngine.GUILayoutOption), 3, count - 2))
			{
				string arg0 = ToLua.CheckString(L, 1);
				UnityEngine.GUIStyle arg1 = (UnityEngine.GUIStyle)ToLua.CheckObject(L, 2, typeof(UnityEngine.GUIStyle));
				UnityEngine.GUILayoutOption[] arg2 = ToLua.CheckParamsObject<UnityEngine.GUILayoutOption>(L, 3, count - 2);
				UnityEngine.GUILayout.HorizontalScope obj = new UnityEngine.GUILayout.HorizontalScope(arg0, arg1, arg2);
				ToLua.PushObject(L, obj);
				return 1;
			}
			else if (TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.GUIStyle)) && TypeChecker.CheckParamsType(L, typeof(UnityEngine.GUILayoutOption), 2, count - 1))
			{
				UnityEngine.GUIStyle arg0 = (UnityEngine.GUIStyle)ToLua.CheckObject(L, 1, typeof(UnityEngine.GUIStyle));
				UnityEngine.GUILayoutOption[] arg1 = ToLua.CheckParamsObject<UnityEngine.GUILayoutOption>(L, 2, count - 1);
				UnityEngine.GUILayout.HorizontalScope obj = new UnityEngine.GUILayout.HorizontalScope(arg0, arg1);
				ToLua.PushObject(L, obj);
				return 1;
			}
			else if (TypeChecker.CheckParamsType(L, typeof(UnityEngine.GUILayoutOption), 1, count))
			{
				UnityEngine.GUILayoutOption[] arg0 = ToLua.CheckParamsObject<UnityEngine.GUILayoutOption>(L, 1, count);
				UnityEngine.GUILayout.HorizontalScope obj = new UnityEngine.GUILayout.HorizontalScope(arg0);
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: UnityEngine.GUILayout.HorizontalScope.New");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

