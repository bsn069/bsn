//this source code was auto-generated by tolua#, do not modify it
using System;
using UnityEngine;
using LuaInterface;

public static class LuaBinder
{
	public static void Bind(LuaState L)
	{
		float t = Time.realtimeSinceStartup;
		L.BeginModule(null);
		L.BeginModule("UnityEngine");
		UnityEngine_AssetBundleCreateRequestWrap.Register(L);
		UnityEngine_AssetBundleRequestWrap.Register(L);
		UnityEngine_AssetBundleWrap.Register(L);
		UnityEngine_AssetBundleManifestWrap.Register(L);
		UnityEngine_SendMessageOptionsWrap.Register(L);
		UnityEngine_PrimitiveTypeWrap.Register(L);
		UnityEngine_SpaceWrap.Register(L);
		UnityEngine_RuntimePlatformWrap.Register(L);
		UnityEngine_SystemLanguageWrap.Register(L);
		UnityEngine_LogTypeWrap.Register(L);
		UnityEngine_DeviceTypeWrap.Register(L);
		UnityEngine_SystemInfoWrap.Register(L);
		UnityEngine_ScriptableObjectWrap.Register(L);
		UnityEngine_ProfilerWrap.Register(L);
		UnityEngine_RenderSettingsWrap.Register(L);
		UnityEngine_MeshFilterWrap.Register(L);
		UnityEngine_CombineInstanceWrap.Register(L);
		UnityEngine_MeshWrap.Register(L);
		UnityEngine_SkinnedMeshRendererWrap.Register(L);
		UnityEngine_RendererWrap.Register(L);
		UnityEngine_ProjectorWrap.Register(L);
		UnityEngine_SkyboxWrap.Register(L);
		UnityEngine_TrailRendererWrap.Register(L);
		UnityEngine_LineRendererWrap.Register(L);
		UnityEngine_MaterialPropertyBlockWrap.Register(L);
		UnityEngine_GraphicsWrap.Register(L);
		UnityEngine_LightmapDataWrap.Register(L);
		UnityEngine_LightmapSettingsWrap.Register(L);
		UnityEngine_GeometryUtilityWrap.Register(L);
		UnityEngine_ScreenWrap.Register(L);
		UnityEngine_SleepTimeoutWrap.Register(L);
		UnityEngine_GLWrap.Register(L);
		UnityEngine_StaticBatchingUtilityWrap.Register(L);
		UnityEngine_ImageEffectTransformsToLDRWrap.Register(L);
		UnityEngine_ImageEffectOpaqueWrap.Register(L);
		UnityEngine_RectOffsetWrap.Register(L);
		UnityEngine_GUIElementWrap.Register(L);
		UnityEngine_GUITextureWrap.Register(L);
		UnityEngine_GUILayerWrap.Register(L);
		UnityEngine_TextureWrap.Register(L);
		UnityEngine_Texture2DWrap.Register(L);
		UnityEngine_CubemapWrap.Register(L);
		UnityEngine_LODFadeModeWrap.Register(L);
		UnityEngine_LODWrap.Register(L);
		UnityEngine_LODGroupWrap.Register(L);
		UnityEngine_Color32Wrap.Register(L);
		UnityEngine_RectWrap.Register(L);
		UnityEngine_Matrix4x4Wrap.Register(L);
		UnityEngine_Ray2DWrap.Register(L);
		UnityEngine_NetworkConnectionErrorWrap.Register(L);
		UnityEngine_NetworkDisconnectionWrap.Register(L);
		UnityEngine_NetworkStateSynchronizationWrap.Register(L);
		UnityEngine_NetworkPeerTypeWrap.Register(L);
		UnityEngine_NetworkLogLevelWrap.Register(L);
		UnityEngine_NetworkPlayerWrap.Register(L);
		UnityEngine_NetworkViewIDWrap.Register(L);
		UnityEngine_NetworkViewWrap.Register(L);
		UnityEngine_NetworkWrap.Register(L);
		UnityEngine_NetworkMessageInfoWrap.Register(L);
		UnityEngine_RectTransformWrap.Register(L);
		UnityEngine_ResourceRequestWrap.Register(L);
		UnityEngine_ResourcesWrap.Register(L);
		UnityEngine_TextAssetWrap.Register(L);
		UnityEngine_SecurityWrap.Register(L);
		UnityEngine_ShaderWrap.Register(L);
		UnityEngine_MaterialWrap.Register(L);
		UnityEngine_SortingLayerWrap.Register(L);
		UnityEngine_SpriteAlignmentWrap.Register(L);
		UnityEngine_SpritePackingModeWrap.Register(L);
		UnityEngine_SpritePackingRotationWrap.Register(L);
		UnityEngine_SpriteMeshTypeWrap.Register(L);
		UnityEngine_SpriteWrap.Register(L);
		UnityEngine_SpriteRendererWrap.Register(L);
		UnityEngine_Hash128Wrap.Register(L);
		UnityEngine_WWWWrap.Register(L);
		UnityEngine_WWWFormWrap.Register(L);
		UnityEngine_ColorUtilityWrap.Register(L);
		UnityEngine_AsyncOperationWrap.Register(L);
		UnityEngine_NetworkReachabilityWrap.Register(L);
		UnityEngine_ApplicationWrap.Register(L);
		UnityEngine_BehaviourWrap.Register(L);
		UnityEngine_CameraWrap.Register(L);
		UnityEngine_DebugWrap.Register(L);
		UnityEngine_MonoBehaviourWrap.Register(L);
		UnityEngine_TouchTypeWrap.Register(L);
		UnityEngine_DeviceOrientationWrap.Register(L);
		UnityEngine_CompassWrap.Register(L);
		UnityEngine_InputWrap.Register(L);
		UnityEngine_ComponentWrap.Register(L);
		UnityEngine_LightWrap.Register(L);
		UnityEngine_GameObjectWrap.Register(L);
		UnityEngine_TransformWrap.Register(L);
		UnityEngine_TimeWrap.Register(L);
		UnityEngine_RandomWrap.Register(L);
		UnityEngine_YieldInstructionWrap.Register(L);
		UnityEngine_PlayerPrefsWrap.Register(L);
		UnityEngine_MotionWrap.Register(L);
		UnityEngine_ParticleSystemRenderModeWrap.Register(L);
		UnityEngine_ParticleSystemSortModeWrap.Register(L);
		UnityEngine_ParticleSystemCollisionQualityWrap.Register(L);
		UnityEngine_ParticleSystemRenderSpaceWrap.Register(L);
		UnityEngine_ParticleSystemEmissionTypeWrap.Register(L);
		UnityEngine_ParticleSystemCurveModeWrap.Register(L);
		UnityEngine_ParticleSystemShapeTypeWrap.Register(L);
		UnityEngine_ParticleSystemMeshShapeTypeWrap.Register(L);
		UnityEngine_ParticleSystemAnimationTypeWrap.Register(L);
		UnityEngine_ParticleSystemCollisionTypeWrap.Register(L);
		UnityEngine_ParticleSystemCollisionModeWrap.Register(L);
		UnityEngine_ParticleSystemSimulationSpaceWrap.Register(L);
		UnityEngine_ParticleSystemScalingModeWrap.Register(L);
		UnityEngine_ParticleSystemInheritVelocityModeWrap.Register(L);
		UnityEngine_ParticleSystemWrap.Register(L);
		UnityEngine_ParticleSystemRendererWrap.Register(L);
		UnityEngine_ParticleCollisionEventWrap.Register(L);
		UnityEngine_ParticlePhysicsExtensionsWrap.Register(L);
		UnityEngine_ParticleWrap.Register(L);
		UnityEngine_EllipsoidParticleEmitterWrap.Register(L);
		UnityEngine_MeshParticleEmitterWrap.Register(L);
		UnityEngine_ParticleRenderModeWrap.Register(L);
		UnityEngine_RigidbodyConstraintsWrap.Register(L);
		UnityEngine_RigidbodyInterpolationWrap.Register(L);
		UnityEngine_ControllerColliderHitWrap.Register(L);
		UnityEngine_CollisionWrap.Register(L);
		UnityEngine_CollisionFlagsWrap.Register(L);
		UnityEngine_PhysicsWrap.Register(L);
		UnityEngine_ContactPointWrap.Register(L);
		UnityEngine_CollisionDetectionModeWrap.Register(L);
		UnityEngine_ColliderWrap.Register(L);
		UnityEngine_Physics2DWrap.Register(L);
		UnityEngine_RaycastHit2DWrap.Register(L);
		UnityEngine_RigidbodyInterpolation2DWrap.Register(L);
		UnityEngine_RigidbodySleepMode2DWrap.Register(L);
		UnityEngine_CollisionDetectionMode2DWrap.Register(L);
		UnityEngine_RigidbodyConstraints2DWrap.Register(L);
		UnityEngine_Rigidbody2DWrap.Register(L);
		UnityEngine_Collider2DWrap.Register(L);
		UnityEngine_CircleCollider2DWrap.Register(L);
		UnityEngine_BoxCollider2DWrap.Register(L);
		UnityEngine_EdgeCollider2DWrap.Register(L);
		UnityEngine_PolygonCollider2DWrap.Register(L);
		UnityEngine_ContactPoint2DWrap.Register(L);
		UnityEngine_Collision2DWrap.Register(L);
		UnityEngine_PhysicsMaterial2DWrap.Register(L);
		UnityEngine_PhysicsUpdateBehaviour2DWrap.Register(L);
		UnityEngine_ObstacleAvoidanceTypeWrap.Register(L);
		UnityEngine_NavMeshAgentWrap.Register(L);
		UnityEngine_NavMeshHitWrap.Register(L);
		UnityEngine_NavMeshTriangulationWrap.Register(L);
		UnityEngine_NavMeshWrap.Register(L);
		UnityEngine_NavMeshObstacleShapeWrap.Register(L);
		UnityEngine_NavMeshObstacleWrap.Register(L);
		UnityEngine_NavMeshPathStatusWrap.Register(L);
		UnityEngine_NavMeshPathWrap.Register(L);
		UnityEngine_OffMeshLinkTypeWrap.Register(L);
		UnityEngine_OffMeshLinkDataWrap.Register(L);
		UnityEngine_OffMeshLinkWrap.Register(L);
		UnityEngine_AnimatorOverrideControllerWrap.Register(L);
		UnityEngine_WrapModeWrap.Register(L);
		UnityEngine_QueueModeWrap.Register(L);
		UnityEngine_AnimatorWrap.Register(L);
		UnityEngine_AnimatorUtilityWrap.Register(L);
		UnityEngine_SkeletonBoneWrap.Register(L);
		UnityEngine_RuntimeAnimatorControllerWrap.Register(L);
		UnityEngine_TextGenerationSettingsWrap.Register(L);
		UnityEngine_TextAnchorWrap.Register(L);
		UnityEngine_GUITextWrap.Register(L);
		UnityEngine_TextMeshWrap.Register(L);
		UnityEngine_CharacterInfoWrap.Register(L);
		UnityEngine_FontWrap.Register(L);
		UnityEngine_UICharInfoWrap.Register(L);
		UnityEngine_UILineInfoWrap.Register(L);
		UnityEngine_UIVertexWrap.Register(L);
		UnityEngine_RenderModeWrap.Register(L);
		UnityEngine_CanvasWrap.Register(L);
		UnityEngine_CanvasGroupWrap.Register(L);
		UnityEngine_CanvasRendererWrap.Register(L);
		UnityEngine_RectTransformUtilityWrap.Register(L);
		UnityEngine_EventWrap.Register(L);
		UnityEngine_KeyCodeWrap.Register(L);
		UnityEngine_ScaleModeWrap.Register(L);
		UnityEngine_GUIWrap.Register(L);
		UnityEngine_GUIContentWrap.Register(L);
		UnityEngine_GUILayoutWrap.Register(L);
		UnityEngine_GUILayoutUtilityWrap.Register(L);
		UnityEngine_GUILayoutOptionWrap.Register(L);
		UnityEngine_GUISettingsWrap.Register(L);
		UnityEngine_GUISkinWrap.Register(L);
		UnityEngine_GUIStyleStateWrap.Register(L);
		UnityEngine_ImagePositionWrap.Register(L);
		UnityEngine_GUIStyleWrap.Register(L);
		UnityEngine_FocusTypeWrap.Register(L);
		UnityEngine_GUIUtilityWrap.Register(L);
		UnityEngine_JsonUtilityWrap.Register(L);
		UnityEngine_ResolutionWrap.Register(L);
		UnityEngine_RenderBufferWrap.Register(L);
		UnityEngine_RenderTargetSetupWrap.Register(L);
		UnityEngine_CameraTypeWrap.Register(L);
		UnityEngine_LightTypeWrap.Register(L);
		UnityEngine_LightRenderModeWrap.Register(L);
		UnityEngine_LightShadowsWrap.Register(L);
		UnityEngine_FogModeWrap.Register(L);
		UnityEngine_ShadowProjectionWrap.Register(L);
		UnityEngine_CameraClearFlagsWrap.Register(L);
		UnityEngine_DepthTextureModeWrap.Register(L);
		UnityEngine_MeshTopologyWrap.Register(L);
		UnityEngine_SkinQualityWrap.Register(L);
		UnityEngine_ScreenOrientationWrap.Register(L);
		UnityEngine_FilterModeWrap.Register(L);
		UnityEngine_TextureWrapModeWrap.Register(L);
		UnityEngine_TextureFormatWrap.Register(L);
		UnityEngine_CubemapFaceWrap.Register(L);
		UnityEngine_RenderTextureFormatWrap.Register(L);
		UnityEngine_RenderTextureReadWriteWrap.Register(L);
		UnityEngine_MaterialGlobalIlluminationFlagsWrap.Register(L);
		UnityEngine_StateMachineBehaviourWrap.Register(L);
		UnityEngine_LoggerWrap.Register(L);
		UnityEngine_TrackedReferenceWrap.Register(L);
		UnityEngine_QualitySettingsWrap.Register(L);
		L.BeginModule("Rendering");
		UnityEngine_Rendering_GraphicsSettingsWrap.Register(L);
		UnityEngine_Rendering_CommandBufferWrap.Register(L);
		UnityEngine_Rendering_OpaqueSortModeWrap.Register(L);
		UnityEngine_Rendering_BlendModeWrap.Register(L);
		UnityEngine_Rendering_BlendOpWrap.Register(L);
		UnityEngine_Rendering_CompareFunctionWrap.Register(L);
		UnityEngine_Rendering_CullModeWrap.Register(L);
		UnityEngine_Rendering_ColorWriteMaskWrap.Register(L);
		UnityEngine_Rendering_StencilOpWrap.Register(L);
		UnityEngine_Rendering_AmbientModeWrap.Register(L);
		UnityEngine_Rendering_DefaultReflectionModeWrap.Register(L);
		UnityEngine_Rendering_ReflectionCubemapCompressionWrap.Register(L);
		UnityEngine_Rendering_CameraEventWrap.Register(L);
		UnityEngine_Rendering_LightEventWrap.Register(L);
		UnityEngine_Rendering_BuiltinRenderTextureTypeWrap.Register(L);
		UnityEngine_Rendering_PassTypeWrap.Register(L);
		UnityEngine_Rendering_ShadowCastingModeWrap.Register(L);
		UnityEngine_Rendering_GraphicsDeviceTypeWrap.Register(L);
		UnityEngine_Rendering_BuiltinShaderTypeWrap.Register(L);
		UnityEngine_Rendering_BuiltinShaderModeWrap.Register(L);
		L.EndModule();
		L.BeginModule("RectTransform");
		UnityEngine_RectTransform_EdgeWrap.Register(L);
		UnityEngine_RectTransform_AxisWrap.Register(L);
		L.RegFunction("ReapplyDrivenProperties", UnityEngine_RectTransform_ReapplyDrivenProperties);
		L.EndModule();
		L.BeginModule("Sprites");
		UnityEngine_Sprites_DataUtilityWrap.Register(L);
		L.EndModule();
		L.BeginModule("SceneManagement");
		UnityEngine_SceneManagement_LoadSceneModeWrap.Register(L);
		UnityEngine_SceneManagement_SceneManagerWrap.Register(L);
		UnityEngine_SceneManagement_SceneWrap.Register(L);
		L.EndModule();
		L.BeginModule("ParticleSystem");
		UnityEngine_ParticleSystem_BurstWrap.Register(L);
		UnityEngine_ParticleSystem_MinMaxCurveWrap.Register(L);
		UnityEngine_ParticleSystem_EmissionModuleWrap.Register(L);
		UnityEngine_ParticleSystem_ShapeModuleWrap.Register(L);
		UnityEngine_ParticleSystem_VelocityOverLifetimeModuleWrap.Register(L);
		UnityEngine_ParticleSystem_LimitVelocityOverLifetimeModuleWrap.Register(L);
		UnityEngine_ParticleSystem_InheritVelocityModuleWrap.Register(L);
		UnityEngine_ParticleSystem_ForceOverLifetimeModuleWrap.Register(L);
		UnityEngine_ParticleSystem_ColorOverLifetimeModuleWrap.Register(L);
		UnityEngine_ParticleSystem_ColorBySpeedModuleWrap.Register(L);
		UnityEngine_ParticleSystem_SizeOverLifetimeModuleWrap.Register(L);
		UnityEngine_ParticleSystem_SizeBySpeedModuleWrap.Register(L);
		UnityEngine_ParticleSystem_RotationOverLifetimeModuleWrap.Register(L);
		UnityEngine_ParticleSystem_RotationBySpeedModuleWrap.Register(L);
		UnityEngine_ParticleSystem_ExternalForcesModuleWrap.Register(L);
		UnityEngine_ParticleSystem_CollisionModuleWrap.Register(L);
		UnityEngine_ParticleSystem_SubEmittersModuleWrap.Register(L);
		UnityEngine_ParticleSystem_TextureSheetAnimationModuleWrap.Register(L);
		UnityEngine_ParticleSystem_ParticleWrap.Register(L);
		UnityEngine_ParticleSystem_EmitParamsWrap.Register(L);
		L.EndModule();
		L.BeginModule("GUI");
		UnityEngine_GUI_ScopeWrap.Register(L);
		UnityEngine_GUI_GroupScopeWrap.Register(L);
		UnityEngine_GUI_ScrollViewScopeWrap.Register(L);
		UnityEngine_GUI_ClipScopeWrap.Register(L);
		L.RegFunction("WindowFunction", UnityEngine_GUI_WindowFunction);
		L.EndModule();
		L.BeginModule("GUILayout");
		UnityEngine_GUILayout_HorizontalScopeWrap.Register(L);
		UnityEngine_GUILayout_VerticalScopeWrap.Register(L);
		UnityEngine_GUILayout_AreaScopeWrap.Register(L);
		UnityEngine_GUILayout_ScrollViewScopeWrap.Register(L);
		L.EndModule();
		L.BeginModule("Networking");
		UnityEngine_Networking_UtilityWrap.Register(L);
		UnityEngine_Networking_NetworkTransportWrap.Register(L);
		UnityEngine_Networking_QosTypeWrap.Register(L);
		UnityEngine_Networking_NetworkErrorWrap.Register(L);
		UnityEngine_Networking_ReactorModelWrap.Register(L);
		UnityEngine_Networking_ChannelQOSWrap.Register(L);
		UnityEngine_Networking_ConnectionConfigWrap.Register(L);
		UnityEngine_Networking_HostTopologyWrap.Register(L);
		UnityEngine_Networking_GlobalConfigWrap.Register(L);
		UnityEngine_Networking_ConnectionSimulatorConfigWrap.Register(L);
		L.BeginModule("Match");
		UnityEngine_Networking_Match_RequestWrap.Register(L);
		UnityEngine_Networking_Match_ResponseBaseWrap.Register(L);
		UnityEngine_Networking_Match_ResponseWrap.Register(L);
		UnityEngine_Networking_Match_BasicResponseWrap.Register(L);
		UnityEngine_Networking_Match_StopDedicatedMatchRequestWrap.Register(L);
		UnityEngine_Networking_Match_StopDedicatedMatchResponseWrap.Register(L);
		UnityEngine_Networking_Match_CreateMatchRequestWrap.Register(L);
		UnityEngine_Networking_Match_CreateMatchResponseWrap.Register(L);
		UnityEngine_Networking_Match_JoinMatchRequestWrap.Register(L);
		UnityEngine_Networking_Match_JoinMatchResponseWrap.Register(L);
		UnityEngine_Networking_Match_DestroyMatchRequestWrap.Register(L);
		UnityEngine_Networking_Match_DropConnectionRequestWrap.Register(L);
		UnityEngine_Networking_Match_ListMatchRequestWrap.Register(L);
		UnityEngine_Networking_Match_MatchDirectConnectInfoWrap.Register(L);
		UnityEngine_Networking_Match_MatchDescWrap.Register(L);
		UnityEngine_Networking_Match_ListMatchResponseWrap.Register(L);
		UnityEngine_Networking_Match_CreateDedicatedMatchRequestWrap.Register(L);
		UnityEngine_Networking_Match_CreateDedicatedMatchResponseWrap.Register(L);
		UnityEngine_Networking_Match_CreateOrJoinMatchRequestWrap.Register(L);
		UnityEngine_Networking_Match_MatchInfoWrap.Register(L);
		UnityEngine_Networking_Match_NetworkMatchWrap.Register(L);
		L.BeginModule("NetworkMatch");
		L.RegFunction("ResponseDelegate_UnityEngine_Networking_Match_CreateMatchResponse", UnityEngine_Networking_Match_NetworkMatch_ResponseDelegate_UnityEngine_Networking_Match_CreateMatchResponse);
		L.RegFunction("ResponseDelegate_UnityEngine_Networking_Match_JoinMatchResponse", UnityEngine_Networking_Match_NetworkMatch_ResponseDelegate_UnityEngine_Networking_Match_JoinMatchResponse);
		L.RegFunction("ResponseDelegate_UnityEngine_Networking_Match_BasicResponse", UnityEngine_Networking_Match_NetworkMatch_ResponseDelegate_UnityEngine_Networking_Match_BasicResponse);
		L.RegFunction("ResponseDelegate_UnityEngine_Networking_Match_ListMatchResponse", UnityEngine_Networking_Match_NetworkMatch_ResponseDelegate_UnityEngine_Networking_Match_ListMatchResponse);
		L.EndModule();
		L.EndModule();
		L.EndModule();
		L.BeginModule("VR");
		UnityEngine_VR_InputTrackingWrap.Register(L);
		L.EndModule();
		L.BeginModule("Events");
		UnityEngine_Events_PersistentListenerModeWrap.Register(L);
		UnityEngine_Events_UnityEventWrap.Register(L);
		UnityEngine_Events_UnityEventBaseWrap.Register(L);
		UnityEngine_Events_UnityEvent_intWrap.Register(L);
		UnityEngine_Events_UnityEvent_stringWrap.Register(L);
		UnityEngine_Events_UnityEvent_boolWrap.Register(L);
		UnityEngine_Events_UnityEvent_floatWrap.Register(L);
		UnityEngine_Events_UnityEvent_UnityEngine_Vector2Wrap.Register(L);
		UnityEngine_Events_UnityEvent_UnityEngine_EventSystems_BaseEventDataWrap.Register(L);
		L.RegFunction("UnityAction", UnityEngine_Events_UnityAction);
		L.RegFunction("UnityAction_int", UnityEngine_Events_UnityAction_int);
		L.RegFunction("UnityAction_string", UnityEngine_Events_UnityAction_string);
		L.RegFunction("UnityAction_bool", UnityEngine_Events_UnityAction_bool);
		L.RegFunction("UnityAction_float", UnityEngine_Events_UnityAction_float);
		L.RegFunction("UnityAction_UnityEngine_Vector2", UnityEngine_Events_UnityAction_UnityEngine_Vector2);
		L.RegFunction("UnityAction_UnityEngine_EventSystems_BaseEventData", UnityEngine_Events_UnityAction_UnityEngine_EventSystems_BaseEventData);
		L.EndModule();
		L.BeginModule("Experimental");
		L.BeginModule("Director");
		UnityEngine_Experimental_Director_DirectorPlayerWrap.Register(L);
		L.EndModule();
		L.EndModule();
		L.BeginModule("EventSystems");
		UnityEngine_EventSystems_BaseEventDataWrap.Register(L);
		UnityEngine_EventSystems_EventHandleWrap.Register(L);
		UnityEngine_EventSystems_EventSystemWrap.Register(L);
		UnityEngine_EventSystems_EventTriggerWrap.Register(L);
		UnityEngine_EventSystems_EventTriggerTypeWrap.Register(L);
		UnityEngine_EventSystems_ExecuteEventsWrap.Register(L);
		UnityEngine_EventSystems_MoveDirectionWrap.Register(L);
		UnityEngine_EventSystems_RaycastResultWrap.Register(L);
		UnityEngine_EventSystems_UIBehaviourWrap.Register(L);
		UnityEngine_EventSystems_AxisEventDataWrap.Register(L);
		UnityEngine_EventSystems_AbstractEventDataWrap.Register(L);
		UnityEngine_EventSystems_PointerEventDataWrap.Register(L);
		UnityEngine_EventSystems_BaseInputModuleWrap.Register(L);
		UnityEngine_EventSystems_PointerInputModuleWrap.Register(L);
		UnityEngine_EventSystems_StandaloneInputModuleWrap.Register(L);
		UnityEngine_EventSystems_BaseRaycasterWrap.Register(L);
		UnityEngine_EventSystems_Physics2DRaycasterWrap.Register(L);
		UnityEngine_EventSystems_PhysicsRaycasterWrap.Register(L);
		L.BeginModule("EventTrigger");
		UnityEngine_EventSystems_EventTrigger_TriggerEventWrap.Register(L);
		UnityEngine_EventSystems_EventTrigger_EntryWrap.Register(L);
		L.EndModule();
		L.BeginModule("PointerEventData");
		UnityEngine_EventSystems_PointerEventData_InputButtonWrap.Register(L);
		UnityEngine_EventSystems_PointerEventData_FramePressStateWrap.Register(L);
		L.EndModule();
		L.BeginModule("PointerInputModule");
		UnityEngine_EventSystems_PointerInputModule_MouseButtonEventDataWrap.Register(L);
		L.EndModule();
		L.BeginModule("ExecuteEvents");
		L.RegFunction("EventFunction_UnityEngine_EventSystems_IPointerEnterHandler", UnityEngine_EventSystems_ExecuteEvents_EventFunction_UnityEngine_EventSystems_IPointerEnterHandler);
		L.RegFunction("EventFunction_UnityEngine_EventSystems_IPointerExitHandler", UnityEngine_EventSystems_ExecuteEvents_EventFunction_UnityEngine_EventSystems_IPointerExitHandler);
		L.RegFunction("EventFunction_UnityEngine_EventSystems_IPointerDownHandler", UnityEngine_EventSystems_ExecuteEvents_EventFunction_UnityEngine_EventSystems_IPointerDownHandler);
		L.RegFunction("EventFunction_UnityEngine_EventSystems_IPointerUpHandler", UnityEngine_EventSystems_ExecuteEvents_EventFunction_UnityEngine_EventSystems_IPointerUpHandler);
		L.RegFunction("EventFunction_UnityEngine_EventSystems_IPointerClickHandler", UnityEngine_EventSystems_ExecuteEvents_EventFunction_UnityEngine_EventSystems_IPointerClickHandler);
		L.RegFunction("EventFunction_UnityEngine_EventSystems_IInitializePotentialDragHandler", UnityEngine_EventSystems_ExecuteEvents_EventFunction_UnityEngine_EventSystems_IInitializePotentialDragHandler);
		L.RegFunction("EventFunction_UnityEngine_EventSystems_IBeginDragHandler", UnityEngine_EventSystems_ExecuteEvents_EventFunction_UnityEngine_EventSystems_IBeginDragHandler);
		L.RegFunction("EventFunction_UnityEngine_EventSystems_IDragHandler", UnityEngine_EventSystems_ExecuteEvents_EventFunction_UnityEngine_EventSystems_IDragHandler);
		L.RegFunction("EventFunction_UnityEngine_EventSystems_IEndDragHandler", UnityEngine_EventSystems_ExecuteEvents_EventFunction_UnityEngine_EventSystems_IEndDragHandler);
		L.RegFunction("EventFunction_UnityEngine_EventSystems_IDropHandler", UnityEngine_EventSystems_ExecuteEvents_EventFunction_UnityEngine_EventSystems_IDropHandler);
		L.RegFunction("EventFunction_UnityEngine_EventSystems_IScrollHandler", UnityEngine_EventSystems_ExecuteEvents_EventFunction_UnityEngine_EventSystems_IScrollHandler);
		L.RegFunction("EventFunction_UnityEngine_EventSystems_IUpdateSelectedHandler", UnityEngine_EventSystems_ExecuteEvents_EventFunction_UnityEngine_EventSystems_IUpdateSelectedHandler);
		L.RegFunction("EventFunction_UnityEngine_EventSystems_ISelectHandler", UnityEngine_EventSystems_ExecuteEvents_EventFunction_UnityEngine_EventSystems_ISelectHandler);
		L.RegFunction("EventFunction_UnityEngine_EventSystems_IDeselectHandler", UnityEngine_EventSystems_ExecuteEvents_EventFunction_UnityEngine_EventSystems_IDeselectHandler);
		L.RegFunction("EventFunction_UnityEngine_EventSystems_IMoveHandler", UnityEngine_EventSystems_ExecuteEvents_EventFunction_UnityEngine_EventSystems_IMoveHandler);
		L.RegFunction("EventFunction_UnityEngine_EventSystems_ISubmitHandler", UnityEngine_EventSystems_ExecuteEvents_EventFunction_UnityEngine_EventSystems_ISubmitHandler);
		L.RegFunction("EventFunction_UnityEngine_EventSystems_ICancelHandler", UnityEngine_EventSystems_ExecuteEvents_EventFunction_UnityEngine_EventSystems_ICancelHandler);
		L.EndModule();
		L.EndModule();
		L.BeginModule("UI");
		UnityEngine_UI_AnimationTriggersWrap.Register(L);
		UnityEngine_UI_ButtonWrap.Register(L);
		UnityEngine_UI_CanvasUpdateWrap.Register(L);
		UnityEngine_UI_CanvasUpdateRegistryWrap.Register(L);
		UnityEngine_UI_ColorBlockWrap.Register(L);
		UnityEngine_UI_DefaultControlsWrap.Register(L);
		UnityEngine_UI_DropdownWrap.Register(L);
		UnityEngine_UI_FontDataWrap.Register(L);
		UnityEngine_UI_FontUpdateTrackerWrap.Register(L);
		UnityEngine_UI_GraphicWrap.Register(L);
		UnityEngine_UI_GraphicRaycasterWrap.Register(L);
		UnityEngine_UI_GraphicRegistryWrap.Register(L);
		UnityEngine_UI_ImageWrap.Register(L);
		UnityEngine_UI_InputFieldWrap.Register(L);
		UnityEngine_UI_MaskWrap.Register(L);
		UnityEngine_UI_MaskableGraphicWrap.Register(L);
		UnityEngine_UI_MaskUtilitiesWrap.Register(L);
		UnityEngine_UI_NavigationWrap.Register(L);
		UnityEngine_UI_RawImageWrap.Register(L);
		UnityEngine_UI_RectMask2DWrap.Register(L);
		UnityEngine_UI_ScrollbarWrap.Register(L);
		UnityEngine_UI_ScrollRectWrap.Register(L);
		UnityEngine_UI_SelectableWrap.Register(L);
		UnityEngine_UI_SliderWrap.Register(L);
		UnityEngine_UI_SpriteStateWrap.Register(L);
		UnityEngine_UI_StencilMaterialWrap.Register(L);
		UnityEngine_UI_TextWrap.Register(L);
		UnityEngine_UI_ToggleWrap.Register(L);
		UnityEngine_UI_ToggleGroupWrap.Register(L);
		UnityEngine_UI_ClipperRegistryWrap.Register(L);
		UnityEngine_UI_ClippingWrap.Register(L);
		UnityEngine_UI_AspectRatioFitterWrap.Register(L);
		UnityEngine_UI_CanvasScalerWrap.Register(L);
		UnityEngine_UI_ContentSizeFitterWrap.Register(L);
		UnityEngine_UI_GridLayoutGroupWrap.Register(L);
		UnityEngine_UI_HorizontalLayoutGroupWrap.Register(L);
		UnityEngine_UI_HorizontalOrVerticalLayoutGroupWrap.Register(L);
		UnityEngine_UI_LayoutElementWrap.Register(L);
		UnityEngine_UI_LayoutGroupWrap.Register(L);
		UnityEngine_UI_LayoutRebuilderWrap.Register(L);
		UnityEngine_UI_LayoutUtilityWrap.Register(L);
		UnityEngine_UI_VerticalLayoutGroupWrap.Register(L);
		UnityEngine_UI_VertexHelperWrap.Register(L);
		UnityEngine_UI_BaseMeshEffectWrap.Register(L);
		UnityEngine_UI_OutlineWrap.Register(L);
		UnityEngine_UI_PositionAsUV1Wrap.Register(L);
		UnityEngine_UI_ShadowWrap.Register(L);
		L.BeginModule("Button");
		UnityEngine_UI_Button_ButtonClickedEventWrap.Register(L);
		L.EndModule();
		L.BeginModule("DefaultControls");
		UnityEngine_UI_DefaultControls_ResourcesWrap.Register(L);
		L.EndModule();
		L.BeginModule("Dropdown");
		UnityEngine_UI_Dropdown_OptionDataWrap.Register(L);
		UnityEngine_UI_Dropdown_OptionDataListWrap.Register(L);
		UnityEngine_UI_Dropdown_DropdownEventWrap.Register(L);
		L.EndModule();
		L.BeginModule("GraphicRaycaster");
		UnityEngine_UI_GraphicRaycaster_BlockingObjectsWrap.Register(L);
		L.EndModule();
		L.BeginModule("Image");
		UnityEngine_UI_Image_TypeWrap.Register(L);
		UnityEngine_UI_Image_FillMethodWrap.Register(L);
		UnityEngine_UI_Image_OriginHorizontalWrap.Register(L);
		UnityEngine_UI_Image_OriginVerticalWrap.Register(L);
		UnityEngine_UI_Image_Origin90Wrap.Register(L);
		UnityEngine_UI_Image_Origin180Wrap.Register(L);
		UnityEngine_UI_Image_Origin360Wrap.Register(L);
		L.EndModule();
		L.BeginModule("InputField");
		UnityEngine_UI_InputField_ContentTypeWrap.Register(L);
		UnityEngine_UI_InputField_InputTypeWrap.Register(L);
		UnityEngine_UI_InputField_CharacterValidationWrap.Register(L);
		UnityEngine_UI_InputField_LineTypeWrap.Register(L);
		UnityEngine_UI_InputField_SubmitEventWrap.Register(L);
		UnityEngine_UI_InputField_OnChangeEventWrap.Register(L);
		L.RegFunction("OnValidateInput", UnityEngine_UI_InputField_OnValidateInput);
		L.EndModule();
		L.BeginModule("MaskableGraphic");
		UnityEngine_UI_MaskableGraphic_CullStateChangedEventWrap.Register(L);
		L.EndModule();
		L.BeginModule("Navigation");
		UnityEngine_UI_Navigation_ModeWrap.Register(L);
		L.EndModule();
		L.BeginModule("Scrollbar");
		UnityEngine_UI_Scrollbar_DirectionWrap.Register(L);
		UnityEngine_UI_Scrollbar_ScrollEventWrap.Register(L);
		L.EndModule();
		L.BeginModule("ScrollRect");
		UnityEngine_UI_ScrollRect_MovementTypeWrap.Register(L);
		UnityEngine_UI_ScrollRect_ScrollbarVisibilityWrap.Register(L);
		UnityEngine_UI_ScrollRect_ScrollRectEventWrap.Register(L);
		L.EndModule();
		L.BeginModule("Selectable");
		UnityEngine_UI_Selectable_TransitionWrap.Register(L);
		L.EndModule();
		L.BeginModule("Slider");
		UnityEngine_UI_Slider_DirectionWrap.Register(L);
		UnityEngine_UI_Slider_SliderEventWrap.Register(L);
		L.EndModule();
		L.BeginModule("Toggle");
		UnityEngine_UI_Toggle_ToggleTransitionWrap.Register(L);
		UnityEngine_UI_Toggle_ToggleEventWrap.Register(L);
		L.EndModule();
		L.BeginModule("AspectRatioFitter");
		UnityEngine_UI_AspectRatioFitter_AspectModeWrap.Register(L);
		L.EndModule();
		L.BeginModule("CanvasScaler");
		UnityEngine_UI_CanvasScaler_ScaleModeWrap.Register(L);
		UnityEngine_UI_CanvasScaler_ScreenMatchModeWrap.Register(L);
		UnityEngine_UI_CanvasScaler_UnitWrap.Register(L);
		L.EndModule();
		L.BeginModule("ContentSizeFitter");
		UnityEngine_UI_ContentSizeFitter_FitModeWrap.Register(L);
		L.EndModule();
		L.BeginModule("GridLayoutGroup");
		UnityEngine_UI_GridLayoutGroup_CornerWrap.Register(L);
		UnityEngine_UI_GridLayoutGroup_AxisWrap.Register(L);
		UnityEngine_UI_GridLayoutGroup_ConstraintWrap.Register(L);
		L.EndModule();
		L.EndModule();
		L.BeginModule("Application");
		L.RegFunction("LogCallback", UnityEngine_Application_LogCallback);
		L.RegFunction("AdvertisingIdentifierCallback", UnityEngine_Application_AdvertisingIdentifierCallback);
		L.EndModule();
		L.BeginModule("Camera");
		L.RegFunction("CameraCallback", UnityEngine_Camera_CameraCallback);
		L.EndModule();
		L.BeginModule("Font");
		L.RegFunction("FontTextureRebuildCallback", UnityEngine_Font_FontTextureRebuildCallback);
		L.EndModule();
		L.BeginModule("Canvas");
		L.RegFunction("WillRenderCanvases", UnityEngine_Canvas_WillRenderCanvases);
		L.EndModule();
		L.EndModule();
		L.BeginModule("NBsn");
		NBsn_ConfigWrap.Register(L);
		NBsn_GlobalWrap.Register(L);
		NBsn_LuaLooperWrap.Register(L);
		NBsn_MainWrap.Register(L);
		L.EndModule();
		L.BeginModule("System");
		System_AttributeWrap.Register(L);
		L.RegFunction("Action", System_Action);
		L.RegFunction("Predicate_int", System_Predicate_int);
		L.RegFunction("Action_int", System_Action_int);
		L.RegFunction("Comparison_int", System_Comparison_int);
		L.RegFunction("Action_UnityEngine_Font", System_Action_UnityEngine_Font);
		L.RegFunction("Func_UnityEngine_UI_ILayoutElement_float", System_Func_UnityEngine_UI_ILayoutElement_float);
		L.EndModule();
		L.EndModule();
		L.BeginPreLoad();
		L.AddPreLoad("UnityEngine.MeshRenderer", LuaOpen_UnityEngine_MeshRenderer, typeof(UnityEngine.MeshRenderer));
		L.AddPreLoad("UnityEngine.ParticleEmitter", LuaOpen_UnityEngine_ParticleEmitter, typeof(UnityEngine.ParticleEmitter));
		L.AddPreLoad("UnityEngine.ParticleRenderer", LuaOpen_UnityEngine_ParticleRenderer, typeof(UnityEngine.ParticleRenderer));
		L.AddPreLoad("UnityEngine.ParticleAnimator", LuaOpen_UnityEngine_ParticleAnimator, typeof(UnityEngine.ParticleAnimator));
		L.AddPreLoad("UnityEngine.BoxCollider", LuaOpen_UnityEngine_BoxCollider, typeof(UnityEngine.BoxCollider));
		L.AddPreLoad("UnityEngine.MeshCollider", LuaOpen_UnityEngine_MeshCollider, typeof(UnityEngine.MeshCollider));
		L.AddPreLoad("UnityEngine.SphereCollider", LuaOpen_UnityEngine_SphereCollider, typeof(UnityEngine.SphereCollider));
		L.AddPreLoad("UnityEngine.CharacterController", LuaOpen_UnityEngine_CharacterController, typeof(UnityEngine.CharacterController));
		L.AddPreLoad("UnityEngine.CapsuleCollider", LuaOpen_UnityEngine_CapsuleCollider, typeof(UnityEngine.CapsuleCollider));
		L.AddPreLoad("UnityEngine.Animation", LuaOpen_UnityEngine_Animation, typeof(UnityEngine.Animation));
		L.AddPreLoad("UnityEngine.AnimationClip", LuaOpen_UnityEngine_AnimationClip, typeof(UnityEngine.AnimationClip));
		L.AddPreLoad("UnityEngine.AnimationState", LuaOpen_UnityEngine_AnimationState, typeof(UnityEngine.AnimationState));
		L.AddPreLoad("UnityEngine.BlendWeights", LuaOpen_UnityEngine_BlendWeights, typeof(UnityEngine.BlendWeights));
		L.AddPreLoad("UnityEngine.RenderTexture", LuaOpen_UnityEngine_RenderTexture, typeof(UnityEngine.RenderTexture));
		L.AddPreLoad("UnityEngine.Rigidbody", LuaOpen_UnityEngine_Rigidbody, typeof(UnityEngine.Rigidbody));
		L.EndPreLoad();
		Debugger.Log("Register lua type cost time: {0}", Time.realtimeSinceStartup - t);
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UnityEngine_RectTransform_ReapplyDrivenProperties(IntPtr L)
	{
		try

		{
			int count = LuaDLL.lua_gettop(L);
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);

			if (count == 1)
			{
				Delegate arg1 = DelegateFactory.CreateDelegate(typeof(UnityEngine.RectTransform.ReapplyDrivenProperties), func);
				ToLua.Push(L, arg1);
			}
			else
			{
				LuaTable self = ToLua.CheckLuaTable(L, 2);
				Delegate arg1 = DelegateFactory.CreateDelegate(typeof(UnityEngine.RectTransform.ReapplyDrivenProperties), func, self);
				ToLua.Push(L, arg1);
			}
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UnityEngine_GUI_WindowFunction(IntPtr L)
	{
		try

		{
			int count = LuaDLL.lua_gettop(L);
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);

			if (count == 1)
			{
				Delegate arg1 = DelegateFactory.CreateDelegate(typeof(UnityEngine.GUI.WindowFunction), func);
				ToLua.Push(L, arg1);
			}
			else
			{
				LuaTable self = ToLua.CheckLuaTable(L, 2);
				Delegate arg1 = DelegateFactory.CreateDelegate(typeof(UnityEngine.GUI.WindowFunction), func, self);
				ToLua.Push(L, arg1);
			}
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UnityEngine_Networking_Match_NetworkMatch_ResponseDelegate_UnityEngine_Networking_Match_CreateMatchResponse(IntPtr L)
	{
		try

		{
			int count = LuaDLL.lua_gettop(L);
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);

			if (count == 1)
			{
				Delegate arg1 = DelegateFactory.CreateDelegate(typeof(UnityEngine.Networking.Match.NetworkMatch.ResponseDelegate<UnityEngine.Networking.Match.CreateMatchResponse>), func);
				ToLua.Push(L, arg1);
			}
			else
			{
				LuaTable self = ToLua.CheckLuaTable(L, 2);
				Delegate arg1 = DelegateFactory.CreateDelegate(typeof(UnityEngine.Networking.Match.NetworkMatch.ResponseDelegate<UnityEngine.Networking.Match.CreateMatchResponse>), func, self);
				ToLua.Push(L, arg1);
			}
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UnityEngine_Networking_Match_NetworkMatch_ResponseDelegate_UnityEngine_Networking_Match_JoinMatchResponse(IntPtr L)
	{
		try

		{
			int count = LuaDLL.lua_gettop(L);
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);

			if (count == 1)
			{
				Delegate arg1 = DelegateFactory.CreateDelegate(typeof(UnityEngine.Networking.Match.NetworkMatch.ResponseDelegate<UnityEngine.Networking.Match.JoinMatchResponse>), func);
				ToLua.Push(L, arg1);
			}
			else
			{
				LuaTable self = ToLua.CheckLuaTable(L, 2);
				Delegate arg1 = DelegateFactory.CreateDelegate(typeof(UnityEngine.Networking.Match.NetworkMatch.ResponseDelegate<UnityEngine.Networking.Match.JoinMatchResponse>), func, self);
				ToLua.Push(L, arg1);
			}
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UnityEngine_Networking_Match_NetworkMatch_ResponseDelegate_UnityEngine_Networking_Match_BasicResponse(IntPtr L)
	{
		try

		{
			int count = LuaDLL.lua_gettop(L);
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);

			if (count == 1)
			{
				Delegate arg1 = DelegateFactory.CreateDelegate(typeof(UnityEngine.Networking.Match.NetworkMatch.ResponseDelegate<UnityEngine.Networking.Match.BasicResponse>), func);
				ToLua.Push(L, arg1);
			}
			else
			{
				LuaTable self = ToLua.CheckLuaTable(L, 2);
				Delegate arg1 = DelegateFactory.CreateDelegate(typeof(UnityEngine.Networking.Match.NetworkMatch.ResponseDelegate<UnityEngine.Networking.Match.BasicResponse>), func, self);
				ToLua.Push(L, arg1);
			}
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UnityEngine_Networking_Match_NetworkMatch_ResponseDelegate_UnityEngine_Networking_Match_ListMatchResponse(IntPtr L)
	{
		try

		{
			int count = LuaDLL.lua_gettop(L);
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);

			if (count == 1)
			{
				Delegate arg1 = DelegateFactory.CreateDelegate(typeof(UnityEngine.Networking.Match.NetworkMatch.ResponseDelegate<UnityEngine.Networking.Match.ListMatchResponse>), func);
				ToLua.Push(L, arg1);
			}
			else
			{
				LuaTable self = ToLua.CheckLuaTable(L, 2);
				Delegate arg1 = DelegateFactory.CreateDelegate(typeof(UnityEngine.Networking.Match.NetworkMatch.ResponseDelegate<UnityEngine.Networking.Match.ListMatchResponse>), func, self);
				ToLua.Push(L, arg1);
			}
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UnityEngine_Events_UnityAction(IntPtr L)
	{
		try

		{
			int count = LuaDLL.lua_gettop(L);
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);

			if (count == 1)
			{
				Delegate arg1 = DelegateFactory.CreateDelegate(typeof(UnityEngine.Events.UnityAction), func);
				ToLua.Push(L, arg1);
			}
			else
			{
				LuaTable self = ToLua.CheckLuaTable(L, 2);
				Delegate arg1 = DelegateFactory.CreateDelegate(typeof(UnityEngine.Events.UnityAction), func, self);
				ToLua.Push(L, arg1);
			}
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UnityEngine_Events_UnityAction_int(IntPtr L)
	{
		try

		{
			int count = LuaDLL.lua_gettop(L);
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);

			if (count == 1)
			{
				Delegate arg1 = DelegateFactory.CreateDelegate(typeof(UnityEngine.Events.UnityAction<int>), func);
				ToLua.Push(L, arg1);
			}
			else
			{
				LuaTable self = ToLua.CheckLuaTable(L, 2);
				Delegate arg1 = DelegateFactory.CreateDelegate(typeof(UnityEngine.Events.UnityAction<int>), func, self);
				ToLua.Push(L, arg1);
			}
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UnityEngine_Events_UnityAction_string(IntPtr L)
	{
		try

		{
			int count = LuaDLL.lua_gettop(L);
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);

			if (count == 1)
			{
				Delegate arg1 = DelegateFactory.CreateDelegate(typeof(UnityEngine.Events.UnityAction<string>), func);
				ToLua.Push(L, arg1);
			}
			else
			{
				LuaTable self = ToLua.CheckLuaTable(L, 2);
				Delegate arg1 = DelegateFactory.CreateDelegate(typeof(UnityEngine.Events.UnityAction<string>), func, self);
				ToLua.Push(L, arg1);
			}
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UnityEngine_Events_UnityAction_bool(IntPtr L)
	{
		try

		{
			int count = LuaDLL.lua_gettop(L);
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);

			if (count == 1)
			{
				Delegate arg1 = DelegateFactory.CreateDelegate(typeof(UnityEngine.Events.UnityAction<bool>), func);
				ToLua.Push(L, arg1);
			}
			else
			{
				LuaTable self = ToLua.CheckLuaTable(L, 2);
				Delegate arg1 = DelegateFactory.CreateDelegate(typeof(UnityEngine.Events.UnityAction<bool>), func, self);
				ToLua.Push(L, arg1);
			}
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UnityEngine_Events_UnityAction_float(IntPtr L)
	{
		try

		{
			int count = LuaDLL.lua_gettop(L);
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);

			if (count == 1)
			{
				Delegate arg1 = DelegateFactory.CreateDelegate(typeof(UnityEngine.Events.UnityAction<float>), func);
				ToLua.Push(L, arg1);
			}
			else
			{
				LuaTable self = ToLua.CheckLuaTable(L, 2);
				Delegate arg1 = DelegateFactory.CreateDelegate(typeof(UnityEngine.Events.UnityAction<float>), func, self);
				ToLua.Push(L, arg1);
			}
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UnityEngine_Events_UnityAction_UnityEngine_Vector2(IntPtr L)
	{
		try

		{
			int count = LuaDLL.lua_gettop(L);
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);

			if (count == 1)
			{
				Delegate arg1 = DelegateFactory.CreateDelegate(typeof(UnityEngine.Events.UnityAction<UnityEngine.Vector2>), func);
				ToLua.Push(L, arg1);
			}
			else
			{
				LuaTable self = ToLua.CheckLuaTable(L, 2);
				Delegate arg1 = DelegateFactory.CreateDelegate(typeof(UnityEngine.Events.UnityAction<UnityEngine.Vector2>), func, self);
				ToLua.Push(L, arg1);
			}
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UnityEngine_Events_UnityAction_UnityEngine_EventSystems_BaseEventData(IntPtr L)
	{
		try

		{
			int count = LuaDLL.lua_gettop(L);
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);

			if (count == 1)
			{
				Delegate arg1 = DelegateFactory.CreateDelegate(typeof(UnityEngine.Events.UnityAction<UnityEngine.EventSystems.BaseEventData>), func);
				ToLua.Push(L, arg1);
			}
			else
			{
				LuaTable self = ToLua.CheckLuaTable(L, 2);
				Delegate arg1 = DelegateFactory.CreateDelegate(typeof(UnityEngine.Events.UnityAction<UnityEngine.EventSystems.BaseEventData>), func, self);
				ToLua.Push(L, arg1);
			}
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UnityEngine_EventSystems_ExecuteEvents_EventFunction_UnityEngine_EventSystems_IPointerEnterHandler(IntPtr L)
	{
		try

		{
			int count = LuaDLL.lua_gettop(L);
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);

			if (count == 1)
			{
				Delegate arg1 = DelegateFactory.CreateDelegate(typeof(UnityEngine.EventSystems.ExecuteEvents.EventFunction<UnityEngine.EventSystems.IPointerEnterHandler>), func);
				ToLua.Push(L, arg1);
			}
			else
			{
				LuaTable self = ToLua.CheckLuaTable(L, 2);
				Delegate arg1 = DelegateFactory.CreateDelegate(typeof(UnityEngine.EventSystems.ExecuteEvents.EventFunction<UnityEngine.EventSystems.IPointerEnterHandler>), func, self);
				ToLua.Push(L, arg1);
			}
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UnityEngine_EventSystems_ExecuteEvents_EventFunction_UnityEngine_EventSystems_IPointerExitHandler(IntPtr L)
	{
		try

		{
			int count = LuaDLL.lua_gettop(L);
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);

			if (count == 1)
			{
				Delegate arg1 = DelegateFactory.CreateDelegate(typeof(UnityEngine.EventSystems.ExecuteEvents.EventFunction<UnityEngine.EventSystems.IPointerExitHandler>), func);
				ToLua.Push(L, arg1);
			}
			else
			{
				LuaTable self = ToLua.CheckLuaTable(L, 2);
				Delegate arg1 = DelegateFactory.CreateDelegate(typeof(UnityEngine.EventSystems.ExecuteEvents.EventFunction<UnityEngine.EventSystems.IPointerExitHandler>), func, self);
				ToLua.Push(L, arg1);
			}
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UnityEngine_EventSystems_ExecuteEvents_EventFunction_UnityEngine_EventSystems_IPointerDownHandler(IntPtr L)
	{
		try

		{
			int count = LuaDLL.lua_gettop(L);
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);

			if (count == 1)
			{
				Delegate arg1 = DelegateFactory.CreateDelegate(typeof(UnityEngine.EventSystems.ExecuteEvents.EventFunction<UnityEngine.EventSystems.IPointerDownHandler>), func);
				ToLua.Push(L, arg1);
			}
			else
			{
				LuaTable self = ToLua.CheckLuaTable(L, 2);
				Delegate arg1 = DelegateFactory.CreateDelegate(typeof(UnityEngine.EventSystems.ExecuteEvents.EventFunction<UnityEngine.EventSystems.IPointerDownHandler>), func, self);
				ToLua.Push(L, arg1);
			}
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UnityEngine_EventSystems_ExecuteEvents_EventFunction_UnityEngine_EventSystems_IPointerUpHandler(IntPtr L)
	{
		try

		{
			int count = LuaDLL.lua_gettop(L);
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);

			if (count == 1)
			{
				Delegate arg1 = DelegateFactory.CreateDelegate(typeof(UnityEngine.EventSystems.ExecuteEvents.EventFunction<UnityEngine.EventSystems.IPointerUpHandler>), func);
				ToLua.Push(L, arg1);
			}
			else
			{
				LuaTable self = ToLua.CheckLuaTable(L, 2);
				Delegate arg1 = DelegateFactory.CreateDelegate(typeof(UnityEngine.EventSystems.ExecuteEvents.EventFunction<UnityEngine.EventSystems.IPointerUpHandler>), func, self);
				ToLua.Push(L, arg1);
			}
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UnityEngine_EventSystems_ExecuteEvents_EventFunction_UnityEngine_EventSystems_IPointerClickHandler(IntPtr L)
	{
		try

		{
			int count = LuaDLL.lua_gettop(L);
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);

			if (count == 1)
			{
				Delegate arg1 = DelegateFactory.CreateDelegate(typeof(UnityEngine.EventSystems.ExecuteEvents.EventFunction<UnityEngine.EventSystems.IPointerClickHandler>), func);
				ToLua.Push(L, arg1);
			}
			else
			{
				LuaTable self = ToLua.CheckLuaTable(L, 2);
				Delegate arg1 = DelegateFactory.CreateDelegate(typeof(UnityEngine.EventSystems.ExecuteEvents.EventFunction<UnityEngine.EventSystems.IPointerClickHandler>), func, self);
				ToLua.Push(L, arg1);
			}
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UnityEngine_EventSystems_ExecuteEvents_EventFunction_UnityEngine_EventSystems_IInitializePotentialDragHandler(IntPtr L)
	{
		try

		{
			int count = LuaDLL.lua_gettop(L);
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);

			if (count == 1)
			{
				Delegate arg1 = DelegateFactory.CreateDelegate(typeof(UnityEngine.EventSystems.ExecuteEvents.EventFunction<UnityEngine.EventSystems.IInitializePotentialDragHandler>), func);
				ToLua.Push(L, arg1);
			}
			else
			{
				LuaTable self = ToLua.CheckLuaTable(L, 2);
				Delegate arg1 = DelegateFactory.CreateDelegate(typeof(UnityEngine.EventSystems.ExecuteEvents.EventFunction<UnityEngine.EventSystems.IInitializePotentialDragHandler>), func, self);
				ToLua.Push(L, arg1);
			}
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UnityEngine_EventSystems_ExecuteEvents_EventFunction_UnityEngine_EventSystems_IBeginDragHandler(IntPtr L)
	{
		try

		{
			int count = LuaDLL.lua_gettop(L);
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);

			if (count == 1)
			{
				Delegate arg1 = DelegateFactory.CreateDelegate(typeof(UnityEngine.EventSystems.ExecuteEvents.EventFunction<UnityEngine.EventSystems.IBeginDragHandler>), func);
				ToLua.Push(L, arg1);
			}
			else
			{
				LuaTable self = ToLua.CheckLuaTable(L, 2);
				Delegate arg1 = DelegateFactory.CreateDelegate(typeof(UnityEngine.EventSystems.ExecuteEvents.EventFunction<UnityEngine.EventSystems.IBeginDragHandler>), func, self);
				ToLua.Push(L, arg1);
			}
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UnityEngine_EventSystems_ExecuteEvents_EventFunction_UnityEngine_EventSystems_IDragHandler(IntPtr L)
	{
		try

		{
			int count = LuaDLL.lua_gettop(L);
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);

			if (count == 1)
			{
				Delegate arg1 = DelegateFactory.CreateDelegate(typeof(UnityEngine.EventSystems.ExecuteEvents.EventFunction<UnityEngine.EventSystems.IDragHandler>), func);
				ToLua.Push(L, arg1);
			}
			else
			{
				LuaTable self = ToLua.CheckLuaTable(L, 2);
				Delegate arg1 = DelegateFactory.CreateDelegate(typeof(UnityEngine.EventSystems.ExecuteEvents.EventFunction<UnityEngine.EventSystems.IDragHandler>), func, self);
				ToLua.Push(L, arg1);
			}
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UnityEngine_EventSystems_ExecuteEvents_EventFunction_UnityEngine_EventSystems_IEndDragHandler(IntPtr L)
	{
		try

		{
			int count = LuaDLL.lua_gettop(L);
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);

			if (count == 1)
			{
				Delegate arg1 = DelegateFactory.CreateDelegate(typeof(UnityEngine.EventSystems.ExecuteEvents.EventFunction<UnityEngine.EventSystems.IEndDragHandler>), func);
				ToLua.Push(L, arg1);
			}
			else
			{
				LuaTable self = ToLua.CheckLuaTable(L, 2);
				Delegate arg1 = DelegateFactory.CreateDelegate(typeof(UnityEngine.EventSystems.ExecuteEvents.EventFunction<UnityEngine.EventSystems.IEndDragHandler>), func, self);
				ToLua.Push(L, arg1);
			}
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UnityEngine_EventSystems_ExecuteEvents_EventFunction_UnityEngine_EventSystems_IDropHandler(IntPtr L)
	{
		try

		{
			int count = LuaDLL.lua_gettop(L);
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);

			if (count == 1)
			{
				Delegate arg1 = DelegateFactory.CreateDelegate(typeof(UnityEngine.EventSystems.ExecuteEvents.EventFunction<UnityEngine.EventSystems.IDropHandler>), func);
				ToLua.Push(L, arg1);
			}
			else
			{
				LuaTable self = ToLua.CheckLuaTable(L, 2);
				Delegate arg1 = DelegateFactory.CreateDelegate(typeof(UnityEngine.EventSystems.ExecuteEvents.EventFunction<UnityEngine.EventSystems.IDropHandler>), func, self);
				ToLua.Push(L, arg1);
			}
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UnityEngine_EventSystems_ExecuteEvents_EventFunction_UnityEngine_EventSystems_IScrollHandler(IntPtr L)
	{
		try

		{
			int count = LuaDLL.lua_gettop(L);
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);

			if (count == 1)
			{
				Delegate arg1 = DelegateFactory.CreateDelegate(typeof(UnityEngine.EventSystems.ExecuteEvents.EventFunction<UnityEngine.EventSystems.IScrollHandler>), func);
				ToLua.Push(L, arg1);
			}
			else
			{
				LuaTable self = ToLua.CheckLuaTable(L, 2);
				Delegate arg1 = DelegateFactory.CreateDelegate(typeof(UnityEngine.EventSystems.ExecuteEvents.EventFunction<UnityEngine.EventSystems.IScrollHandler>), func, self);
				ToLua.Push(L, arg1);
			}
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UnityEngine_EventSystems_ExecuteEvents_EventFunction_UnityEngine_EventSystems_IUpdateSelectedHandler(IntPtr L)
	{
		try

		{
			int count = LuaDLL.lua_gettop(L);
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);

			if (count == 1)
			{
				Delegate arg1 = DelegateFactory.CreateDelegate(typeof(UnityEngine.EventSystems.ExecuteEvents.EventFunction<UnityEngine.EventSystems.IUpdateSelectedHandler>), func);
				ToLua.Push(L, arg1);
			}
			else
			{
				LuaTable self = ToLua.CheckLuaTable(L, 2);
				Delegate arg1 = DelegateFactory.CreateDelegate(typeof(UnityEngine.EventSystems.ExecuteEvents.EventFunction<UnityEngine.EventSystems.IUpdateSelectedHandler>), func, self);
				ToLua.Push(L, arg1);
			}
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UnityEngine_EventSystems_ExecuteEvents_EventFunction_UnityEngine_EventSystems_ISelectHandler(IntPtr L)
	{
		try

		{
			int count = LuaDLL.lua_gettop(L);
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);

			if (count == 1)
			{
				Delegate arg1 = DelegateFactory.CreateDelegate(typeof(UnityEngine.EventSystems.ExecuteEvents.EventFunction<UnityEngine.EventSystems.ISelectHandler>), func);
				ToLua.Push(L, arg1);
			}
			else
			{
				LuaTable self = ToLua.CheckLuaTable(L, 2);
				Delegate arg1 = DelegateFactory.CreateDelegate(typeof(UnityEngine.EventSystems.ExecuteEvents.EventFunction<UnityEngine.EventSystems.ISelectHandler>), func, self);
				ToLua.Push(L, arg1);
			}
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UnityEngine_EventSystems_ExecuteEvents_EventFunction_UnityEngine_EventSystems_IDeselectHandler(IntPtr L)
	{
		try

		{
			int count = LuaDLL.lua_gettop(L);
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);

			if (count == 1)
			{
				Delegate arg1 = DelegateFactory.CreateDelegate(typeof(UnityEngine.EventSystems.ExecuteEvents.EventFunction<UnityEngine.EventSystems.IDeselectHandler>), func);
				ToLua.Push(L, arg1);
			}
			else
			{
				LuaTable self = ToLua.CheckLuaTable(L, 2);
				Delegate arg1 = DelegateFactory.CreateDelegate(typeof(UnityEngine.EventSystems.ExecuteEvents.EventFunction<UnityEngine.EventSystems.IDeselectHandler>), func, self);
				ToLua.Push(L, arg1);
			}
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UnityEngine_EventSystems_ExecuteEvents_EventFunction_UnityEngine_EventSystems_IMoveHandler(IntPtr L)
	{
		try

		{
			int count = LuaDLL.lua_gettop(L);
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);

			if (count == 1)
			{
				Delegate arg1 = DelegateFactory.CreateDelegate(typeof(UnityEngine.EventSystems.ExecuteEvents.EventFunction<UnityEngine.EventSystems.IMoveHandler>), func);
				ToLua.Push(L, arg1);
			}
			else
			{
				LuaTable self = ToLua.CheckLuaTable(L, 2);
				Delegate arg1 = DelegateFactory.CreateDelegate(typeof(UnityEngine.EventSystems.ExecuteEvents.EventFunction<UnityEngine.EventSystems.IMoveHandler>), func, self);
				ToLua.Push(L, arg1);
			}
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UnityEngine_EventSystems_ExecuteEvents_EventFunction_UnityEngine_EventSystems_ISubmitHandler(IntPtr L)
	{
		try

		{
			int count = LuaDLL.lua_gettop(L);
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);

			if (count == 1)
			{
				Delegate arg1 = DelegateFactory.CreateDelegate(typeof(UnityEngine.EventSystems.ExecuteEvents.EventFunction<UnityEngine.EventSystems.ISubmitHandler>), func);
				ToLua.Push(L, arg1);
			}
			else
			{
				LuaTable self = ToLua.CheckLuaTable(L, 2);
				Delegate arg1 = DelegateFactory.CreateDelegate(typeof(UnityEngine.EventSystems.ExecuteEvents.EventFunction<UnityEngine.EventSystems.ISubmitHandler>), func, self);
				ToLua.Push(L, arg1);
			}
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UnityEngine_EventSystems_ExecuteEvents_EventFunction_UnityEngine_EventSystems_ICancelHandler(IntPtr L)
	{
		try

		{
			int count = LuaDLL.lua_gettop(L);
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);

			if (count == 1)
			{
				Delegate arg1 = DelegateFactory.CreateDelegate(typeof(UnityEngine.EventSystems.ExecuteEvents.EventFunction<UnityEngine.EventSystems.ICancelHandler>), func);
				ToLua.Push(L, arg1);
			}
			else
			{
				LuaTable self = ToLua.CheckLuaTable(L, 2);
				Delegate arg1 = DelegateFactory.CreateDelegate(typeof(UnityEngine.EventSystems.ExecuteEvents.EventFunction<UnityEngine.EventSystems.ICancelHandler>), func, self);
				ToLua.Push(L, arg1);
			}
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UnityEngine_UI_InputField_OnValidateInput(IntPtr L)
	{
		try

		{
			int count = LuaDLL.lua_gettop(L);
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);

			if (count == 1)
			{
				Delegate arg1 = DelegateFactory.CreateDelegate(typeof(UnityEngine.UI.InputField.OnValidateInput), func);
				ToLua.Push(L, arg1);
			}
			else
			{
				LuaTable self = ToLua.CheckLuaTable(L, 2);
				Delegate arg1 = DelegateFactory.CreateDelegate(typeof(UnityEngine.UI.InputField.OnValidateInput), func, self);
				ToLua.Push(L, arg1);
			}
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UnityEngine_Application_LogCallback(IntPtr L)
	{
		try

		{
			int count = LuaDLL.lua_gettop(L);
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);

			if (count == 1)
			{
				Delegate arg1 = DelegateFactory.CreateDelegate(typeof(UnityEngine.Application.LogCallback), func);
				ToLua.Push(L, arg1);
			}
			else
			{
				LuaTable self = ToLua.CheckLuaTable(L, 2);
				Delegate arg1 = DelegateFactory.CreateDelegate(typeof(UnityEngine.Application.LogCallback), func, self);
				ToLua.Push(L, arg1);
			}
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UnityEngine_Application_AdvertisingIdentifierCallback(IntPtr L)
	{
		try

		{
			int count = LuaDLL.lua_gettop(L);
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);

			if (count == 1)
			{
				Delegate arg1 = DelegateFactory.CreateDelegate(typeof(UnityEngine.Application.AdvertisingIdentifierCallback), func);
				ToLua.Push(L, arg1);
			}
			else
			{
				LuaTable self = ToLua.CheckLuaTable(L, 2);
				Delegate arg1 = DelegateFactory.CreateDelegate(typeof(UnityEngine.Application.AdvertisingIdentifierCallback), func, self);
				ToLua.Push(L, arg1);
			}
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UnityEngine_Camera_CameraCallback(IntPtr L)
	{
		try

		{
			int count = LuaDLL.lua_gettop(L);
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);

			if (count == 1)
			{
				Delegate arg1 = DelegateFactory.CreateDelegate(typeof(UnityEngine.Camera.CameraCallback), func);
				ToLua.Push(L, arg1);
			}
			else
			{
				LuaTable self = ToLua.CheckLuaTable(L, 2);
				Delegate arg1 = DelegateFactory.CreateDelegate(typeof(UnityEngine.Camera.CameraCallback), func, self);
				ToLua.Push(L, arg1);
			}
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UnityEngine_Font_FontTextureRebuildCallback(IntPtr L)
	{
		try

		{
			int count = LuaDLL.lua_gettop(L);
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);

			if (count == 1)
			{
				Delegate arg1 = DelegateFactory.CreateDelegate(typeof(UnityEngine.Font.FontTextureRebuildCallback), func);
				ToLua.Push(L, arg1);
			}
			else
			{
				LuaTable self = ToLua.CheckLuaTable(L, 2);
				Delegate arg1 = DelegateFactory.CreateDelegate(typeof(UnityEngine.Font.FontTextureRebuildCallback), func, self);
				ToLua.Push(L, arg1);
			}
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UnityEngine_Canvas_WillRenderCanvases(IntPtr L)
	{
		try

		{
			int count = LuaDLL.lua_gettop(L);
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);

			if (count == 1)
			{
				Delegate arg1 = DelegateFactory.CreateDelegate(typeof(UnityEngine.Canvas.WillRenderCanvases), func);
				ToLua.Push(L, arg1);
			}
			else
			{
				LuaTable self = ToLua.CheckLuaTable(L, 2);
				Delegate arg1 = DelegateFactory.CreateDelegate(typeof(UnityEngine.Canvas.WillRenderCanvases), func, self);
				ToLua.Push(L, arg1);
			}
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int System_Action(IntPtr L)
	{
		try

		{
			int count = LuaDLL.lua_gettop(L);
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);

			if (count == 1)
			{
				Delegate arg1 = DelegateFactory.CreateDelegate(typeof(System.Action), func);
				ToLua.Push(L, arg1);
			}
			else
			{
				LuaTable self = ToLua.CheckLuaTable(L, 2);
				Delegate arg1 = DelegateFactory.CreateDelegate(typeof(System.Action), func, self);
				ToLua.Push(L, arg1);
			}
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int System_Predicate_int(IntPtr L)
	{
		try

		{
			int count = LuaDLL.lua_gettop(L);
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);

			if (count == 1)
			{
				Delegate arg1 = DelegateFactory.CreateDelegate(typeof(System.Predicate<int>), func);
				ToLua.Push(L, arg1);
			}
			else
			{
				LuaTable self = ToLua.CheckLuaTable(L, 2);
				Delegate arg1 = DelegateFactory.CreateDelegate(typeof(System.Predicate<int>), func, self);
				ToLua.Push(L, arg1);
			}
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int System_Action_int(IntPtr L)
	{
		try

		{
			int count = LuaDLL.lua_gettop(L);
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);

			if (count == 1)
			{
				Delegate arg1 = DelegateFactory.CreateDelegate(typeof(System.Action<int>), func);
				ToLua.Push(L, arg1);
			}
			else
			{
				LuaTable self = ToLua.CheckLuaTable(L, 2);
				Delegate arg1 = DelegateFactory.CreateDelegate(typeof(System.Action<int>), func, self);
				ToLua.Push(L, arg1);
			}
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int System_Comparison_int(IntPtr L)
	{
		try

		{
			int count = LuaDLL.lua_gettop(L);
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);

			if (count == 1)
			{
				Delegate arg1 = DelegateFactory.CreateDelegate(typeof(System.Comparison<int>), func);
				ToLua.Push(L, arg1);
			}
			else
			{
				LuaTable self = ToLua.CheckLuaTable(L, 2);
				Delegate arg1 = DelegateFactory.CreateDelegate(typeof(System.Comparison<int>), func, self);
				ToLua.Push(L, arg1);
			}
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int System_Action_UnityEngine_Font(IntPtr L)
	{
		try

		{
			int count = LuaDLL.lua_gettop(L);
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);

			if (count == 1)
			{
				Delegate arg1 = DelegateFactory.CreateDelegate(typeof(System.Action<UnityEngine.Font>), func);
				ToLua.Push(L, arg1);
			}
			else
			{
				LuaTable self = ToLua.CheckLuaTable(L, 2);
				Delegate arg1 = DelegateFactory.CreateDelegate(typeof(System.Action<UnityEngine.Font>), func, self);
				ToLua.Push(L, arg1);
			}
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int System_Func_UnityEngine_UI_ILayoutElement_float(IntPtr L)
	{
		try

		{
			int count = LuaDLL.lua_gettop(L);
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);

			if (count == 1)
			{
				Delegate arg1 = DelegateFactory.CreateDelegate(typeof(System.Func<UnityEngine.UI.ILayoutElement,float>), func);
				ToLua.Push(L, arg1);
			}
			else
			{
				LuaTable self = ToLua.CheckLuaTable(L, 2);
				Delegate arg1 = DelegateFactory.CreateDelegate(typeof(System.Func<UnityEngine.UI.ILayoutElement,float>), func, self);
				ToLua.Push(L, arg1);
			}
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LuaOpen_UnityEngine_MeshRenderer(IntPtr L)
	{
		try
		{
			LuaState state = LuaState.Get(L);
			state.BeginPreModule("UnityEngine");
			UnityEngine_MeshRendererWrap.Register(state);
			int reference = state.GetMetaReference(typeof(UnityEngine.MeshRenderer));
			state.EndPreModule(L, reference);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LuaOpen_UnityEngine_ParticleEmitter(IntPtr L)
	{
		try
		{
			LuaState state = LuaState.Get(L);
			state.BeginPreModule("UnityEngine");
			UnityEngine_ParticleEmitterWrap.Register(state);
			int reference = state.GetMetaReference(typeof(UnityEngine.ParticleEmitter));
			state.EndPreModule(L, reference);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LuaOpen_UnityEngine_ParticleRenderer(IntPtr L)
	{
		try
		{
			LuaState state = LuaState.Get(L);
			state.BeginPreModule("UnityEngine");
			UnityEngine_ParticleRendererWrap.Register(state);
			int reference = state.GetMetaReference(typeof(UnityEngine.ParticleRenderer));
			state.EndPreModule(L, reference);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LuaOpen_UnityEngine_ParticleAnimator(IntPtr L)
	{
		try
		{
			LuaState state = LuaState.Get(L);
			state.BeginPreModule("UnityEngine");
			UnityEngine_ParticleAnimatorWrap.Register(state);
			int reference = state.GetMetaReference(typeof(UnityEngine.ParticleAnimator));
			state.EndPreModule(L, reference);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LuaOpen_UnityEngine_BoxCollider(IntPtr L)
	{
		try
		{
			LuaState state = LuaState.Get(L);
			state.BeginPreModule("UnityEngine");
			UnityEngine_BoxColliderWrap.Register(state);
			int reference = state.GetMetaReference(typeof(UnityEngine.BoxCollider));
			state.EndPreModule(L, reference);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LuaOpen_UnityEngine_MeshCollider(IntPtr L)
	{
		try
		{
			LuaState state = LuaState.Get(L);
			state.BeginPreModule("UnityEngine");
			UnityEngine_MeshColliderWrap.Register(state);
			int reference = state.GetMetaReference(typeof(UnityEngine.MeshCollider));
			state.EndPreModule(L, reference);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LuaOpen_UnityEngine_SphereCollider(IntPtr L)
	{
		try
		{
			LuaState state = LuaState.Get(L);
			state.BeginPreModule("UnityEngine");
			UnityEngine_SphereColliderWrap.Register(state);
			int reference = state.GetMetaReference(typeof(UnityEngine.SphereCollider));
			state.EndPreModule(L, reference);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LuaOpen_UnityEngine_CharacterController(IntPtr L)
	{
		try
		{
			LuaState state = LuaState.Get(L);
			state.BeginPreModule("UnityEngine");
			UnityEngine_CharacterControllerWrap.Register(state);
			int reference = state.GetMetaReference(typeof(UnityEngine.CharacterController));
			state.EndPreModule(L, reference);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LuaOpen_UnityEngine_CapsuleCollider(IntPtr L)
	{
		try
		{
			LuaState state = LuaState.Get(L);
			state.BeginPreModule("UnityEngine");
			UnityEngine_CapsuleColliderWrap.Register(state);
			int reference = state.GetMetaReference(typeof(UnityEngine.CapsuleCollider));
			state.EndPreModule(L, reference);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LuaOpen_UnityEngine_Animation(IntPtr L)
	{
		try
		{
			LuaState state = LuaState.Get(L);
			state.BeginPreModule("UnityEngine");
			UnityEngine_AnimationWrap.Register(state);
			int reference = state.GetMetaReference(typeof(UnityEngine.Animation));
			state.EndPreModule(L, reference);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LuaOpen_UnityEngine_AnimationClip(IntPtr L)
	{
		try
		{
			LuaState state = LuaState.Get(L);
			state.BeginPreModule("UnityEngine");
			UnityEngine_AnimationClipWrap.Register(state);
			int reference = state.GetMetaReference(typeof(UnityEngine.AnimationClip));
			state.EndPreModule(L, reference);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LuaOpen_UnityEngine_AnimationState(IntPtr L)
	{
		try
		{
			LuaState state = LuaState.Get(L);
			state.BeginPreModule("UnityEngine");
			UnityEngine_AnimationStateWrap.Register(state);
			int reference = state.GetMetaReference(typeof(UnityEngine.AnimationState));
			state.EndPreModule(L, reference);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LuaOpen_UnityEngine_BlendWeights(IntPtr L)
	{
		try
		{
			LuaState state = LuaState.Get(L);
			state.BeginPreModule("UnityEngine");
			UnityEngine_BlendWeightsWrap.Register(state);
			int reference = state.GetMetaReference(typeof(UnityEngine.BlendWeights));
			state.EndPreModule(L, reference);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LuaOpen_UnityEngine_RenderTexture(IntPtr L)
	{
		try
		{
			LuaState state = LuaState.Get(L);
			state.BeginPreModule("UnityEngine");
			UnityEngine_RenderTextureWrap.Register(state);
			int reference = state.GetMetaReference(typeof(UnityEngine.RenderTexture));
			state.EndPreModule(L, reference);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LuaOpen_UnityEngine_Rigidbody(IntPtr L)
	{
		try
		{
			LuaState state = LuaState.Get(L);
			state.BeginPreModule("UnityEngine");
			UnityEngine_RigidbodyWrap.Register(state);
			int reference = state.GetMetaReference(typeof(UnityEngine.Rigidbody));
			state.EndPreModule(L, reference);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

