//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class UnityEngine_OffMeshLinkDataWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(UnityEngine.OffMeshLinkData), null);
		L.RegFunction("New", _CreateUnityEngine_OffMeshLinkData);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("valid", get_valid, null);
		L.RegVar("activated", get_activated, null);
		L.RegVar("linkType", get_linkType, null);
		L.RegVar("startPos", get_startPos, null);
		L.RegVar("endPos", get_endPos, null);
		L.RegVar("offMeshLink", get_offMeshLink, null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateUnityEngine_OffMeshLinkData(IntPtr L)
	{
		UnityEngine.OffMeshLinkData obj = new UnityEngine.OffMeshLinkData();
		ToLua.PushValue(L, obj);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_valid(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.OffMeshLinkData obj = (UnityEngine.OffMeshLinkData)o;
			bool ret = obj.valid;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index valid on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_activated(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.OffMeshLinkData obj = (UnityEngine.OffMeshLinkData)o;
			bool ret = obj.activated;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index activated on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_linkType(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.OffMeshLinkData obj = (UnityEngine.OffMeshLinkData)o;
			UnityEngine.OffMeshLinkType ret = obj.linkType;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index linkType on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_startPos(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.OffMeshLinkData obj = (UnityEngine.OffMeshLinkData)o;
			UnityEngine.Vector3 ret = obj.startPos;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index startPos on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_endPos(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.OffMeshLinkData obj = (UnityEngine.OffMeshLinkData)o;
			UnityEngine.Vector3 ret = obj.endPos;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index endPos on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_offMeshLink(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.OffMeshLinkData obj = (UnityEngine.OffMeshLinkData)o;
			UnityEngine.OffMeshLink ret = obj.offMeshLink;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index offMeshLink on a nil value" : e.Message);
		}
	}
}

