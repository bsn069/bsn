//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class UnityEngine_ParticleSystem_TextureSheetAnimationModuleWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(UnityEngine.ParticleSystem.TextureSheetAnimationModule), null);
		L.RegFunction("New", _CreateUnityEngine_ParticleSystem_TextureSheetAnimationModule);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("enabled", get_enabled, set_enabled);
		L.RegVar("numTilesX", get_numTilesX, set_numTilesX);
		L.RegVar("numTilesY", get_numTilesY, set_numTilesY);
		L.RegVar("animation", get_animation, set_animation);
		L.RegVar("useRandomRow", get_useRandomRow, set_useRandomRow);
		L.RegVar("frameOverTime", get_frameOverTime, set_frameOverTime);
		L.RegVar("cycleCount", get_cycleCount, set_cycleCount);
		L.RegVar("rowIndex", get_rowIndex, set_rowIndex);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateUnityEngine_ParticleSystem_TextureSheetAnimationModule(IntPtr L)
	{
		UnityEngine.ParticleSystem.TextureSheetAnimationModule obj = new UnityEngine.ParticleSystem.TextureSheetAnimationModule();
		ToLua.PushValue(L, obj);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_enabled(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.TextureSheetAnimationModule obj = (UnityEngine.ParticleSystem.TextureSheetAnimationModule)o;
			bool ret = obj.enabled;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index enabled on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_numTilesX(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.TextureSheetAnimationModule obj = (UnityEngine.ParticleSystem.TextureSheetAnimationModule)o;
			int ret = obj.numTilesX;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index numTilesX on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_numTilesY(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.TextureSheetAnimationModule obj = (UnityEngine.ParticleSystem.TextureSheetAnimationModule)o;
			int ret = obj.numTilesY;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index numTilesY on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_animation(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.TextureSheetAnimationModule obj = (UnityEngine.ParticleSystem.TextureSheetAnimationModule)o;
			UnityEngine.ParticleSystemAnimationType ret = obj.animation;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index animation on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_useRandomRow(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.TextureSheetAnimationModule obj = (UnityEngine.ParticleSystem.TextureSheetAnimationModule)o;
			bool ret = obj.useRandomRow;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index useRandomRow on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_frameOverTime(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.TextureSheetAnimationModule obj = (UnityEngine.ParticleSystem.TextureSheetAnimationModule)o;
			UnityEngine.ParticleSystem.MinMaxCurve ret = obj.frameOverTime;
			ToLua.PushValue(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index frameOverTime on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_cycleCount(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.TextureSheetAnimationModule obj = (UnityEngine.ParticleSystem.TextureSheetAnimationModule)o;
			int ret = obj.cycleCount;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index cycleCount on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_rowIndex(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.TextureSheetAnimationModule obj = (UnityEngine.ParticleSystem.TextureSheetAnimationModule)o;
			int ret = obj.rowIndex;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index rowIndex on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_enabled(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.TextureSheetAnimationModule obj = (UnityEngine.ParticleSystem.TextureSheetAnimationModule)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.enabled = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index enabled on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_numTilesX(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.TextureSheetAnimationModule obj = (UnityEngine.ParticleSystem.TextureSheetAnimationModule)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.numTilesX = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index numTilesX on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_numTilesY(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.TextureSheetAnimationModule obj = (UnityEngine.ParticleSystem.TextureSheetAnimationModule)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.numTilesY = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index numTilesY on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_animation(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.TextureSheetAnimationModule obj = (UnityEngine.ParticleSystem.TextureSheetAnimationModule)o;
			UnityEngine.ParticleSystemAnimationType arg0 = (UnityEngine.ParticleSystemAnimationType)ToLua.CheckObject(L, 2, typeof(UnityEngine.ParticleSystemAnimationType));
			obj.animation = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index animation on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_useRandomRow(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.TextureSheetAnimationModule obj = (UnityEngine.ParticleSystem.TextureSheetAnimationModule)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.useRandomRow = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index useRandomRow on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_frameOverTime(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.TextureSheetAnimationModule obj = (UnityEngine.ParticleSystem.TextureSheetAnimationModule)o;
			UnityEngine.ParticleSystem.MinMaxCurve arg0 = (UnityEngine.ParticleSystem.MinMaxCurve)ToLua.CheckObject(L, 2, typeof(UnityEngine.ParticleSystem.MinMaxCurve));
			obj.frameOverTime = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index frameOverTime on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_cycleCount(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.TextureSheetAnimationModule obj = (UnityEngine.ParticleSystem.TextureSheetAnimationModule)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.cycleCount = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index cycleCount on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_rowIndex(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.TextureSheetAnimationModule obj = (UnityEngine.ParticleSystem.TextureSheetAnimationModule)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.rowIndex = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index rowIndex on a nil value" : e.Message);
		}
	}
}

