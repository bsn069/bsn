//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class UnityEngine_Networking_UtilityWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(UnityEngine.Networking.Utility), typeof(System.Object));
		L.RegFunction("GetSourceID", GetSourceID);
		L.RegFunction("SetAppID", SetAppID);
		L.RegFunction("GetAppID", GetAppID);
		L.RegFunction("SetAccessTokenForNetwork", SetAccessTokenForNetwork);
		L.RegFunction("GetAccessTokenForNetwork", GetAccessTokenForNetwork);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("useRandomSourceID", get_useRandomSourceID, set_useRandomSourceID);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetSourceID(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			UnityEngine.Networking.Types.SourceID o = UnityEngine.Networking.Utility.GetSourceID();
			ToLua.Push(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetAppID(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UnityEngine.Networking.Types.AppID arg0 = (UnityEngine.Networking.Types.AppID)ToLua.CheckObject(L, 1, typeof(UnityEngine.Networking.Types.AppID));
			UnityEngine.Networking.Utility.SetAppID(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetAppID(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			UnityEngine.Networking.Types.AppID o = UnityEngine.Networking.Utility.GetAppID();
			ToLua.Push(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetAccessTokenForNetwork(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Networking.Types.NetworkID arg0 = (UnityEngine.Networking.Types.NetworkID)ToLua.CheckObject(L, 1, typeof(UnityEngine.Networking.Types.NetworkID));
			UnityEngine.Networking.Types.NetworkAccessToken arg1 = (UnityEngine.Networking.Types.NetworkAccessToken)ToLua.CheckObject(L, 2, typeof(UnityEngine.Networking.Types.NetworkAccessToken));
			UnityEngine.Networking.Utility.SetAccessTokenForNetwork(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetAccessTokenForNetwork(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UnityEngine.Networking.Types.NetworkID arg0 = (UnityEngine.Networking.Types.NetworkID)ToLua.CheckObject(L, 1, typeof(UnityEngine.Networking.Types.NetworkID));
			UnityEngine.Networking.Types.NetworkAccessToken o = UnityEngine.Networking.Utility.GetAccessTokenForNetwork(arg0);
			ToLua.PushObject(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_useRandomSourceID(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushboolean(L, UnityEngine.Networking.Utility.useRandomSourceID);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_useRandomSourceID(IntPtr L)
	{
		try
		{
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			UnityEngine.Networking.Utility.useRandomSourceID = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

