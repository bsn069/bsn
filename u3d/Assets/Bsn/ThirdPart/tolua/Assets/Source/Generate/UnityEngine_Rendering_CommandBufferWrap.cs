//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class UnityEngine_Rendering_CommandBufferWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(UnityEngine.Rendering.CommandBuffer), typeof(System.Object));
		L.RegFunction("Dispose", Dispose);
		L.RegFunction("Release", Release);
		L.RegFunction("Clear", Clear);
		L.RegFunction("DrawMesh", DrawMesh);
		L.RegFunction("DrawRenderer", DrawRenderer);
		L.RegFunction("DrawProcedural", DrawProcedural);
		L.RegFunction("DrawProceduralIndirect", DrawProceduralIndirect);
		L.RegFunction("SetRenderTarget", SetRenderTarget);
		L.RegFunction("Blit", Blit);
		L.RegFunction("GetTemporaryRT", GetTemporaryRT);
		L.RegFunction("ReleaseTemporaryRT", ReleaseTemporaryRT);
		L.RegFunction("ClearRenderTarget", ClearRenderTarget);
		L.RegFunction("SetGlobalFloat", SetGlobalFloat);
		L.RegFunction("SetGlobalVector", SetGlobalVector);
		L.RegFunction("SetGlobalColor", SetGlobalColor);
		L.RegFunction("SetGlobalMatrix", SetGlobalMatrix);
		L.RegFunction("SetGlobalTexture", SetGlobalTexture);
		L.RegFunction("SetShadowSamplingMode", SetShadowSamplingMode);
		L.RegFunction("IssuePluginEvent", IssuePluginEvent);
		L.RegFunction("New", _CreateUnityEngine_Rendering_CommandBuffer);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("name", get_name, set_name);
		L.RegVar("sizeInBytes", get_sizeInBytes, null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateUnityEngine_Rendering_CommandBuffer(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				UnityEngine.Rendering.CommandBuffer obj = new UnityEngine.Rendering.CommandBuffer();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: UnityEngine.Rendering.CommandBuffer.New");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Dispose(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UnityEngine.Rendering.CommandBuffer obj = (UnityEngine.Rendering.CommandBuffer)ToLua.CheckObject(L, 1, typeof(UnityEngine.Rendering.CommandBuffer));
			obj.Dispose();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Release(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UnityEngine.Rendering.CommandBuffer obj = (UnityEngine.Rendering.CommandBuffer)ToLua.CheckObject(L, 1, typeof(UnityEngine.Rendering.CommandBuffer));
			obj.Release();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Clear(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UnityEngine.Rendering.CommandBuffer obj = (UnityEngine.Rendering.CommandBuffer)ToLua.CheckObject(L, 1, typeof(UnityEngine.Rendering.CommandBuffer));
			obj.Clear();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DrawMesh(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 4 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Rendering.CommandBuffer), typeof(UnityEngine.Mesh), typeof(UnityEngine.Matrix4x4), typeof(UnityEngine.Material)))
			{
				UnityEngine.Rendering.CommandBuffer obj = (UnityEngine.Rendering.CommandBuffer)ToLua.ToObject(L, 1);
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.ToObject(L, 2);
				UnityEngine.Matrix4x4 arg1 = (UnityEngine.Matrix4x4)ToLua.ToObject(L, 3);
				UnityEngine.Material arg2 = (UnityEngine.Material)ToLua.ToObject(L, 4);
				obj.DrawMesh(arg0, arg1, arg2);
				return 0;
			}
			else if (count == 5 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Rendering.CommandBuffer), typeof(UnityEngine.Mesh), typeof(UnityEngine.Matrix4x4), typeof(UnityEngine.Material), typeof(int)))
			{
				UnityEngine.Rendering.CommandBuffer obj = (UnityEngine.Rendering.CommandBuffer)ToLua.ToObject(L, 1);
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.ToObject(L, 2);
				UnityEngine.Matrix4x4 arg1 = (UnityEngine.Matrix4x4)ToLua.ToObject(L, 3);
				UnityEngine.Material arg2 = (UnityEngine.Material)ToLua.ToObject(L, 4);
				int arg3 = (int)LuaDLL.lua_tonumber(L, 5);
				obj.DrawMesh(arg0, arg1, arg2, arg3);
				return 0;
			}
			else if (count == 6 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Rendering.CommandBuffer), typeof(UnityEngine.Mesh), typeof(UnityEngine.Matrix4x4), typeof(UnityEngine.Material), typeof(int), typeof(int)))
			{
				UnityEngine.Rendering.CommandBuffer obj = (UnityEngine.Rendering.CommandBuffer)ToLua.ToObject(L, 1);
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.ToObject(L, 2);
				UnityEngine.Matrix4x4 arg1 = (UnityEngine.Matrix4x4)ToLua.ToObject(L, 3);
				UnityEngine.Material arg2 = (UnityEngine.Material)ToLua.ToObject(L, 4);
				int arg3 = (int)LuaDLL.lua_tonumber(L, 5);
				int arg4 = (int)LuaDLL.lua_tonumber(L, 6);
				obj.DrawMesh(arg0, arg1, arg2, arg3, arg4);
				return 0;
			}
			else if (count == 7 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Rendering.CommandBuffer), typeof(UnityEngine.Mesh), typeof(UnityEngine.Matrix4x4), typeof(UnityEngine.Material), typeof(int), typeof(int), typeof(UnityEngine.MaterialPropertyBlock)))
			{
				UnityEngine.Rendering.CommandBuffer obj = (UnityEngine.Rendering.CommandBuffer)ToLua.ToObject(L, 1);
				UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.ToObject(L, 2);
				UnityEngine.Matrix4x4 arg1 = (UnityEngine.Matrix4x4)ToLua.ToObject(L, 3);
				UnityEngine.Material arg2 = (UnityEngine.Material)ToLua.ToObject(L, 4);
				int arg3 = (int)LuaDLL.lua_tonumber(L, 5);
				int arg4 = (int)LuaDLL.lua_tonumber(L, 6);
				UnityEngine.MaterialPropertyBlock arg5 = (UnityEngine.MaterialPropertyBlock)ToLua.ToObject(L, 7);
				obj.DrawMesh(arg0, arg1, arg2, arg3, arg4, arg5);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UnityEngine.Rendering.CommandBuffer.DrawMesh");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DrawRenderer(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 3 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Rendering.CommandBuffer), typeof(UnityEngine.Renderer), typeof(UnityEngine.Material)))
			{
				UnityEngine.Rendering.CommandBuffer obj = (UnityEngine.Rendering.CommandBuffer)ToLua.ToObject(L, 1);
				UnityEngine.Renderer arg0 = (UnityEngine.Renderer)ToLua.ToObject(L, 2);
				UnityEngine.Material arg1 = (UnityEngine.Material)ToLua.ToObject(L, 3);
				obj.DrawRenderer(arg0, arg1);
				return 0;
			}
			else if (count == 4 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Rendering.CommandBuffer), typeof(UnityEngine.Renderer), typeof(UnityEngine.Material), typeof(int)))
			{
				UnityEngine.Rendering.CommandBuffer obj = (UnityEngine.Rendering.CommandBuffer)ToLua.ToObject(L, 1);
				UnityEngine.Renderer arg0 = (UnityEngine.Renderer)ToLua.ToObject(L, 2);
				UnityEngine.Material arg1 = (UnityEngine.Material)ToLua.ToObject(L, 3);
				int arg2 = (int)LuaDLL.lua_tonumber(L, 4);
				obj.DrawRenderer(arg0, arg1, arg2);
				return 0;
			}
			else if (count == 5 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Rendering.CommandBuffer), typeof(UnityEngine.Renderer), typeof(UnityEngine.Material), typeof(int), typeof(int)))
			{
				UnityEngine.Rendering.CommandBuffer obj = (UnityEngine.Rendering.CommandBuffer)ToLua.ToObject(L, 1);
				UnityEngine.Renderer arg0 = (UnityEngine.Renderer)ToLua.ToObject(L, 2);
				UnityEngine.Material arg1 = (UnityEngine.Material)ToLua.ToObject(L, 3);
				int arg2 = (int)LuaDLL.lua_tonumber(L, 4);
				int arg3 = (int)LuaDLL.lua_tonumber(L, 5);
				obj.DrawRenderer(arg0, arg1, arg2, arg3);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UnityEngine.Rendering.CommandBuffer.DrawRenderer");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DrawProcedural(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 6 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Rendering.CommandBuffer), typeof(UnityEngine.Matrix4x4), typeof(UnityEngine.Material), typeof(int), typeof(UnityEngine.MeshTopology), typeof(int)))
			{
				UnityEngine.Rendering.CommandBuffer obj = (UnityEngine.Rendering.CommandBuffer)ToLua.ToObject(L, 1);
				UnityEngine.Matrix4x4 arg0 = (UnityEngine.Matrix4x4)ToLua.ToObject(L, 2);
				UnityEngine.Material arg1 = (UnityEngine.Material)ToLua.ToObject(L, 3);
				int arg2 = (int)LuaDLL.lua_tonumber(L, 4);
				UnityEngine.MeshTopology arg3 = (UnityEngine.MeshTopology)ToLua.ToObject(L, 5);
				int arg4 = (int)LuaDLL.lua_tonumber(L, 6);
				obj.DrawProcedural(arg0, arg1, arg2, arg3, arg4);
				return 0;
			}
			else if (count == 7 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Rendering.CommandBuffer), typeof(UnityEngine.Matrix4x4), typeof(UnityEngine.Material), typeof(int), typeof(UnityEngine.MeshTopology), typeof(int), typeof(int)))
			{
				UnityEngine.Rendering.CommandBuffer obj = (UnityEngine.Rendering.CommandBuffer)ToLua.ToObject(L, 1);
				UnityEngine.Matrix4x4 arg0 = (UnityEngine.Matrix4x4)ToLua.ToObject(L, 2);
				UnityEngine.Material arg1 = (UnityEngine.Material)ToLua.ToObject(L, 3);
				int arg2 = (int)LuaDLL.lua_tonumber(L, 4);
				UnityEngine.MeshTopology arg3 = (UnityEngine.MeshTopology)ToLua.ToObject(L, 5);
				int arg4 = (int)LuaDLL.lua_tonumber(L, 6);
				int arg5 = (int)LuaDLL.lua_tonumber(L, 7);
				obj.DrawProcedural(arg0, arg1, arg2, arg3, arg4, arg5);
				return 0;
			}
			else if (count == 8 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Rendering.CommandBuffer), typeof(UnityEngine.Matrix4x4), typeof(UnityEngine.Material), typeof(int), typeof(UnityEngine.MeshTopology), typeof(int), typeof(int), typeof(UnityEngine.MaterialPropertyBlock)))
			{
				UnityEngine.Rendering.CommandBuffer obj = (UnityEngine.Rendering.CommandBuffer)ToLua.ToObject(L, 1);
				UnityEngine.Matrix4x4 arg0 = (UnityEngine.Matrix4x4)ToLua.ToObject(L, 2);
				UnityEngine.Material arg1 = (UnityEngine.Material)ToLua.ToObject(L, 3);
				int arg2 = (int)LuaDLL.lua_tonumber(L, 4);
				UnityEngine.MeshTopology arg3 = (UnityEngine.MeshTopology)ToLua.ToObject(L, 5);
				int arg4 = (int)LuaDLL.lua_tonumber(L, 6);
				int arg5 = (int)LuaDLL.lua_tonumber(L, 7);
				UnityEngine.MaterialPropertyBlock arg6 = (UnityEngine.MaterialPropertyBlock)ToLua.ToObject(L, 8);
				obj.DrawProcedural(arg0, arg1, arg2, arg3, arg4, arg5, arg6);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UnityEngine.Rendering.CommandBuffer.DrawProcedural");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DrawProceduralIndirect(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 6 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Rendering.CommandBuffer), typeof(UnityEngine.Matrix4x4), typeof(UnityEngine.Material), typeof(int), typeof(UnityEngine.MeshTopology), typeof(UnityEngine.ComputeBuffer)))
			{
				UnityEngine.Rendering.CommandBuffer obj = (UnityEngine.Rendering.CommandBuffer)ToLua.ToObject(L, 1);
				UnityEngine.Matrix4x4 arg0 = (UnityEngine.Matrix4x4)ToLua.ToObject(L, 2);
				UnityEngine.Material arg1 = (UnityEngine.Material)ToLua.ToObject(L, 3);
				int arg2 = (int)LuaDLL.lua_tonumber(L, 4);
				UnityEngine.MeshTopology arg3 = (UnityEngine.MeshTopology)ToLua.ToObject(L, 5);
				UnityEngine.ComputeBuffer arg4 = (UnityEngine.ComputeBuffer)ToLua.ToObject(L, 6);
				obj.DrawProceduralIndirect(arg0, arg1, arg2, arg3, arg4);
				return 0;
			}
			else if (count == 7 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Rendering.CommandBuffer), typeof(UnityEngine.Matrix4x4), typeof(UnityEngine.Material), typeof(int), typeof(UnityEngine.MeshTopology), typeof(UnityEngine.ComputeBuffer), typeof(int)))
			{
				UnityEngine.Rendering.CommandBuffer obj = (UnityEngine.Rendering.CommandBuffer)ToLua.ToObject(L, 1);
				UnityEngine.Matrix4x4 arg0 = (UnityEngine.Matrix4x4)ToLua.ToObject(L, 2);
				UnityEngine.Material arg1 = (UnityEngine.Material)ToLua.ToObject(L, 3);
				int arg2 = (int)LuaDLL.lua_tonumber(L, 4);
				UnityEngine.MeshTopology arg3 = (UnityEngine.MeshTopology)ToLua.ToObject(L, 5);
				UnityEngine.ComputeBuffer arg4 = (UnityEngine.ComputeBuffer)ToLua.ToObject(L, 6);
				int arg5 = (int)LuaDLL.lua_tonumber(L, 7);
				obj.DrawProceduralIndirect(arg0, arg1, arg2, arg3, arg4, arg5);
				return 0;
			}
			else if (count == 8 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Rendering.CommandBuffer), typeof(UnityEngine.Matrix4x4), typeof(UnityEngine.Material), typeof(int), typeof(UnityEngine.MeshTopology), typeof(UnityEngine.ComputeBuffer), typeof(int), typeof(UnityEngine.MaterialPropertyBlock)))
			{
				UnityEngine.Rendering.CommandBuffer obj = (UnityEngine.Rendering.CommandBuffer)ToLua.ToObject(L, 1);
				UnityEngine.Matrix4x4 arg0 = (UnityEngine.Matrix4x4)ToLua.ToObject(L, 2);
				UnityEngine.Material arg1 = (UnityEngine.Material)ToLua.ToObject(L, 3);
				int arg2 = (int)LuaDLL.lua_tonumber(L, 4);
				UnityEngine.MeshTopology arg3 = (UnityEngine.MeshTopology)ToLua.ToObject(L, 5);
				UnityEngine.ComputeBuffer arg4 = (UnityEngine.ComputeBuffer)ToLua.ToObject(L, 6);
				int arg5 = (int)LuaDLL.lua_tonumber(L, 7);
				UnityEngine.MaterialPropertyBlock arg6 = (UnityEngine.MaterialPropertyBlock)ToLua.ToObject(L, 8);
				obj.DrawProceduralIndirect(arg0, arg1, arg2, arg3, arg4, arg5, arg6);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UnityEngine.Rendering.CommandBuffer.DrawProceduralIndirect");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetRenderTarget(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Rendering.CommandBuffer), typeof(UnityEngine.Rendering.RenderTargetIdentifier)))
			{
				UnityEngine.Rendering.CommandBuffer obj = (UnityEngine.Rendering.CommandBuffer)ToLua.ToObject(L, 1);
				UnityEngine.Rendering.RenderTargetIdentifier arg0 = (UnityEngine.Rendering.RenderTargetIdentifier)ToLua.ToObject(L, 2);
				obj.SetRenderTarget(arg0);
				return 0;
			}
			else if (count == 3 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Rendering.CommandBuffer), typeof(UnityEngine.Rendering.RenderTargetIdentifier), typeof(UnityEngine.Rendering.RenderTargetIdentifier)))
			{
				UnityEngine.Rendering.CommandBuffer obj = (UnityEngine.Rendering.CommandBuffer)ToLua.ToObject(L, 1);
				UnityEngine.Rendering.RenderTargetIdentifier arg0 = (UnityEngine.Rendering.RenderTargetIdentifier)ToLua.ToObject(L, 2);
				UnityEngine.Rendering.RenderTargetIdentifier arg1 = (UnityEngine.Rendering.RenderTargetIdentifier)ToLua.ToObject(L, 3);
				obj.SetRenderTarget(arg0, arg1);
				return 0;
			}
			else if (count == 3 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Rendering.CommandBuffer), typeof(UnityEngine.Rendering.RenderTargetIdentifier[]), typeof(UnityEngine.Rendering.RenderTargetIdentifier)))
			{
				UnityEngine.Rendering.CommandBuffer obj = (UnityEngine.Rendering.CommandBuffer)ToLua.ToObject(L, 1);
				UnityEngine.Rendering.RenderTargetIdentifier[] arg0 = ToLua.CheckObjectArray<UnityEngine.Rendering.RenderTargetIdentifier>(L, 2);
				UnityEngine.Rendering.RenderTargetIdentifier arg1 = (UnityEngine.Rendering.RenderTargetIdentifier)ToLua.ToObject(L, 3);
				obj.SetRenderTarget(arg0, arg1);
				return 0;
			}
			else if (count == 3 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Rendering.CommandBuffer), typeof(UnityEngine.Rendering.RenderTargetIdentifier), typeof(int)))
			{
				UnityEngine.Rendering.CommandBuffer obj = (UnityEngine.Rendering.CommandBuffer)ToLua.ToObject(L, 1);
				UnityEngine.Rendering.RenderTargetIdentifier arg0 = (UnityEngine.Rendering.RenderTargetIdentifier)ToLua.ToObject(L, 2);
				int arg1 = (int)LuaDLL.lua_tonumber(L, 3);
				obj.SetRenderTarget(arg0, arg1);
				return 0;
			}
			else if (count == 4 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Rendering.CommandBuffer), typeof(UnityEngine.Rendering.RenderTargetIdentifier), typeof(UnityEngine.Rendering.RenderTargetIdentifier), typeof(int)))
			{
				UnityEngine.Rendering.CommandBuffer obj = (UnityEngine.Rendering.CommandBuffer)ToLua.ToObject(L, 1);
				UnityEngine.Rendering.RenderTargetIdentifier arg0 = (UnityEngine.Rendering.RenderTargetIdentifier)ToLua.ToObject(L, 2);
				UnityEngine.Rendering.RenderTargetIdentifier arg1 = (UnityEngine.Rendering.RenderTargetIdentifier)ToLua.ToObject(L, 3);
				int arg2 = (int)LuaDLL.lua_tonumber(L, 4);
				obj.SetRenderTarget(arg0, arg1, arg2);
				return 0;
			}
			else if (count == 4 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Rendering.CommandBuffer), typeof(UnityEngine.Rendering.RenderTargetIdentifier), typeof(int), typeof(UnityEngine.CubemapFace)))
			{
				UnityEngine.Rendering.CommandBuffer obj = (UnityEngine.Rendering.CommandBuffer)ToLua.ToObject(L, 1);
				UnityEngine.Rendering.RenderTargetIdentifier arg0 = (UnityEngine.Rendering.RenderTargetIdentifier)ToLua.ToObject(L, 2);
				int arg1 = (int)LuaDLL.lua_tonumber(L, 3);
				UnityEngine.CubemapFace arg2 = (UnityEngine.CubemapFace)ToLua.ToObject(L, 4);
				obj.SetRenderTarget(arg0, arg1, arg2);
				return 0;
			}
			else if (count == 5 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Rendering.CommandBuffer), typeof(UnityEngine.Rendering.RenderTargetIdentifier), typeof(UnityEngine.Rendering.RenderTargetIdentifier), typeof(int), typeof(UnityEngine.CubemapFace)))
			{
				UnityEngine.Rendering.CommandBuffer obj = (UnityEngine.Rendering.CommandBuffer)ToLua.ToObject(L, 1);
				UnityEngine.Rendering.RenderTargetIdentifier arg0 = (UnityEngine.Rendering.RenderTargetIdentifier)ToLua.ToObject(L, 2);
				UnityEngine.Rendering.RenderTargetIdentifier arg1 = (UnityEngine.Rendering.RenderTargetIdentifier)ToLua.ToObject(L, 3);
				int arg2 = (int)LuaDLL.lua_tonumber(L, 4);
				UnityEngine.CubemapFace arg3 = (UnityEngine.CubemapFace)ToLua.ToObject(L, 5);
				obj.SetRenderTarget(arg0, arg1, arg2, arg3);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UnityEngine.Rendering.CommandBuffer.SetRenderTarget");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Blit(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 3 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Rendering.CommandBuffer), typeof(UnityEngine.Rendering.RenderTargetIdentifier), typeof(UnityEngine.Rendering.RenderTargetIdentifier)))
			{
				UnityEngine.Rendering.CommandBuffer obj = (UnityEngine.Rendering.CommandBuffer)ToLua.ToObject(L, 1);
				UnityEngine.Rendering.RenderTargetIdentifier arg0 = (UnityEngine.Rendering.RenderTargetIdentifier)ToLua.ToObject(L, 2);
				UnityEngine.Rendering.RenderTargetIdentifier arg1 = (UnityEngine.Rendering.RenderTargetIdentifier)ToLua.ToObject(L, 3);
				obj.Blit(arg0, arg1);
				return 0;
			}
			else if (count == 3 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Rendering.CommandBuffer), typeof(UnityEngine.Texture), typeof(UnityEngine.Rendering.RenderTargetIdentifier)))
			{
				UnityEngine.Rendering.CommandBuffer obj = (UnityEngine.Rendering.CommandBuffer)ToLua.ToObject(L, 1);
				UnityEngine.Texture arg0 = (UnityEngine.Texture)ToLua.ToObject(L, 2);
				UnityEngine.Rendering.RenderTargetIdentifier arg1 = (UnityEngine.Rendering.RenderTargetIdentifier)ToLua.ToObject(L, 3);
				obj.Blit(arg0, arg1);
				return 0;
			}
			else if (count == 4 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Rendering.CommandBuffer), typeof(UnityEngine.Rendering.RenderTargetIdentifier), typeof(UnityEngine.Rendering.RenderTargetIdentifier), typeof(UnityEngine.Material)))
			{
				UnityEngine.Rendering.CommandBuffer obj = (UnityEngine.Rendering.CommandBuffer)ToLua.ToObject(L, 1);
				UnityEngine.Rendering.RenderTargetIdentifier arg0 = (UnityEngine.Rendering.RenderTargetIdentifier)ToLua.ToObject(L, 2);
				UnityEngine.Rendering.RenderTargetIdentifier arg1 = (UnityEngine.Rendering.RenderTargetIdentifier)ToLua.ToObject(L, 3);
				UnityEngine.Material arg2 = (UnityEngine.Material)ToLua.ToObject(L, 4);
				obj.Blit(arg0, arg1, arg2);
				return 0;
			}
			else if (count == 4 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Rendering.CommandBuffer), typeof(UnityEngine.Texture), typeof(UnityEngine.Rendering.RenderTargetIdentifier), typeof(UnityEngine.Material)))
			{
				UnityEngine.Rendering.CommandBuffer obj = (UnityEngine.Rendering.CommandBuffer)ToLua.ToObject(L, 1);
				UnityEngine.Texture arg0 = (UnityEngine.Texture)ToLua.ToObject(L, 2);
				UnityEngine.Rendering.RenderTargetIdentifier arg1 = (UnityEngine.Rendering.RenderTargetIdentifier)ToLua.ToObject(L, 3);
				UnityEngine.Material arg2 = (UnityEngine.Material)ToLua.ToObject(L, 4);
				obj.Blit(arg0, arg1, arg2);
				return 0;
			}
			else if (count == 5 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Rendering.CommandBuffer), typeof(UnityEngine.Rendering.RenderTargetIdentifier), typeof(UnityEngine.Rendering.RenderTargetIdentifier), typeof(UnityEngine.Material), typeof(int)))
			{
				UnityEngine.Rendering.CommandBuffer obj = (UnityEngine.Rendering.CommandBuffer)ToLua.ToObject(L, 1);
				UnityEngine.Rendering.RenderTargetIdentifier arg0 = (UnityEngine.Rendering.RenderTargetIdentifier)ToLua.ToObject(L, 2);
				UnityEngine.Rendering.RenderTargetIdentifier arg1 = (UnityEngine.Rendering.RenderTargetIdentifier)ToLua.ToObject(L, 3);
				UnityEngine.Material arg2 = (UnityEngine.Material)ToLua.ToObject(L, 4);
				int arg3 = (int)LuaDLL.lua_tonumber(L, 5);
				obj.Blit(arg0, arg1, arg2, arg3);
				return 0;
			}
			else if (count == 5 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Rendering.CommandBuffer), typeof(UnityEngine.Texture), typeof(UnityEngine.Rendering.RenderTargetIdentifier), typeof(UnityEngine.Material), typeof(int)))
			{
				UnityEngine.Rendering.CommandBuffer obj = (UnityEngine.Rendering.CommandBuffer)ToLua.ToObject(L, 1);
				UnityEngine.Texture arg0 = (UnityEngine.Texture)ToLua.ToObject(L, 2);
				UnityEngine.Rendering.RenderTargetIdentifier arg1 = (UnityEngine.Rendering.RenderTargetIdentifier)ToLua.ToObject(L, 3);
				UnityEngine.Material arg2 = (UnityEngine.Material)ToLua.ToObject(L, 4);
				int arg3 = (int)LuaDLL.lua_tonumber(L, 5);
				obj.Blit(arg0, arg1, arg2, arg3);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UnityEngine.Rendering.CommandBuffer.Blit");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetTemporaryRT(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 4 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Rendering.CommandBuffer), typeof(int), typeof(int), typeof(int)))
			{
				UnityEngine.Rendering.CommandBuffer obj = (UnityEngine.Rendering.CommandBuffer)ToLua.ToObject(L, 1);
				int arg0 = (int)LuaDLL.lua_tonumber(L, 2);
				int arg1 = (int)LuaDLL.lua_tonumber(L, 3);
				int arg2 = (int)LuaDLL.lua_tonumber(L, 4);
				obj.GetTemporaryRT(arg0, arg1, arg2);
				return 0;
			}
			else if (count == 5 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Rendering.CommandBuffer), typeof(int), typeof(int), typeof(int), typeof(int)))
			{
				UnityEngine.Rendering.CommandBuffer obj = (UnityEngine.Rendering.CommandBuffer)ToLua.ToObject(L, 1);
				int arg0 = (int)LuaDLL.lua_tonumber(L, 2);
				int arg1 = (int)LuaDLL.lua_tonumber(L, 3);
				int arg2 = (int)LuaDLL.lua_tonumber(L, 4);
				int arg3 = (int)LuaDLL.lua_tonumber(L, 5);
				obj.GetTemporaryRT(arg0, arg1, arg2, arg3);
				return 0;
			}
			else if (count == 6 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Rendering.CommandBuffer), typeof(int), typeof(int), typeof(int), typeof(int), typeof(UnityEngine.FilterMode)))
			{
				UnityEngine.Rendering.CommandBuffer obj = (UnityEngine.Rendering.CommandBuffer)ToLua.ToObject(L, 1);
				int arg0 = (int)LuaDLL.lua_tonumber(L, 2);
				int arg1 = (int)LuaDLL.lua_tonumber(L, 3);
				int arg2 = (int)LuaDLL.lua_tonumber(L, 4);
				int arg3 = (int)LuaDLL.lua_tonumber(L, 5);
				UnityEngine.FilterMode arg4 = (UnityEngine.FilterMode)ToLua.ToObject(L, 6);
				obj.GetTemporaryRT(arg0, arg1, arg2, arg3, arg4);
				return 0;
			}
			else if (count == 7 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Rendering.CommandBuffer), typeof(int), typeof(int), typeof(int), typeof(int), typeof(UnityEngine.FilterMode), typeof(UnityEngine.RenderTextureFormat)))
			{
				UnityEngine.Rendering.CommandBuffer obj = (UnityEngine.Rendering.CommandBuffer)ToLua.ToObject(L, 1);
				int arg0 = (int)LuaDLL.lua_tonumber(L, 2);
				int arg1 = (int)LuaDLL.lua_tonumber(L, 3);
				int arg2 = (int)LuaDLL.lua_tonumber(L, 4);
				int arg3 = (int)LuaDLL.lua_tonumber(L, 5);
				UnityEngine.FilterMode arg4 = (UnityEngine.FilterMode)ToLua.ToObject(L, 6);
				UnityEngine.RenderTextureFormat arg5 = (UnityEngine.RenderTextureFormat)ToLua.ToObject(L, 7);
				obj.GetTemporaryRT(arg0, arg1, arg2, arg3, arg4, arg5);
				return 0;
			}
			else if (count == 8 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Rendering.CommandBuffer), typeof(int), typeof(int), typeof(int), typeof(int), typeof(UnityEngine.FilterMode), typeof(UnityEngine.RenderTextureFormat), typeof(UnityEngine.RenderTextureReadWrite)))
			{
				UnityEngine.Rendering.CommandBuffer obj = (UnityEngine.Rendering.CommandBuffer)ToLua.ToObject(L, 1);
				int arg0 = (int)LuaDLL.lua_tonumber(L, 2);
				int arg1 = (int)LuaDLL.lua_tonumber(L, 3);
				int arg2 = (int)LuaDLL.lua_tonumber(L, 4);
				int arg3 = (int)LuaDLL.lua_tonumber(L, 5);
				UnityEngine.FilterMode arg4 = (UnityEngine.FilterMode)ToLua.ToObject(L, 6);
				UnityEngine.RenderTextureFormat arg5 = (UnityEngine.RenderTextureFormat)ToLua.ToObject(L, 7);
				UnityEngine.RenderTextureReadWrite arg6 = (UnityEngine.RenderTextureReadWrite)ToLua.ToObject(L, 8);
				obj.GetTemporaryRT(arg0, arg1, arg2, arg3, arg4, arg5, arg6);
				return 0;
			}
			else if (count == 9 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Rendering.CommandBuffer), typeof(int), typeof(int), typeof(int), typeof(int), typeof(UnityEngine.FilterMode), typeof(UnityEngine.RenderTextureFormat), typeof(UnityEngine.RenderTextureReadWrite), typeof(int)))
			{
				UnityEngine.Rendering.CommandBuffer obj = (UnityEngine.Rendering.CommandBuffer)ToLua.ToObject(L, 1);
				int arg0 = (int)LuaDLL.lua_tonumber(L, 2);
				int arg1 = (int)LuaDLL.lua_tonumber(L, 3);
				int arg2 = (int)LuaDLL.lua_tonumber(L, 4);
				int arg3 = (int)LuaDLL.lua_tonumber(L, 5);
				UnityEngine.FilterMode arg4 = (UnityEngine.FilterMode)ToLua.ToObject(L, 6);
				UnityEngine.RenderTextureFormat arg5 = (UnityEngine.RenderTextureFormat)ToLua.ToObject(L, 7);
				UnityEngine.RenderTextureReadWrite arg6 = (UnityEngine.RenderTextureReadWrite)ToLua.ToObject(L, 8);
				int arg7 = (int)LuaDLL.lua_tonumber(L, 9);
				obj.GetTemporaryRT(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UnityEngine.Rendering.CommandBuffer.GetTemporaryRT");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ReleaseTemporaryRT(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Rendering.CommandBuffer obj = (UnityEngine.Rendering.CommandBuffer)ToLua.CheckObject(L, 1, typeof(UnityEngine.Rendering.CommandBuffer));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.ReleaseTemporaryRT(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ClearRenderTarget(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 4 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Rendering.CommandBuffer), typeof(bool), typeof(bool), typeof(UnityEngine.Color)))
			{
				UnityEngine.Rendering.CommandBuffer obj = (UnityEngine.Rendering.CommandBuffer)ToLua.ToObject(L, 1);
				bool arg0 = LuaDLL.lua_toboolean(L, 2);
				bool arg1 = LuaDLL.lua_toboolean(L, 3);
				UnityEngine.Color arg2 = ToLua.ToColor(L, 4);
				obj.ClearRenderTarget(arg0, arg1, arg2);
				return 0;
			}
			else if (count == 5 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Rendering.CommandBuffer), typeof(bool), typeof(bool), typeof(UnityEngine.Color), typeof(float)))
			{
				UnityEngine.Rendering.CommandBuffer obj = (UnityEngine.Rendering.CommandBuffer)ToLua.ToObject(L, 1);
				bool arg0 = LuaDLL.lua_toboolean(L, 2);
				bool arg1 = LuaDLL.lua_toboolean(L, 3);
				UnityEngine.Color arg2 = ToLua.ToColor(L, 4);
				float arg3 = (float)LuaDLL.lua_tonumber(L, 5);
				obj.ClearRenderTarget(arg0, arg1, arg2, arg3);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UnityEngine.Rendering.CommandBuffer.ClearRenderTarget");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetGlobalFloat(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 3 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Rendering.CommandBuffer), typeof(int), typeof(float)))
			{
				UnityEngine.Rendering.CommandBuffer obj = (UnityEngine.Rendering.CommandBuffer)ToLua.ToObject(L, 1);
				int arg0 = (int)LuaDLL.lua_tonumber(L, 2);
				float arg1 = (float)LuaDLL.lua_tonumber(L, 3);
				obj.SetGlobalFloat(arg0, arg1);
				return 0;
			}
			else if (count == 3 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Rendering.CommandBuffer), typeof(string), typeof(float)))
			{
				UnityEngine.Rendering.CommandBuffer obj = (UnityEngine.Rendering.CommandBuffer)ToLua.ToObject(L, 1);
				string arg0 = ToLua.ToString(L, 2);
				float arg1 = (float)LuaDLL.lua_tonumber(L, 3);
				obj.SetGlobalFloat(arg0, arg1);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UnityEngine.Rendering.CommandBuffer.SetGlobalFloat");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetGlobalVector(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 3 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Rendering.CommandBuffer), typeof(int), typeof(UnityEngine.Vector4)))
			{
				UnityEngine.Rendering.CommandBuffer obj = (UnityEngine.Rendering.CommandBuffer)ToLua.ToObject(L, 1);
				int arg0 = (int)LuaDLL.lua_tonumber(L, 2);
				UnityEngine.Vector4 arg1 = ToLua.ToVector4(L, 3);
				obj.SetGlobalVector(arg0, arg1);
				return 0;
			}
			else if (count == 3 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Rendering.CommandBuffer), typeof(string), typeof(UnityEngine.Vector4)))
			{
				UnityEngine.Rendering.CommandBuffer obj = (UnityEngine.Rendering.CommandBuffer)ToLua.ToObject(L, 1);
				string arg0 = ToLua.ToString(L, 2);
				UnityEngine.Vector4 arg1 = ToLua.ToVector4(L, 3);
				obj.SetGlobalVector(arg0, arg1);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UnityEngine.Rendering.CommandBuffer.SetGlobalVector");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetGlobalColor(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 3 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Rendering.CommandBuffer), typeof(int), typeof(UnityEngine.Color)))
			{
				UnityEngine.Rendering.CommandBuffer obj = (UnityEngine.Rendering.CommandBuffer)ToLua.ToObject(L, 1);
				int arg0 = (int)LuaDLL.lua_tonumber(L, 2);
				UnityEngine.Color arg1 = ToLua.ToColor(L, 3);
				obj.SetGlobalColor(arg0, arg1);
				return 0;
			}
			else if (count == 3 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Rendering.CommandBuffer), typeof(string), typeof(UnityEngine.Color)))
			{
				UnityEngine.Rendering.CommandBuffer obj = (UnityEngine.Rendering.CommandBuffer)ToLua.ToObject(L, 1);
				string arg0 = ToLua.ToString(L, 2);
				UnityEngine.Color arg1 = ToLua.ToColor(L, 3);
				obj.SetGlobalColor(arg0, arg1);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UnityEngine.Rendering.CommandBuffer.SetGlobalColor");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetGlobalMatrix(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 3 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Rendering.CommandBuffer), typeof(int), typeof(UnityEngine.Matrix4x4)))
			{
				UnityEngine.Rendering.CommandBuffer obj = (UnityEngine.Rendering.CommandBuffer)ToLua.ToObject(L, 1);
				int arg0 = (int)LuaDLL.lua_tonumber(L, 2);
				UnityEngine.Matrix4x4 arg1 = (UnityEngine.Matrix4x4)ToLua.ToObject(L, 3);
				obj.SetGlobalMatrix(arg0, arg1);
				return 0;
			}
			else if (count == 3 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Rendering.CommandBuffer), typeof(string), typeof(UnityEngine.Matrix4x4)))
			{
				UnityEngine.Rendering.CommandBuffer obj = (UnityEngine.Rendering.CommandBuffer)ToLua.ToObject(L, 1);
				string arg0 = ToLua.ToString(L, 2);
				UnityEngine.Matrix4x4 arg1 = (UnityEngine.Matrix4x4)ToLua.ToObject(L, 3);
				obj.SetGlobalMatrix(arg0, arg1);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UnityEngine.Rendering.CommandBuffer.SetGlobalMatrix");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetGlobalTexture(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 3 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Rendering.CommandBuffer), typeof(int), typeof(UnityEngine.Rendering.RenderTargetIdentifier)))
			{
				UnityEngine.Rendering.CommandBuffer obj = (UnityEngine.Rendering.CommandBuffer)ToLua.ToObject(L, 1);
				int arg0 = (int)LuaDLL.lua_tonumber(L, 2);
				UnityEngine.Rendering.RenderTargetIdentifier arg1 = (UnityEngine.Rendering.RenderTargetIdentifier)ToLua.ToObject(L, 3);
				obj.SetGlobalTexture(arg0, arg1);
				return 0;
			}
			else if (count == 3 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.Rendering.CommandBuffer), typeof(string), typeof(UnityEngine.Rendering.RenderTargetIdentifier)))
			{
				UnityEngine.Rendering.CommandBuffer obj = (UnityEngine.Rendering.CommandBuffer)ToLua.ToObject(L, 1);
				string arg0 = ToLua.ToString(L, 2);
				UnityEngine.Rendering.RenderTargetIdentifier arg1 = (UnityEngine.Rendering.RenderTargetIdentifier)ToLua.ToObject(L, 3);
				obj.SetGlobalTexture(arg0, arg1);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UnityEngine.Rendering.CommandBuffer.SetGlobalTexture");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetShadowSamplingMode(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			UnityEngine.Rendering.CommandBuffer obj = (UnityEngine.Rendering.CommandBuffer)ToLua.CheckObject(L, 1, typeof(UnityEngine.Rendering.CommandBuffer));
			UnityEngine.Rendering.RenderTargetIdentifier arg0 = (UnityEngine.Rendering.RenderTargetIdentifier)ToLua.CheckObject(L, 2, typeof(UnityEngine.Rendering.RenderTargetIdentifier));
			UnityEngine.Rendering.ShadowSamplingMode arg1 = (UnityEngine.Rendering.ShadowSamplingMode)ToLua.CheckObject(L, 3, typeof(UnityEngine.Rendering.ShadowSamplingMode));
			obj.SetShadowSamplingMode(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IssuePluginEvent(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			UnityEngine.Rendering.CommandBuffer obj = (UnityEngine.Rendering.CommandBuffer)ToLua.CheckObject(L, 1, typeof(UnityEngine.Rendering.CommandBuffer));
			System.IntPtr arg0 = (System.IntPtr)LuaDLL.lua_touserdata(L, 2);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			obj.IssuePluginEvent(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_name(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Rendering.CommandBuffer obj = (UnityEngine.Rendering.CommandBuffer)o;
			string ret = obj.name;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index name on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_sizeInBytes(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Rendering.CommandBuffer obj = (UnityEngine.Rendering.CommandBuffer)o;
			int ret = obj.sizeInBytes;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index sizeInBytes on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_name(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Rendering.CommandBuffer obj = (UnityEngine.Rendering.CommandBuffer)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.name = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index name on a nil value" : e.Message);
		}
	}
}

