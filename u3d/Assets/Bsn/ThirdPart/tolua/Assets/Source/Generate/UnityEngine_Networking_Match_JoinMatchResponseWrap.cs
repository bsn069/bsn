//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class UnityEngine_Networking_Match_JoinMatchResponseWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(UnityEngine.Networking.Match.JoinMatchResponse), typeof(UnityEngine.Networking.Match.BasicResponse));
		L.RegFunction("ToString", ToString);
		L.RegFunction("Parse", Parse);
		L.RegFunction("New", _CreateUnityEngine_Networking_Match_JoinMatchResponse);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("address", get_address, set_address);
		L.RegVar("port", get_port, set_port);
		L.RegVar("networkId", get_networkId, set_networkId);
		L.RegVar("accessTokenString", get_accessTokenString, set_accessTokenString);
		L.RegVar("nodeId", get_nodeId, set_nodeId);
		L.RegVar("usingRelay", get_usingRelay, set_usingRelay);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateUnityEngine_Networking_Match_JoinMatchResponse(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				UnityEngine.Networking.Match.JoinMatchResponse obj = new UnityEngine.Networking.Match.JoinMatchResponse();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: UnityEngine.Networking.Match.JoinMatchResponse.New");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ToString(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UnityEngine.Networking.Match.JoinMatchResponse obj = (UnityEngine.Networking.Match.JoinMatchResponse)ToLua.CheckObject(L, 1, typeof(UnityEngine.Networking.Match.JoinMatchResponse));
			string o = obj.ToString();
			LuaDLL.lua_pushstring(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Parse(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Networking.Match.JoinMatchResponse obj = (UnityEngine.Networking.Match.JoinMatchResponse)ToLua.CheckObject(L, 1, typeof(UnityEngine.Networking.Match.JoinMatchResponse));
			object arg0 = ToLua.ToVarObject(L, 2);
			obj.Parse(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_address(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Networking.Match.JoinMatchResponse obj = (UnityEngine.Networking.Match.JoinMatchResponse)o;
			string ret = obj.address;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index address on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_port(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Networking.Match.JoinMatchResponse obj = (UnityEngine.Networking.Match.JoinMatchResponse)o;
			int ret = obj.port;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index port on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_networkId(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Networking.Match.JoinMatchResponse obj = (UnityEngine.Networking.Match.JoinMatchResponse)o;
			UnityEngine.Networking.Types.NetworkID ret = obj.networkId;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index networkId on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_accessTokenString(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Networking.Match.JoinMatchResponse obj = (UnityEngine.Networking.Match.JoinMatchResponse)o;
			string ret = obj.accessTokenString;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index accessTokenString on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_nodeId(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Networking.Match.JoinMatchResponse obj = (UnityEngine.Networking.Match.JoinMatchResponse)o;
			UnityEngine.Networking.Types.NodeID ret = obj.nodeId;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index nodeId on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_usingRelay(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Networking.Match.JoinMatchResponse obj = (UnityEngine.Networking.Match.JoinMatchResponse)o;
			bool ret = obj.usingRelay;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index usingRelay on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_address(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Networking.Match.JoinMatchResponse obj = (UnityEngine.Networking.Match.JoinMatchResponse)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.address = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index address on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_port(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Networking.Match.JoinMatchResponse obj = (UnityEngine.Networking.Match.JoinMatchResponse)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.port = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index port on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_networkId(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Networking.Match.JoinMatchResponse obj = (UnityEngine.Networking.Match.JoinMatchResponse)o;
			UnityEngine.Networking.Types.NetworkID arg0 = (UnityEngine.Networking.Types.NetworkID)ToLua.CheckObject(L, 2, typeof(UnityEngine.Networking.Types.NetworkID));
			obj.networkId = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index networkId on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_accessTokenString(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Networking.Match.JoinMatchResponse obj = (UnityEngine.Networking.Match.JoinMatchResponse)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.accessTokenString = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index accessTokenString on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_nodeId(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Networking.Match.JoinMatchResponse obj = (UnityEngine.Networking.Match.JoinMatchResponse)o;
			UnityEngine.Networking.Types.NodeID arg0 = (UnityEngine.Networking.Types.NodeID)ToLua.CheckObject(L, 2, typeof(UnityEngine.Networking.Types.NodeID));
			obj.nodeId = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index nodeId on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_usingRelay(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Networking.Match.JoinMatchResponse obj = (UnityEngine.Networking.Match.JoinMatchResponse)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.usingRelay = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index usingRelay on a nil value" : e.Message);
		}
	}
}

